{
  "hash": "64bbaa9a412393b7e5f6068e401395de",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1\"\nauthor: \"Rahul Somu\"\ndescription: \"Reading in data and creating a post\"\ndate: \"02/22/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n  - railroads\n  - faostat\n  - wildbirds\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a dataset, and\n\n2)  describe the dataset using both words and any supporting information (e.g., tables, etc)\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, using the correct R package and command.\n\n-   railroad_2012_clean_county.csv ⭐\n-   birds.csv ⭐⭐\n-   FAOstat\\*.csv ⭐⭐\n-   wild_bird_data.xlsx ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐⭐\n\nFind the `_data` folder, located inside the `posts` folder. Then you can read in the data, using either one of the `readr` standard tidy read commands, or a specialized package such as `readxl`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_birds <- read_csv(\"_data/birds.csv\")\n```\n:::\n\n\nAdd any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation.\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#summary of data frame\nsummary(df_birds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Domain Code           Domain            Area Code        Area          \n Length:30977       Length:30977       Min.   :   1   Length:30977      \n Class :character   Class :character   1st Qu.:  79   Class :character  \n Mode  :character   Mode  :character   Median : 156   Mode  :character  \n                                       Mean   :1202                     \n                                       3rd Qu.: 231                     \n                                       Max.   :5504                     \n                                                                        \n  Element Code    Element            Item Code        Item          \n Min.   :5112   Length:30977       Min.   :1057   Length:30977      \n 1st Qu.:5112   Class :character   1st Qu.:1057   Class :character  \n Median :5112   Mode  :character   Median :1068   Mode  :character  \n Mean   :5112                      Mean   :1066                     \n 3rd Qu.:5112                      3rd Qu.:1072                     \n Max.   :5112                      Max.   :1083                     \n                                                                    \n   Year Code         Year          Unit               Value         \n Min.   :1961   Min.   :1961   Length:30977       Min.   :       0  \n 1st Qu.:1976   1st Qu.:1976   Class :character   1st Qu.:     171  \n Median :1992   Median :1992   Mode  :character   Median :    1800  \n Mean   :1991   Mean   :1991                      Mean   :   99411  \n 3rd Qu.:2005   3rd Qu.:2005                      3rd Qu.:   15404  \n Max.   :2018   Max.   :2018                      Max.   :23707134  \n                                                  NA's   :1036      \n     Flag           Flag Description  \n Length:30977       Length:30977      \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n```\n:::\n\n```{.r .cell-code}\n#get shape and head of data frame\ndim(df_birds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 30977    14\n```\n:::\n\n```{.r .cell-code}\nhead(df_birds,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 14\n   Domain Cod…¹ Domain Area …² Area  Eleme…³ Element Item …⁴ Item  Year …⁵  Year\n   <chr>        <chr>    <dbl> <chr>   <dbl> <chr>     <dbl> <chr>   <dbl> <dbl>\n 1 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1961  1961\n 2 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1962  1962\n 3 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1963  1963\n 4 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1964  1964\n 5 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1965  1965\n 6 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1966  1966\n 7 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1967  1967\n 8 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1968  1968\n 9 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1969  1969\n10 QA           Live …       2 Afgh…    5112 Stocks     1057 Chic…    1970  1970\n# … with 4 more variables: Unit <chr>, Value <dbl>, Flag <chr>,\n#   `Flag Description` <chr>, and abbreviated variable names ¹​`Domain Code`,\n#   ²​`Area Code`, ³​`Element Code`, ⁴​`Item Code`, ⁵​`Year Code`\n```\n:::\n\n```{.r .cell-code}\n# get unique area fields and items\narea_unique <- unique(df_birds[ , c(\"Area Code\", \"Area\")])\narea_unique\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 248 × 2\n   `Area Code` Area               \n         <dbl> <chr>              \n 1           2 Afghanistan        \n 2           3 Albania            \n 3           4 Algeria            \n 4           5 American Samoa     \n 5           7 Angola             \n 6           8 Antigua and Barbuda\n 7           9 Argentina          \n 8           1 Armenia            \n 9          22 Aruba              \n10          10 Australia          \n# … with 238 more rows\n```\n:::\n\n```{.r .cell-code}\nitems_unique <- unique(df_birds[,c(\"Item\")])\n\n#get rows with empty flags\nsum(is.na(select(df_birds, Flag)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10773\n```\n:::\n\n```{.r .cell-code}\n#get range of year column\nyear <- select(df_birds, Year)\nrange_year <- c(min(year),max(year))\nrange_year\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1961 2018\n```\n:::\n\n```{.r .cell-code}\n#Get Unique flags with all variables\nflags_unique <- unique(df_birds[ , c(\"Domain\", \"Area\",\"Item\",\"Year\",\"Flag\",\"Flag Description\")])\nflags_unique\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30,977 × 6\n   Domain       Area        Item      Year Flag  `Flag Description`\n   <chr>        <chr>       <chr>    <dbl> <chr> <chr>             \n 1 Live Animals Afghanistan Chickens  1961 F     FAO estimate      \n 2 Live Animals Afghanistan Chickens  1962 F     FAO estimate      \n 3 Live Animals Afghanistan Chickens  1963 F     FAO estimate      \n 4 Live Animals Afghanistan Chickens  1964 F     FAO estimate      \n 5 Live Animals Afghanistan Chickens  1965 F     FAO estimate      \n 6 Live Animals Afghanistan Chickens  1966 F     FAO estimate      \n 7 Live Animals Afghanistan Chickens  1967 F     FAO estimate      \n 8 Live Animals Afghanistan Chickens  1968 <NA>  Official data     \n 9 Live Animals Afghanistan Chickens  1969 F     FAO estimate      \n10 Live Animals Afghanistan Chickens  1970 F     FAO estimate      \n# … with 30,967 more rows\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}