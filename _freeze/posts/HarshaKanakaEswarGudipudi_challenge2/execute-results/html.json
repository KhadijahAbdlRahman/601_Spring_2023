{
  "hash": "fc88fa400909e6b019bb517eaa82832b",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2\"\nauthor: \"Harsha Kanaka Eswar Gudipudi\"\ndescription: \"Data wrangling: using group() and summarise()\"\ndate: \"05/15/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - Harsha Kanaka Eswar Gudipudi\n  - birds.csv\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a data set, and describe the data using both words and any supporting information (e.g., tables, etc)\n2)  provide summary statistics for different interesting groups within the data, and interpret those statistics\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, available in the `posts/_data` folder, using the correct R package and command.\n\n-   railroad\\*.csv or StateCounty2012.xls ⭐\n-   FAOstat\\*.csv or birds.csv ⭐⭐⭐\n-   hotel_bookings.csv ⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_csv('_data/birds.csv', show_col_types = FALSE)\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  `Domain Code` Domain      `Area Code` Area  `Element Code` Element `Item Code`\n  <chr>         <chr>             <dbl> <chr>          <dbl> <chr>         <dbl>\n1 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n2 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n3 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n4 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n5 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n6 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n# ℹ 7 more variables: Item <chr>, `Year Code` <dbl>, Year <dbl>, Unit <chr>,\n#   Value <dbl>, Flag <chr>, `Flag Description` <chr>\n```\n:::\n:::\n\n\nAdd any comments or documentation as needed. More challenging data may require additional code chunks and documentation.\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\nDescription : This data description presents information on live bird stocks like chicken, geese,etc in different areas such as Afganisthan, Albania, Algeria..etc, for the years from 1961 to 2018.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Domain Code           Domain            Area Code        Area          \n Length:30977       Length:30977       Min.   :   1   Length:30977      \n Class :character   Class :character   1st Qu.:  79   Class :character  \n Mode  :character   Mode  :character   Median : 156   Mode  :character  \n                                       Mean   :1202                     \n                                       3rd Qu.: 231                     \n                                       Max.   :5504                     \n                                                                        \n  Element Code    Element            Item Code        Item          \n Min.   :5112   Length:30977       Min.   :1057   Length:30977      \n 1st Qu.:5112   Class :character   1st Qu.:1057   Class :character  \n Median :5112   Mode  :character   Median :1068   Mode  :character  \n Mean   :5112                      Mean   :1066                     \n 3rd Qu.:5112                      3rd Qu.:1072                     \n Max.   :5112                      Max.   :1083                     \n                                                                    \n   Year Code         Year          Unit               Value         \n Min.   :1961   Min.   :1961   Length:30977       Min.   :       0  \n 1st Qu.:1976   1st Qu.:1976   Class :character   1st Qu.:     171  \n Median :1992   Median :1992   Mode  :character   Median :    1800  \n Mean   :1991   Mean   :1991                      Mean   :   99411  \n 3rd Qu.:2005   3rd Qu.:2005                      3rd Qu.:   15404  \n Max.   :2018   Max.   :2018                      Max.   :23707134  \n                                                  NA's   :1036      \n     Flag           Flag Description  \n Length:30977       Length:30977      \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n```\n:::\n\n```{.r .cell-code}\ndim(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 30977    14\n```\n:::\n:::\n\n\nAll varitey of live stocks in the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique_items <- unique(df$Item)\nnum_unique_items <- length(unique_items)\ncat(paste(\"There are\", num_unique_items, \"unique Varitey of animals present in the dataset\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThere are 5 unique Varitey of animals present in the dataset\n```\n:::\n\n```{.r .cell-code}\ncat(paste(unique_items, collapse = \", \"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nChickens, Ducks, Geese and guinea fowls, Turkeys, Pigeons, other birds\n```\n:::\n:::\n\nThe data is collected from various areas like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique_items <- unique(df$Area)\nnum_unique_items <- length(unique_items)\ncat(paste(\"Total no of areas: \", num_unique_items))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTotal no of areas:  248\n```\n:::\n\n```{.r .cell-code}\ncat(paste(unique_items, collapse = \", \"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAfghanistan, Albania, Algeria, American Samoa, Angola, Antigua and Barbuda, Argentina, Armenia, Aruba, Australia, Austria, Azerbaijan, Bahamas, Bahrain, Bangladesh, Barbados, Belarus, Belgium, Belgium-Luxembourg, Belize, Benin, Bermuda, Bhutan, Bolivia (Plurinational State of), Bosnia and Herzegovina, Botswana, Brazil, Brunei Darussalam, Bulgaria, Burkina Faso, Burundi, Cabo Verde, Cambodia, Cameroon, Canada, Cayman Islands, Central African Republic, Chad, Chile, China, Hong Kong SAR, China, Macao SAR, China, mainland, China, Taiwan Province of, Colombia, Comoros, Congo, Cook Islands, Costa Rica, Côte d'Ivoire, Croatia, Cuba, Cyprus, Czechia, Czechoslovakia, Democratic People's Republic of Korea, Democratic Republic of the Congo, Denmark, Dominica, Dominican Republic, Ecuador, Egypt, El Salvador, Equatorial Guinea, Eritrea, Estonia, Eswatini, Ethiopia, Ethiopia PDR, Falkland Islands (Malvinas), Fiji, Finland, France, French Guyana, French Polynesia, Gabon, Gambia, Georgia, Germany, Ghana, Greece, Grenada, Guadeloupe, Guam, Guatemala, Guinea, Guinea-Bissau, Guyana, Haiti, Honduras, Hungary, Iceland, India, Indonesia, Iran (Islamic Republic of), Iraq, Ireland, Israel, Italy, Jamaica, Japan, Jordan, Kazakhstan, Kenya, Kiribati, Kuwait, Kyrgyzstan, Lao People's Democratic Republic, Latvia, Lebanon, Lesotho, Liberia, Libya, Liechtenstein, Lithuania, Luxembourg, Madagascar, Malawi, Malaysia, Mali, Malta, Martinique, Mauritania, Mauritius, Mexico, Micronesia (Federated States of), Mongolia, Montenegro, Montserrat, Morocco, Mozambique, Myanmar, Namibia, Nauru, Nepal, Netherlands, Netherlands Antilles (former), New Caledonia, New Zealand, Nicaragua, Niger, Nigeria, Niue, North Macedonia, Norway, Oman, Pacific Islands Trust Territory, Pakistan, Palestine, Panama, Papua New Guinea, Paraguay, Peru, Philippines, Poland, Portugal, Puerto Rico, Qatar, Republic of Korea, Republic of Moldova, Réunion, Romania, Russian Federation, Rwanda, Saint Helena, Ascension and Tristan da Cunha, Saint Kitts and Nevis, Saint Lucia, Saint Pierre and Miquelon, Saint Vincent and the Grenadines, Samoa, Sao Tome and Principe, Saudi Arabia, Senegal, Serbia, Serbia and Montenegro, Seychelles, Sierra Leone, Singapore, Slovakia, Slovenia, Solomon Islands, Somalia, South Africa, South Sudan, Spain, Sri Lanka, Sudan, Sudan (former), Suriname, Sweden, Switzerland, Syrian Arab Republic, Tajikistan, Thailand, Timor-Leste, Togo, Tokelau, Tonga, Trinidad and Tobago, Tunisia, Turkey, Turkmenistan, Tuvalu, Uganda, Ukraine, United Arab Emirates, United Kingdom of Great Britain and Northern Ireland, United Republic of Tanzania, United States of America, United States Virgin Islands, Uruguay, USSR, Uzbekistan, Vanuatu, Venezuela (Bolivarian Republic of), Viet Nam, Wallis and Futuna Islands, Yemen, Yugoslav SFR, Zambia, Zimbabwe, World, Africa, Eastern Africa, Middle Africa, Northern Africa, Southern Africa, Western Africa, Americas, Northern America, Central America, Caribbean, South America, Asia, Central Asia, Eastern Asia, Southern Asia, South-eastern Asia, Western Asia, Europe, Eastern Europe, Northern Europe, Southern Europe, Western Europe, Oceania, Australia and New Zealand, Melanesia, Micronesia, Polynesia\n```\n:::\n:::\n\n\n\n## Provide Grouped Summary Statistics\n\nConduct some exploratory data analysis, using dplyr commands such as `group_by()`, `select()`, `filter()`, and `summarise()`. Find the central tendency (mean, median, mode) and dispersion (standard deviation, mix/max/quantile) for different subgroups within the data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nbirds_grouped <- df %>%\n  group_by(Year)\n  \nprint(\"Data grouped by year:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Data grouped by year:\"\n```\n:::\n\n```{.r .cell-code}\nprint(birds_grouped)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30,977 × 14\n# Groups:   Year [58]\n   `Domain Code` Domain     `Area Code` Area  `Element Code` Element `Item Code`\n   <chr>         <chr>            <dbl> <chr>          <dbl> <chr>         <dbl>\n 1 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 2 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 3 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 4 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 5 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 6 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 7 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 8 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 9 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n10 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n# ℹ 30,967 more rows\n# ℹ 7 more variables: Item <chr>, `Year Code` <dbl>, Year <dbl>, Unit <chr>,\n#   Value <dbl>, Flag <chr>, `Flag Description` <chr>\n```\n:::\n\n```{.r .cell-code}\n# Filter the data to include only chickens\nchickens_only <- birds_grouped %>%\n  filter(Item == \"Chickens\")\n  \nprint(\"Data filtered to include only chickens:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Data filtered to include only chickens:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chickens_only)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13,074 × 14\n# Groups:   Year [58]\n   `Domain Code` Domain     `Area Code` Area  `Element Code` Element `Item Code`\n   <chr>         <chr>            <dbl> <chr>          <dbl> <chr>         <dbl>\n 1 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 2 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 3 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 4 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 5 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 6 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 7 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 8 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n 9 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n10 QA            Live Anim…           2 Afgh…           5112 Stocks         1057\n# ℹ 13,064 more rows\n# ℹ 7 more variables: Item <chr>, `Year Code` <dbl>, Year <dbl>, Unit <chr>,\n#   Value <dbl>, Flag <chr>, `Flag Description` <chr>\n```\n:::\n\n```{.r .cell-code}\n# Calculate the mean, median, and mode of chicken stocks for each year\nchicken_summary <- chickens_only %>%\n  summarise(mean_stocks = mean(Value, na.rm = TRUE),\n            median_stocks = median(Value, na.rm = TRUE),\n            mode_stocks = as.numeric(names(sort(-table(Value))))[1])\n\nprint(\"Summary statistics of chicken stocks:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Summary statistics of chicken stocks:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chicken_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 58 × 4\n    Year mean_stocks median_stocks mode_stocks\n   <dbl>       <dbl>         <dbl>       <dbl>\n 1  1961      74060.         4184         1400\n 2  1962      76753.         4300           10\n 3  1963      78922.         4500            2\n 4  1964      80213.         4600           10\n 5  1965      82458.         4930           10\n 6  1966      83880.         5208.          45\n 7  1967      88047.         5056           50\n 8  1968      91003.         5250           60\n 9  1969      94121.         6000           40\n10  1970      98297.         6070.          90\n# ℹ 48 more rows\n```\n:::\n\n```{.r .cell-code}\n# Calculate the minimum, maximum, and quantiles of chicken stocks for each year\nchicken_range <- chickens_only %>%\n  summarise(min_stocks = min(Value, na.rm = TRUE),\n            max_stocks = max(Value, na.rm = TRUE),\n            q1_stocks = quantile(Value, 0.25, na.rm = TRUE),\n            q3_stocks = quantile(Value, 0.75, na.rm = TRUE))\n\nprint(\"Range of chicken stocks:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Range of chicken stocks:\"\n```\n:::\n\n```{.r .cell-code}\nprint(chicken_range)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 58 × 5\n    Year min_stocks max_stocks q1_stocks q3_stocks\n   <dbl>      <dbl>      <dbl>     <dbl>     <dbl>\n 1  1961          1    3906690      314.    22016 \n 2  1962          1    4048728      326.    22298 \n 3  1963          2    4163131      330     25000 \n 4  1964          2    4231221      372     25305 \n 5  1965          2    4349674      392.    26000 \n 6  1966          2    4445629      377.    24091.\n 7  1967          2    4666511      401.    26213.\n 8  1968          2    4823170      428.    25729.\n 9  1969          2    4988438      450     26237 \n10  1970          2    5209733      488.    28497.\n# ℹ 48 more rows\n```\n:::\n:::\n\n\n### Explain and Interpret\n\nBe sure to explain why you choose a specific group. Comment on the interpretation of any interesting differences between groups that you uncover. This section can be integrated with the exploratory data analysis, just be sure it is included.\n\nHere, I choose to group the data by year to see if there are any interesting trends in chicken stocks over time .The chicken_summary and chicken_range tables provide useful insights into the central tendency and dispersion of chicken stocks over years. we can see the highest and lowest mean, median, and mode chicken stocks, as well as the minimum, maximum, and quartile ranges. We can also compare the trends across different years and see if there are any interesting patterns.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}