{
  "hash": "242a8543f06f6fcd24e05528df74b6c5",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Matthew Weiner\"\ndescription: \"Joining Data\"\ndate: \"05/15/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - Matthew_Weiner\n  - challenge_8\n  - snl\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nactors <- read_csv(\"_data/snl_actors.csv\")\ncasts <- read_csv(\"_data/snl_casts.csv\")\nseasons <- read_csv(\"_data/snl_seasons.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  aid            url           type  gender \n  <chr>          <chr>         <chr> <chr>  \n1 Kate McKinnon  /Cast/?KaMc   cast  female \n2 Alex Moffat    /Cast/?AlMo   cast  male   \n3 Ego Nwodim     /Cast/?EgNw   cast  unknown\n4 Chris Redd     /Cast/?ChRe   cast  male   \n5 Kenan Thompson /Cast/?KeTh   cast  male   \n6 Carey Mulligan /Guests/?3677 guest andy   \n```\n:::\n\n```{.r .cell-code}\ncolnames(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"    \"url\"    \"type\"   \"gender\"\n```\n:::\n\n```{.r .cell-code}\nhead(casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  aid                sid featured first_epid last_epid update_…¹ n_epi…² seaso…³\n  <chr>            <dbl> <lgl>         <dbl>     <dbl> <lgl>       <dbl>   <dbl>\n1 A. Whitney Brown    11 TRUE       19860222        NA FALSE           8   0.444\n2 A. Whitney Brown    12 TRUE             NA        NA FALSE          20   1    \n3 A. Whitney Brown    13 TRUE             NA        NA FALSE          13   1    \n4 A. Whitney Brown    14 TRUE             NA        NA FALSE          20   1    \n5 A. Whitney Brown    15 TRUE             NA        NA FALSE          20   1    \n6 A. Whitney Brown    16 TRUE             NA        NA FALSE          20   1    \n# … with abbreviated variable names ¹​update_anchor, ²​n_episodes,\n#   ³​season_fraction\n```\n:::\n\n```{.r .cell-code}\ncolnames(casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"             \"sid\"             \"featured\"        \"first_epid\"     \n[5] \"last_epid\"       \"update_anchor\"   \"n_episodes\"      \"season_fraction\"\n```\n:::\n\n```{.r .cell-code}\nhead(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n    sid  year first_epid last_epid n_episodes\n  <dbl> <dbl>      <dbl>     <dbl>      <dbl>\n1     1  1975   19751011  19760731         24\n2     2  1976   19760918  19770521         22\n3     3  1977   19770924  19780520         20\n4     4  1978   19781007  19790526         20\n5     5  1979   19791013  19800524         20\n6     6  1980   19801115  19810411         13\n```\n:::\n\n```{.r .cell-code}\ncolnames(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"        \"year\"       \"first_epid\" \"last_epid\"  \"n_episodes\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2306    4\n```\n:::\n\n```{.r .cell-code}\ndim(casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 614   8\n```\n:::\n\n```{.r .cell-code}\ndim(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46  5\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThese datasets contain various information about the television program, Saturday Night Live (SNL). The `snl_casts` dataset contains information on the episodes and seasons in which each actor was cast. The `snl_seasons` dataset contains information about each season such as the number of episodes, when the first and last episode airs, and the year that the season started. Finally, the `snl_actors` dataset contains information about each actor that appeared in SNL such as their role and the type of appearance. The actors dataset contains 2306 rows and 4 columns, while the casts dataset contains 614 rows and 8 columns. Finally, the seasons dataset contains just 46 rows and 5 columns.\n\n## Tidy Data (as needed)\n\nThe first thing we want to check is if there is any missing data in any of the three datasets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(actors))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 57\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(casts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1161\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(seasons))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\nWe can indeed see that both the actors dataset and the casts dataset contain rows with missing values. However, at this point we are going to allow these rows to remain in the dataset to prevent the loss of otherwise useful information.\n\nAnother thing we can do to tidy up our dataset is re-format the start and end date of the seasons. Currently, they are in a format where the date is being stored as a `dbl` however we would rather these be a date object. We can mutate the data to accomplish this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nseasons <- mutate(seasons,first_epid = as.Date(as.character(first_epid),format=\"%Y%m%d\"), last_epid = as.Date(as.character(last_epid), format = \"%Y%m%d\"))\n\n#sanity check\ntable(seasons$first_epid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n1975-10-11 1976-09-18 1977-09-24 1978-10-07 1979-10-13 1980-11-15 1981-10-03 \n         1          1          1          1          1          1          1 \n1982-09-25 1983-10-08 1984-10-06 1985-11-09 1986-10-11 1987-10-17 1988-10-08 \n         1          1          1          1          1          1          1 \n1989-09-30 1990-09-29 1991-09-28 1992-09-26 1993-09-25 1994-09-24 1995-09-30 \n         1          1          1          1          1          1          1 \n1996-09-28 1997-09-27 1998-09-26 1999-10-02 2000-10-07 2001-09-29 2002-10-05 \n         1          1          1          1          1          1          1 \n2003-10-04 2004-10-02 2005-10-01 2006-09-30 2007-09-29 2008-09-13 2009-09-26 \n         1          1          1          1          1          1          1 \n2010-09-25 2011-09-24 2012-09-15 2013-09-28 2014-09-27 2015-10-03 2016-10-01 \n         1          1          1          1          1          1          1 \n2017-09-30 2018-09-29 2019-09-28 2020-10-03 \n         1          1          1          1 \n```\n:::\n\n```{.r .cell-code}\ntable(seasons$last_epid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n1976-07-31 1977-05-21 1978-05-20 1979-05-26 1980-05-24 1981-04-11 1982-05-22 \n         1          1          1          1          1          1          1 \n1983-05-14 1984-05-12 1985-04-13 1986-05-24 1987-05-23 1988-02-27 1989-05-20 \n         1          1          1          1          1          1          1 \n1990-05-19 1991-05-18 1992-05-16 1993-05-15 1994-05-14 1995-05-13 1996-05-18 \n         1          1          1          1          1          1          1 \n1997-05-17 1998-05-09 1999-05-15 2000-05-20 2001-05-19 2002-05-18 2003-05-17 \n         1          1          1          1          1          1          1 \n2004-05-15 2005-05-21 2006-05-20 2007-05-19 2008-05-17 2009-05-16 2010-05-15 \n         1          1          1          1          1          1          1 \n2011-05-21 2012-05-19 2013-05-18 2014-05-17 2015-05-16 2016-05-21 2017-05-20 \n         1          1          1          1          1          1          1 \n2018-05-19 2019-05-18 2020-05-09 2021-04-10 \n         1          1          1          1 \n```\n:::\n:::\n\n\nWe can also apply this to the casts dataset:\n\n::: {.cell}\n\n```{.r .cell-code}\ncasts <- mutate(casts,first_epid = as.Date(as.character(first_epid),format=\"%Y%m%d\"), last_epid = as.Date(as.character(last_epid), format = \"%Y%m%d\"))\n\n#sanity check\n\ntable(casts$first_epid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n1977-01-15 1979-10-13 1979-11-17 1979-12-15 1980-01-26 1980-04-09 1980-12-13 \n         1          1          2          1          3          2          3 \n1980-12-20 1981-04-11 1986-02-22 1986-03-22 1989-01-21 1989-03-25 1990-10-27 \n         1          5          1          1          1          1          1 \n1990-11-10 1991-02-09 1991-11-16 1993-10-02 1993-10-09 1994-03-12 1995-01-14 \n         2          2          2          1          2          1          1 \n1995-02-25 1995-04-08 1996-03-16 1999-10-23 2000-05-06 2002-03-02 2005-05-07 \n         1          1          1          1          1          1          1 \n2005-11-12 2008-02-23 2008-11-15 2012-04-07 2014-01-18 2014-03-01 2014-10-25 \n         1          1          2          1          1          1          1 \n```\n:::\n\n```{.r .cell-code}\ntable(seasons$last_epid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n1976-07-31 1977-05-21 1978-05-20 1979-05-26 1980-05-24 1981-04-11 1982-05-22 \n         1          1          1          1          1          1          1 \n1983-05-14 1984-05-12 1985-04-13 1986-05-24 1987-05-23 1988-02-27 1989-05-20 \n         1          1          1          1          1          1          1 \n1990-05-19 1991-05-18 1992-05-16 1993-05-15 1994-05-14 1995-05-13 1996-05-18 \n         1          1          1          1          1          1          1 \n1997-05-17 1998-05-09 1999-05-15 2000-05-20 2001-05-19 2002-05-18 2003-05-17 \n         1          1          1          1          1          1          1 \n2004-05-15 2005-05-21 2006-05-20 2007-05-19 2008-05-17 2009-05-16 2010-05-15 \n         1          1          1          1          1          1          1 \n2011-05-21 2012-05-19 2013-05-18 2014-05-17 2015-05-16 2016-05-21 2017-05-20 \n         1          1          1          1          1          1          1 \n2018-05-19 2019-05-18 2020-05-09 2021-04-10 \n         1          1          1          1 \n```\n:::\n:::\n\n\n\n## Join Data\n\nI intend to join the seasons and casts dataset based on the season ID, `sid`, and then join this with the actors dataset based on the actor ID, `aid`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseasons_casts <- seasons %>% left_join(casts,by=\"sid\")\n\n#sanity check \nseasons_casts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 12\n     sid  year first_ep…¹ last_epi…² n_epi…³ aid   featu…⁴ first_ep…⁵ last_epi…⁶\n   <dbl> <dbl> <date>     <date>       <dbl> <chr> <lgl>   <date>     <date>    \n 1     1  1975 1975-10-11 1976-07-31      24 Gild… FALSE   NA         NA        \n 2     1  1975 1975-10-11 1976-07-31      24 Mich… FALSE   NA         1975-11-08\n 3     1  1975 1975-10-11 1976-07-31      24 Lara… FALSE   NA         NA        \n 4     1  1975 1975-10-11 1976-07-31      24 Garr… FALSE   NA         NA        \n 5     1  1975 1975-10-11 1976-07-31      24 Jane… FALSE   NA         NA        \n 6     1  1975 1975-10-11 1976-07-31      24 Geor… FALSE   NA         1975-10-11\n 7     1  1975 1975-10-11 1976-07-31      24 Chev… FALSE   NA         NA        \n 8     1  1975 1975-10-11 1976-07-31      24 John… FALSE   NA         NA        \n 9     1  1975 1975-10-11 1976-07-31      24 Dan … FALSE   NA         NA        \n10     2  1976 1976-09-18 1977-05-21      22 Gild… FALSE   NA         NA        \n# … with 604 more rows, 3 more variables: update_anchor <lgl>,\n#   n_episodes.y <dbl>, season_fraction <dbl>, and abbreviated variable names\n#   ¹​first_epid.x, ²​last_epid.x, ³​n_episodes.x, ⁴​featured, ⁵​first_epid.y,\n#   ⁶​last_epid.y\n```\n:::\n\n```{.r .cell-code}\ncolnames(seasons_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"sid\"             \"year\"            \"first_epid.x\"    \"last_epid.x\"    \n [5] \"n_episodes.x\"    \"aid\"             \"featured\"        \"first_epid.y\"   \n [9] \"last_epid.y\"     \"update_anchor\"   \"n_episodes.y\"    \"season_fraction\"\n```\n:::\n:::\n\n\nNow we will join with the actors dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseasons_casts_actors <- seasons_casts %>% \n  left_join(actors, by = \"aid\")\n\n#sanity check\nseasons_casts_actors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 15\n     sid  year first_ep…¹ last_epi…² n_epi…³ aid   featu…⁴ first_ep…⁵ last_epi…⁶\n   <dbl> <dbl> <date>     <date>       <dbl> <chr> <lgl>   <date>     <date>    \n 1     1  1975 1975-10-11 1976-07-31      24 Gild… FALSE   NA         NA        \n 2     1  1975 1975-10-11 1976-07-31      24 Mich… FALSE   NA         1975-11-08\n 3     1  1975 1975-10-11 1976-07-31      24 Lara… FALSE   NA         NA        \n 4     1  1975 1975-10-11 1976-07-31      24 Garr… FALSE   NA         NA        \n 5     1  1975 1975-10-11 1976-07-31      24 Jane… FALSE   NA         NA        \n 6     1  1975 1975-10-11 1976-07-31      24 Geor… FALSE   NA         1975-10-11\n 7     1  1975 1975-10-11 1976-07-31      24 Chev… FALSE   NA         NA        \n 8     1  1975 1975-10-11 1976-07-31      24 John… FALSE   NA         NA        \n 9     1  1975 1975-10-11 1976-07-31      24 Dan … FALSE   NA         NA        \n10     2  1976 1976-09-18 1977-05-21      22 Gild… FALSE   NA         NA        \n# … with 604 more rows, 6 more variables: update_anchor <lgl>,\n#   n_episodes.y <dbl>, season_fraction <dbl>, url <chr>, type <chr>,\n#   gender <chr>, and abbreviated variable names ¹​first_epid.x, ²​last_epid.x,\n#   ³​n_episodes.x, ⁴​featured, ⁵​first_epid.y, ⁶​last_epid.y\n```\n:::\n\n```{.r .cell-code}\ncolnames(seasons_casts_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"sid\"             \"year\"            \"first_epid.x\"    \"last_epid.x\"    \n [5] \"n_episodes.x\"    \"aid\"             \"featured\"        \"first_epid.y\"   \n [9] \"last_epid.y\"     \"update_anchor\"   \"n_episodes.y\"    \"season_fraction\"\n[13] \"url\"             \"type\"            \"gender\"         \n```\n:::\n:::\n\n\n\nNow that we have properly joined these datsets together we can attempt to gain more insights into the data. \n\nFor example, one interesting thing we could do is to look at the number of episodes per season for each gender:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(data = seasons_casts_actors, aes(x = year, y = n_episodes.y, fill = gender)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Year\", y = \"Number of Episodes\", title = \"Number of Episodes per Season\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Matthew_Weiner_Challenge_8_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Matthew_Weiner_Challenge_8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}