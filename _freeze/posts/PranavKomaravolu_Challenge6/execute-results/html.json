{
  "hash": "7777890cc49e5a6ec4d54ba31a5d087f",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Pranav Komaravolu\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"05/19/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\noptions(dplyr.summarise.inform = FALSE)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n<!--\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least one graph including time (evolution)\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n5)  Create at least one graph depicting part-whole or flow relationships\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n-->\n## Data Description\n\nReading the data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"_data/hotel_bookings.csv\", show_col_types = FALSE)\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  hotel   is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n  <chr>     <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n1 Resort…       0     342    2015 July         27       1       0       0      2\n2 Resort…       0     737    2015 July         27       1       0       0      2\n3 Resort…       0       7    2015 July         27       1       0       1      1\n4 Resort…       0      13    2015 July         27       1       0       1      1\n5 Resort…       0      14    2015 July         27       1       0       2      2\n6 Resort…       0      14    2015 July         27       1       0       2      2\n# … with 22 more variables: children <dbl>, babies <dbl>, meal <chr>,\n#   country <chr>, market_segment <chr>, distribution_channel <chr>,\n#   is_repeated_guest <dbl>, previous_cancellations <dbl>,\n#   previous_bookings_not_canceled <dbl>, reserved_room_type <chr>,\n#   assigned_room_type <chr>, booking_changes <dbl>, deposit_type <chr>,\n#   agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n:::\n\nColumns in the dataset:\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"hotel\"                          \"is_canceled\"                   \n [3] \"lead_time\"                      \"arrival_date_year\"             \n [5] \"arrival_date_month\"             \"arrival_date_week_number\"      \n [7] \"arrival_date_day_of_month\"      \"stays_in_weekend_nights\"       \n [9] \"stays_in_week_nights\"           \"adults\"                        \n[11] \"children\"                       \"babies\"                        \n[13] \"meal\"                           \"country\"                       \n[15] \"market_segment\"                 \"distribution_channel\"          \n[17] \"is_repeated_guest\"              \"previous_cancellations\"        \n[19] \"previous_bookings_not_canceled\" \"reserved_room_type\"            \n[21] \"assigned_room_type\"             \"booking_changes\"               \n[23] \"deposit_type\"                   \"agent\"                         \n[25] \"company\"                        \"days_in_waiting_list\"          \n[27] \"customer_type\"                  \"adr\"                           \n[29] \"required_car_parking_spaces\"    \"total_of_special_requests\"     \n[31] \"reservation_status\"             \"reservation_status_date\"       \n```\n:::\n:::\n\nThe dimensions of the dataset are as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 119390     32\n```\n:::\n:::\n\nThere are 32 columns and 119390 rows in the dataset.\n\n## Tidying the Data\nI plan on visualizing the number of people who stayed in a hotel during each year so the dataset can be assumed to be tidy and can be used for visualization.\n\n## Time Dependent Visualization\nFirst I want to analyse at which of these years the hotels had a maximum number of people staying at the hotel. To do that first I will have to filter out the people who cancelled from the dataset, then we can group the data on hotel and arrival_date_year and this data could be summarised to obtain the number of bookings in each of the hotels during different years. The command is as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\nyearly_data <- data%>%\n  filter(is_canceled == 0)%>%\n  group_by(hotel, arrival_date_year)%>%\n  summarise(yearly_count = n())\nhead(yearly_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n# Groups:   hotel [2]\n  hotel        arrival_date_year yearly_count\n  <chr>                    <dbl>        <int>\n1 City Hotel                2015         7678\n2 City Hotel                2016        22733\n3 City Hotel                2017        15817\n4 Resort Hotel              2015         6176\n5 Resort Hotel              2016        13637\n6 Resort Hotel              2017         9125\n```\n:::\n:::\n\nThis data can be efficiently depicted using a histogram as it involves frequencies.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(yearly_data)+\n  geom_bar(aes(x = arrival_date_year, y = yearly_count, fill= hotel), stat = \"identity\", position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](PranavKomaravolu_Challenge6_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nTherefore from the above bar plot both the hotels seem to perform well in the year 2016, hosting more number of guests than any other year.\n\n## Visualizing Part-Whole Relationships\nSince there are some cancelled bookings in the dataset we can plot the total bookings while depicting a part with canceled bookings. To get such a visualization the following command can be run:\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_yearly_data <- data%>%\n                      group_by(hotel, arrival_date_year) %>%\n                      summarise(yearly_counts = n(),\n                                canceled_bookings = sum(is_canceled))\nhead(total_yearly_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n# Groups:   hotel [2]\n  hotel        arrival_date_year yearly_counts canceled_bookings\n  <chr>                    <dbl>         <int>             <dbl>\n1 City Hotel                2015         13682              6004\n2 City Hotel                2016         38140             15407\n3 City Hotel                2017         27508             11691\n4 Resort Hotel              2015          8314              2138\n5 Resort Hotel              2016         18567              4930\n6 Resort Hotel              2017         13179              4054\n```\n:::\n:::\n\nNow the plot depicting the different parts of the data is as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(total_yearly_data)+\n  geom_col(aes(x = arrival_date_year, y = yearly_counts, fill = canceled_bookings))\n```\n\n::: {.cell-output-display}\n![](PranavKomaravolu_Challenge6_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "PranavKomaravolu_Challenge6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}