{
  "hash": "ded6c766fed210e00285b99ca32e3fb1",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2 by Jinxia Niu\"\nauthor: \"Jinxia Niu\"\ndesription: \"Data wrangling: using group() and summarise()\"\ndate: \"03/14/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - Jinxia Niu\n  - birds.csv\n\n---\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a data set, and describe the data using both words and any supporting information (e.g., tables, etc)\n2)  provide summary statistics for different interesting groups within the data, and interpret those statistics\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, available in the `posts/_data` folder, using the correct R package and command.\n\n-   railroad\\*.csv or StateCounty2012.xls ⭐\n-   FAOstat\\*.csv or birds.csv ⭐⭐⭐\n-   hotel_bookings.csv ⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in contrib.url(repos, \"source\"): trying to use CRAN without setting a mirror\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nbirds <- read_csv(\"_data/birds.csv\") %>%\n  select(-c(contains(\"Code\"),Element,Domain,Unit))%>% \n  filter(Flag!=\"A\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 30977 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Domain Code, Domain, Area, Element, Item, Unit, Flag, Flag Description\ndbl (6): Area Code, Element Code, Item Code, Year Code, Year, Value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nView(birds)\n```\n:::\n\n\n## Describe the data\n\nBirds.csv that includes estimates of the stock of five different types of poultry (Chickens, Ducks, Geese and guinea fowls, Turkeys, and Pigeons/Others) for 248 areas for 58 years between 1961-2018. Estimated stocks are given in 1000 head.\n\n\n## Provide Grouped Summary Statistics\nConduct some exploratory data analysis, using dplyr commands such as `group_by()`, `select()`, `filter()`, and `summarise()`. Find the central tendency (mean, median, mode) and dispersion (standard deviation, mix/max/quantile) for different subgroups within the data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbirds %>%\n  group_by(Item)%>%\n  summarise(avg_stocks = mean(Value, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  Item                   avg_stocks\n  <chr>                       <dbl>\n1 Chickens                   58443.\n2 Ducks                       9856.\n3 Geese and guinea fowls      6484.\n4 Pigeons, other birds        3124.\n5 Turkeys                     1924.\n```\n:::\n:::\n\n### Explain and Interpret\nTry to understand the sizes of stocks of each of the five types of poultry in the dataset and try to understand which arears/countries has how many of poultry during this time. On average, we can see that countries have far more chickens as livestock (=58.4million head) than other livestock birds.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbirds %>%\n  group_by(Area)%>%\n  summarize(avg_stocks = mean(Value, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 209 × 2\n   Area                avg_stocks\n   <chr>                    <dbl>\n 1 Afghanistan             6527. \n 2 Albania                 1064. \n 3 Algeria                15656. \n 4 American Samoa            41.9\n 5 Angola                  8357. \n 6 Antigua and Barbuda       98.0\n 7 Argentina              24878. \n 8 Armenia                 1341. \n 9 Aruba                    NaN  \n10 Australia              10085. \n# … with 199 more rows\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}