{
  "hash": "667cbb31b1461c7dc9be23099ff7271d",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Janani Natarajan\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"05/12/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - hotel_bookings\n  - air_bnb\n  - fed_rate\n  - debt\n  - usa_households\n  - abc_poll\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   debt ⭐\n-   fed_rate ⭐⭐\n-   abc_poll ⭐⭐⭐\n-   usa_hh ⭐⭐⭐\n-   hotel_bookings ⭐⭐⭐⭐\n-   AB_NYC ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read.csv(\"_data/AB_NYC_2019.csv\")\nglimpse(mydata)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in glimpse(mydata): object 'mydata' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nView(data)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in check_for_XQuartz(file.path(R.home(\"modules\"), \"R_de.so\")): X11 library is missing: install XQuartz from www.xquartz.org\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"id\"                             \"name\"                          \n [3] \"host_id\"                        \"host_name\"                     \n [5] \"neighbourhood_group\"            \"neighbourhood\"                 \n [7] \"latitude\"                       \"longitude\"                     \n [9] \"room_type\"                      \"price\"                         \n[11] \"minimum_nights\"                 \"number_of_reviews\"             \n[13] \"last_review\"                    \"reviews_per_month\"             \n[15] \"calculated_host_listings_count\" \"availability_365\"              \n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe dataset contains information about 48,895 AirBnB listings in New York City in the year 2019. Each listing is represented by 17 columns, providing details such as the neighborhood and neighborhood group, rental type (entire home, private room, shared room), prices, minimum stay requirements, and the number of guest reviews. The dataset also includes the number of listings each host has on AirBnB, the number of days a listing was available throughout 2019, and the date of the last guest review.\n\n## Tidy Data (as needed)\n\nI want to show how the date of review and other variables relate to one another.There are blank values in the last_review variable. I thus save the observations that were reviewed initially. I then extract the date variable's month and year columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmydata2 <- mydata %>% \n  mutate(Date = ymd(last_review))%>% \n  drop_na(Date)%>% \n  mutate(day = day(Date), month = month(Date, label=TRUE), year = year(Date))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(., Date = ymd(last_review)): object 'mydata' not found\n```\n:::\n\n```{.r .cell-code}\n#select the required variables.\nselect_df<-mydata2 %>%\n  select(id, neighbourhood_group:year)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in select(., id, neighbourhood_group:year): object 'mydata2' not found\n```\n:::\n:::\n\n\nobtaining the average number of reviews\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Mean \nsummary_numberofreviews <-select_df  %>% \nsummarise (Mean_availability=mean(number_of_reviews, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summarise(., Mean_availability = mean(number_of_reviews, na.rm = TRUE)): object 'select_df' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Grouping by month\nsummary_month2 <-select_df  %>% \nfilter (availability_365>0)  %>% \n  filter(price > quantile(price)[2] - 1.5 * IQR(price) & price < quantile(price)[4] + 1.5 * IQR(price))  %>% \n group_by(year)  %>%\n  summarise(\n    Mean=mean(price, na.rm = TRUE),\n    Quantile1 = quantile(price, c(0.25), q1 = c(0.25), na.rm = TRUE),\n    Median=median(price, na.rm = TRUE),\n    Quantile3 = quantile(price, c(0.75), q3 = c(0.75), na.rm = TRUE),\n    SD=sd(price, na.rm = TRUE),\n    min=min(price, na.rm = TRUE),\n    max=max(price, na.rm = TRUE),\n    )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., availability_365 > 0): object 'select_df' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_month3 <- select_df  %>% \n  filter(availability_365 > 0)  %>% \n  filter(price > quantile(price)[2] - 1.5 * IQR(price) & price < quantile(price)[4] + 1.5 * IQR(price))  %>% \n  group_by(year, room_type) %>%\n  summarise(\n    Mean=mean(price, na.rm = TRUE),\n    Quantile1=quantile(price, c(0.25), q1 = c(0.25), na.rm = TRUE),\n    Median=median(price, na.rm = TRUE),\n    Quantile3=quantile(price, c(0.75), q3 = c(0.75), na.rm = TRUE),\n    SD=sd(price, na.rm = TRUE),\n    min=min(price, na.rm = TRUE),\n    max=max(price, na.rm = TRUE),\n    .groups = 'drop'\n  )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., availability_365 > 0): object 'select_df' not found\n```\n:::\n:::\n\n\n## Time Dependent Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(summary_month2, aes(x = as.integer(year), y = Mean, group=1)) +\n  geom_line(color = \"red\") +\n  geom_point(size = 3, color = \"blue\") +\n  labs(title = \"Price\",\n       x = \"Last Review\", y = \"Mean\") +\n  scale_x_continuous(breaks = seq(min(as.integer(summary_month2$year)), max(as.integer(summary_month2$year)), by = 1),\n                     labels = seq(min(as.integer(summary_month2$year)), max(as.integer(summary_month2$year)), by = 1)) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(summary_month2, aes(x = as.integer(year), y = Mean, group = 1)): object 'summary_month2' not found\n```\n:::\n:::\n\n\n## Visualizing Part-Whole Relationships\n\nPeople who had their entire apartment for rent and had last reviews in 2012-2014 probably sold their homes. These may have been some of those early starters who were buying up real estate and saw this as a great source of income before they were able to sell and move on to other ventures.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mydata, aes(x=`last_review`, y=`room_type`)) + geom_point() +\n    labs(title = \"Last Review by Room Type\", x = \"Last Review\", y = \"Room Type\") \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(mydata, aes(x = last_review, y = room_type)): object 'mydata' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(summary_month3, aes(x = factor(year), y = Mean, fill = room_type)) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.9)) +\n  labs(x = \"Year\", y = \"Mean\", fill = \"Room Type\") +\n  ggtitle(\"Year and Room Type\") +\n  theme(plot.title = element_text(hjust = 1.0)) +\n  scale_fill_brewer(palette = \"Set2\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(summary_month3, aes(x = factor(year), y = Mean, fill = room_type)): object 'summary_month3' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nselect_df_type <- select_df %>% filter(year>=2019)%>% group_by(month, room_type) %>% summarise(count=n(), mean_availability=mean(availability_365)) %>%  ungroup()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., year >= 2019): object 'select_df' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(select_df_type, aes(x = month, y = mean_availability, color = room_type, group = room_type)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Average Availability(Room Type)\",\n       x = \"Month\",\n       y = \"Average Availability (in days)\",\n       color = \"Room Type\") +\n  scale_color_manual(values = c(\"pink\", \"green\", \"violet\")) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(select_df_type, aes(x = month, y = mean_availability, : object 'select_df_type' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_type2 <- select_df %>% filter(year>=2019)%>% group_by(month, neighbourhood_group ) %>% summarise(count=n(), mean_availability=mean(availability_365)) %>%  ungroup()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., year >= 2019): object 'select_df' not found\n```\n:::\n\n```{.r .cell-code}\nggplot(select_df_type2, aes(x = month, y = count, fill = neighbourhood_group)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(title = \"Monthly count\",\n       x = \"Month\",\n       y = \"Count\",\n       fill = \"Room Type\") +\n  scale_fill_manual(values = c(\"red\", \"purple\", \"yellow\", \"orange\", \"#FF69B4\")) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(select_df_type2, aes(x = month, y = count, fill = neighbourhood_group)): object 'select_df_type2' not found\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}