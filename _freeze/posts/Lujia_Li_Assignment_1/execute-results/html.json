{
  "hash": "aa1bdba8eeff3116d0373a1ce4422314",
  "result": {
    "markdown": "---\ntitle: \"Real Estate Data Analysis\"\nauthor: \"Lujia Li\"\ndesription: \"601 Assigment #1\"\ndate: \"05/03/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - Assignment 1\n  - Lujia Li\n  - NeighborhoodSales Summary\n  - ggplot2\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# read dataset\nlibrary(readxl)\nlibrary(dbplyr)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.1     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.4     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::ident()  masks dbplyr::ident()\n✖ dplyr::lag()    masks stats::lag()\n✖ dplyr::sql()    masks dbplyr::sql()\n```\n:::\n\n```{.r .cell-code}\nbrooklyn2019 <- read_excel('Assignment_1_LujiaLi_folder/2019_brooklyn.xlsx', skip = 6)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: `path` does not exist: 'Assignment_1_LujiaLi_folder/2019_brooklyn.xlsx'\n```\n:::\n\n```{.r .cell-code}\nhead(brooklyn2019)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(brooklyn2019): object 'brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\n# dimension of dataset\ndim(brooklyn2019)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\n# variables/column names\ncolnames(brooklyn2019)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\n# remove the special characters in variables\ncolnames(brooklyn2019) <- colnames(brooklyn2019) %>% \n  gsub(\"\\r\", \"\", .) %>%    # delete the special character \"\\r\" in variables\n  gsub(\"\\n\", \" \", .) %>%   # replace the special character \"\\n\" with space in variables\n  gsub(\" $\", \"\",. , perl = T) %>%  # delete the space at the end of variables\n  gsub(\"  \", \" \",. , perl = T)  # replace the double spaces with single space in variables\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\ncolnames(brooklyn2019)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\n# remove duplicated rows in dataset\nbrooklyn2019 <- distinct(brooklyn2019)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in distinct(brooklyn2019): object 'brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\nstr(brooklyn2019)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in str(brooklyn2019): object 'brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\n# subset dataset\n# c('BOROUGH','RESIDENTIAL UNITS','COMMERCIAL UNITS','TOTAL UNITS','LAND SQUARE FEET','GROSS SQUARE FEET',\n#   'YEAR BUILT','BUILDING CLASS AT TIME OF SALE','SALE PRICE','SALE DATE') %>%\n#    subset(brooklyn2019, select = .) -> selected_brooklyn2019\n\nselected_brooklyn2019 <- subset(brooklyn2019, select = c('BOROUGH','RESIDENTIAL UNITS','COMMERCIAL UNITS','TOTAL UNITS','LAND SQUARE FEET','GROSS SQUARE FEET',\n  'YEAR BUILT','BUILDING CLASS AT TIME OF SALE','SALE PRICE','SALE DATE'))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in subset(brooklyn2019, select = c(\"BOROUGH\", \"RESIDENTIAL UNITS\", : object 'brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\nstr(selected_brooklyn2019)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in str(selected_brooklyn2019): object 'selected_brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\n# count the number and calculate the percentage of NA values\nNumNA_column <- function(x){sum(is.na(x))} # function to count the number of NA values\napply(selected_brooklyn2019, 2, NumNA_column)   # number of NA in each column\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in apply(selected_brooklyn2019, 2, NumNA_column): object 'selected_brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\nPercentageNA_column <- function(x){sum(is.na(x))/length(x)*100}\napply(selected_brooklyn2019, 2, PercentageNA_column) # percentage of NA in each column\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in apply(selected_brooklyn2019, 2, PercentageNA_column): object 'selected_brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\n# count the number of 0 sales price\n# 0 sale price means that a transfer of ownership without a cash consideration\ntable(selected_brooklyn2019$`SALE PRICE` == 0)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(selected_brooklyn2019$`SALE PRICE` == 0): object 'selected_brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\nprop.table(table(selected_brooklyn2019$`SALE PRICE` == 0))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(selected_brooklyn2019$`SALE PRICE` == 0): object 'selected_brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\n# remove rows with NA values and 0 sale price\n# 0 sale price means that a transfer of ownership without a cash consideration\nnew_brooklyn2019 <- na.omit(selected_brooklyn2019) %>% # delete rows with NA values\n  filter(., 'SALE PRICE' != 0)     # select rows with non-zero sale price\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in na.omit(selected_brooklyn2019): object 'selected_brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\nstr(new_brooklyn2019)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in str(new_brooklyn2019): object 'new_brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\n# statics of dataset\nsummary(new_brooklyn2019)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(new_brooklyn2019): object 'new_brooklyn2019' not found\n```\n:::\n\n```{.r .cell-code}\n# merge all sub-datasets\nfinal_dataframe <- data.frame()  # define a dataframe\nfilename <- list.files(\"Assignment_1_LujiaLi_folder\")   # names of all .xlsx files\nfor (i in filename){\n  dataframe <- read_excel(gsub(\" \", \"\", paste(\"Assignment_1_LujiaLi_folder/\", i)), skip = 6)\n  colnames(dataframe) <- colnames(dataframe) %>% \n    gsub(\"\\r\", \"\", .) %>%    # delete the special character \"\\r\" in column names\n    gsub(\"\\n\", \" \", .) %>%   # replace the special character \"\\n\" with space in column names\n    gsub(\" $\",\"\",. ,perl = T) %>%  # delete the space at the tail of column names\n    gsub(\"  \",\" \",. ,perl = T)  # replace the double spaces with single space in column names\n  \n  # remove duplicated rows in dataset\n  dataframe <- distinct(dataframe)\n  \n  # subset dataset\n  # c('BOROUGH','RESIDENTIAL UNITS','COMMERCIAL UNITS','TOTAL UNITS','LAND SQUARE FEET','GROSS SQUARE FEET',\n  #   'YEAR BUILT','BUILDING CLASS AT TIME OF SALE','SALE PRICE','SALE DATE') %>%\n  #   subset(dataframe, select = .) -> selected_dataframe\n  \n  selected_dataframe <- subset(dataframe, select = c('BOROUGH','RESIDENTIAL UNITS','COMMERCIAL UNITS','TOTAL UNITS','LAND SQUARE FEET','GROSS SQUARE FEET',\n    'YEAR BUILT','BUILDING CLASS AT TIME OF SALE','SALE PRICE','SALE DATE'))\n  \n  # remove rows with NA values and 0 sale price\n  # 0 sale price means that a transfer of ownership without a cash consideration\n  new_dataframe <- na.omit(selected_dataframe) %>%\n    filter(., `SALE PRICE` != 0)\n  # merge dataframe\n  final_dataframe <- rbind(final_dataframe, new_dataframe)   \n}\nstr(final_dataframe)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t0 obs. of  0 variables\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}