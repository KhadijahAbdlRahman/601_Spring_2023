{
  "hash": "b5a53c0bce7f65d47d57296d5f510bc8",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Pradhakshya Dhanakumar\"\ndesription: \"Worked with SNL Data \"\ndate: \"05/06/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - Challenge 8\n  - Pradhakshya Dhanakumar\n  - SNL\n  - ggplot2\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(readr)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Reading Data\n\nActors Data\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_actors <- read_csv(\"_data/snl_actors.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 2306 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): aid, url, type, gender\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(df_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  aid            url           type  gender \n  <chr>          <chr>         <chr> <chr>  \n1 Kate McKinnon  /Cast/?KaMc   cast  female \n2 Alex Moffat    /Cast/?AlMo   cast  male   \n3 Ego Nwodim     /Cast/?EgNw   cast  unknown\n4 Chris Redd     /Cast/?ChRe   cast  male   \n5 Kenan Thompson /Cast/?KeTh   cast  male   \n6 Carey Mulligan /Guests/?3677 guest andy   \n```\n:::\n:::\n\nCasts Data\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_casts <- read_csv(\"_data/snl_casts.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 614 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): aid\ndbl (5): sid, first_epid, last_epid, n_episodes, season_fraction\nlgl (2): featured, update_anchor\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(df_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  aid                sid featured first_epid last_epid update_anchor n_episodes\n  <chr>            <dbl> <lgl>         <dbl>     <dbl> <lgl>              <dbl>\n1 A. Whitney Brown    11 TRUE       19860222        NA FALSE                  8\n2 A. Whitney Brown    12 TRUE             NA        NA FALSE                 20\n3 A. Whitney Brown    13 TRUE             NA        NA FALSE                 13\n4 A. Whitney Brown    14 TRUE             NA        NA FALSE                 20\n5 A. Whitney Brown    15 TRUE             NA        NA FALSE                 20\n6 A. Whitney Brown    16 TRUE             NA        NA FALSE                 20\n# ℹ 1 more variable: season_fraction <dbl>\n```\n:::\n:::\n\n\nSeasons Data\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_seasons <- read_csv(\"_data/snl_seasons.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 46 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (5): sid, year, first_epid, last_epid, n_episodes\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhead(df_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n    sid  year first_epid last_epid n_episodes\n  <dbl> <dbl>      <dbl>     <dbl>      <dbl>\n1     1  1975   19751011  19760731         24\n2     2  1976   19760918  19770521         22\n3     3  1977   19770924  19780520         20\n4     4  1978   19781007  19790526         20\n5     5  1979   19791013  19800524         20\n6     6  1980   19801115  19810411         13\n```\n:::\n:::\n\n\n## Describe the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(df_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2306    4\n```\n:::\n\n```{.r .cell-code}\ndim(df_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 614   8\n```\n:::\n\n```{.r .cell-code}\ndim(df_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46  5\n```\n:::\n:::\n\n\nThere are three sets of data in the SNL dataset. \n\nThe first set, called SNL actors, lists all 2306 cast and guest members who have appeared on SNL. Each row corresponds to an individual actor and includes a link to more information about their gender and whether they were a cast member or guest.\n\nThe second set, SNL casts, is more extensive than SNL actors in terms of variables and includes information on 614 cast members, but not guests. It provides details about the seasons each cast member was on the show, the number of episodes in each season, and the dates of the first and last episodes for each season the cast member appeared. First and last episode information is only included if they differ from the first or last episode of that season, so most values are missing.\n\nThe third set, SNL seasons, contains data on the 46 seasons of SNL, such as the year, dates of the first and last episodes, and episode count per season. Each row corresponds to a season.\n\n## Tidy and Mutate Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_actors<- na.omit(df_actors)\ndf_casts<- na.omit(df_casts)\ndf_seasons<- na.omit(df_seasons)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(df_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"             \"sid\"             \"featured\"        \"first_epid\"     \n[5] \"last_epid\"       \"update_anchor\"   \"n_episodes\"      \"season_fraction\"\n```\n:::\n\n```{.r .cell-code}\ncolnames(df_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"    \"url\"    \"type\"   \"gender\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_actors <- df_actors %>%\n  mutate(appearances = rowSums(select(., starts_with(\"ep_\")), na.rm = TRUE))\n```\n:::\n\n\n\n## Join Data\n\nThe first block of code creates a new dataframe df_casts_actors by joining two dataframes df_casts and df_actors on the aid column. The select() function is then used to keep only the columns sid, type, gender, featured, and appearances in the resulting dataframe. This code creates a new dataframe with additional information about the actors who appeared in each season of a TV show.\n\nThe second block of code creates another new dataframe df_data by joining the df_seasons dataframe with the df_casts_actors dataframe on the sid column. This code creates a new dataframe with combined information about the seasons and the actors who appeared in each season. The resulting dataframe df_data can be used to explore relationships between various variables such as the number of episodes in a season, the gender of the actors, and the number of appearances, etc.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_casts_actors <- df_casts %>%\n  left_join(df_actors, by = \"aid\") %>%\n  select(sid, type, gender, featured, appearances)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_data <- df_seasons %>%\n  left_join(df_casts_actors, by = \"sid\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(df_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"         \"year\"        \"first_epid\"  \"last_epid\"   \"n_episodes\" \n[6] \"type\"        \"gender\"      \"featured\"    \"appearances\"\n```\n:::\n\n```{.r .cell-code}\ncolnames(df_casts_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"         \"type\"        \"gender\"      \"featured\"    \"appearances\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_data <- df_casts %>%\n  select(-update_anchor, -season_fraction, -n_episodes) %>%\n  left_join(df_seasons, by=\"sid\")\n\njoined_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 9\n# ℹ 9 variables: aid <chr>, sid <dbl>, featured <lgl>, first_epid.x <dbl>,\n#   last_epid.x <dbl>, year <dbl>, first_epid.y <dbl>, last_epid.y <dbl>,\n#   n_episodes <dbl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(joined_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"          \"sid\"          \"featured\"     \"first_epid.x\" \"last_epid.x\" \n[6] \"year\"         \"first_epid.y\" \"last_epid.y\"  \"n_episodes\"  \n```\n:::\n:::\n\n\n## Visualizations\n\nVisual 1: \nThe chart shows the number of episodes by year using the n_episodes and year columns from the joined_data dataframe.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Create a bar chart of number of episodes by year\nggplot(data = joined_data, aes(x = year, y = n_episodes)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(x = \"Year\", y = \"Number of Episodes\") +\n  labs(title=\"Number of Episodes by Year\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](PradhakshyaDhanakumar_Challenge8_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\nVisual 2: \nFirst create a new dataframe with information about actors in each season and then a bar chart to show the number of actors by season.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_casts_actors <- df_casts %>%\n  left_join(df_actors, by = \"aid\") %>%\n  group_by(sid) %>%\n  count() %>%\n  select(sid, n) %>%\n  rename(appearances = n)\nggplot(data = df_casts_actors, aes(x = sid, y = appearances)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(x = \"Season ID\", y = \"Number of Actors\") +\n  ggtitle(\"Number of Actors by Season\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](PradhakshyaDhanakumar_Challenge8_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "PradhakshyaDhanakumar_Challenge8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}