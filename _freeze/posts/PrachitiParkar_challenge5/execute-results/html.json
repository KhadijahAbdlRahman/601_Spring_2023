{
  "hash": "35965addd0882b66db69d8fe9a64cab6",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5\"\nauthor: \"Prachiti Parkar\"\ndescription: \"Introduction to Visualization\"\ndate: \"05/07/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - railroads\n  - cereal\n  - air_bnb\n  - pathogen_cost\n  - australian_marriage\n  - public_schools\n  - usa_households\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ⭐\n-   Total_cost_for_top_15_pathogens_2018.xlsx ⭐\n-   Australian Marriage ⭐⭐ \n-   AB_NYC_2019.csv ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐\n-   Public School Characteristics ⭐⭐⭐⭐ \n-   USA Households ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nab_nyc <- read.csv(\"_data/AB_NYC_2019.csv\")\nhead(ab_nyc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    id                                             name host_id   host_name\n1 2539               Clean & quiet apt home by the park    2787        John\n2 2595                            Skylit Midtown Castle    2845    Jennifer\n3 3647              THE VILLAGE OF HARLEM....NEW YORK !    4632   Elisabeth\n4 3831                  Cozy Entire Floor of Brownstone    4869 LisaRoxanne\n5 5022 Entire Apt: Spacious Studio/Loft by central park    7192       Laura\n6 5099        Large Cozy 1 BR Apartment In Midtown East    7322       Chris\n  neighbourhood_group neighbourhood latitude longitude       room_type price\n1            Brooklyn    Kensington 40.64749 -73.97237    Private room   149\n2           Manhattan       Midtown 40.75362 -73.98377 Entire home/apt   225\n3           Manhattan        Harlem 40.80902 -73.94190    Private room   150\n4            Brooklyn  Clinton Hill 40.68514 -73.95976 Entire home/apt    89\n5           Manhattan   East Harlem 40.79851 -73.94399 Entire home/apt    80\n6           Manhattan   Murray Hill 40.74767 -73.97500 Entire home/apt   200\n  minimum_nights number_of_reviews last_review reviews_per_month\n1              1                 9  2018-10-19              0.21\n2              1                45  2019-05-21              0.38\n3              3                 0                            NA\n4              1               270  2019-07-05              4.64\n5             10                 9  2018-11-19              0.10\n6              3                74  2019-06-22              0.59\n  calculated_host_listings_count availability_365\n1                              6              365\n2                              2              355\n3                              1              365\n4                              1              194\n5                              1                0\n6                              1              129\n```\n:::\n\n```{.r .cell-code}\nsummary(ab_nyc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id               name              host_id           host_name        \n Min.   :    2539   Length:48895       Min.   :     2438   Length:48895      \n 1st Qu.: 9471945   Class :character   1st Qu.:  7822033   Class :character  \n Median :19677284   Mode  :character   Median : 30793816   Mode  :character  \n Mean   :19017143                      Mean   : 67620011                     \n 3rd Qu.:29152178                      3rd Qu.:107434423                     \n Max.   :36487245                      Max.   :274321313                     \n                                                                             \n neighbourhood_group neighbourhood         latitude       longitude     \n Length:48895        Length:48895       Min.   :40.50   Min.   :-74.24  \n Class :character    Class :character   1st Qu.:40.69   1st Qu.:-73.98  \n Mode  :character    Mode  :character   Median :40.72   Median :-73.96  \n                                        Mean   :40.73   Mean   :-73.95  \n                                        3rd Qu.:40.76   3rd Qu.:-73.94  \n                                        Max.   :40.91   Max.   :-73.71  \n                                                                        \n  room_type             price         minimum_nights    number_of_reviews\n Length:48895       Min.   :    0.0   Min.   :   1.00   Min.   :  0.00   \n Class :character   1st Qu.:   69.0   1st Qu.:   1.00   1st Qu.:  1.00   \n Mode  :character   Median :  106.0   Median :   3.00   Median :  5.00   \n                    Mean   :  152.7   Mean   :   7.03   Mean   : 23.27   \n                    3rd Qu.:  175.0   3rd Qu.:   5.00   3rd Qu.: 24.00   \n                    Max.   :10000.0   Max.   :1250.00   Max.   :629.00   \n                                                                         \n last_review        reviews_per_month calculated_host_listings_count\n Length:48895       Min.   : 0.010    Min.   :  1.000               \n Class :character   1st Qu.: 0.190    1st Qu.:  1.000               \n Mode  :character   Median : 0.720    Median :  1.000               \n                    Mean   : 1.373    Mean   :  7.144               \n                    3rd Qu.: 2.020    3rd Qu.:  2.000               \n                    Max.   :58.500    Max.   :327.000               \n                    NA's   :10052                                   \n availability_365\n Min.   :  0.0   \n 1st Qu.:  0.0   \n Median : 45.0   \n Mean   :112.8   \n 3rd Qu.:227.0   \n Max.   :365.0   \n                 \n```\n:::\n\n```{.r .cell-code}\nunique(ab_nyc$room_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Private room\"    \"Entire home/apt\" \"Shared room\"    \n```\n:::\n:::\n\n\n### Briefly describe the data\nThe data has 16 columns. It represents housing prices depending on mainly neighborhood groups and room type. The prices range from 0 to 10000. \n\n## Tidy Data (as needed)\nThere are three types of room - Private room, Shared room and Entire home/apartment.\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(ab_nyc$reviews_per_month))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10052\n```\n:::\n\n```{.r .cell-code}\nab_nyc <- ab_nyc %>%  replace_na(list(reviews_per_month = 0))\n```\n:::\n\n \nI saw that 10052 rows had NA in reviews_per_month, I thought its better to replace it by 0 so that people buying have a fair idea about reviews of the place. \n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n\n\n\n\n## Univariate Visualizations\nLet's see how the prices are scattered over the whole data\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ab_nyc,aes(price))+\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](PrachitiParkar_challenge5_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nairb_filtered <- ab_nyc %>%\n  filter(price>0 & price<2000)\n\nggplot(airb_filtered,aes(price))+\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](PrachitiParkar_challenge5_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\nLets check the count of room types \n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ab_nyc,aes(room_type))+geom_bar()+labs(title = \"Count of different type of rooms\")\n```\n\n::: {.cell-output-display}\n![](PrachitiParkar_challenge5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n## Bivariate Visualization(s)\n\nLet's see how room_type relate to prices\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ab_nyc,aes(room_type,price))+geom_boxplot()+labs(title = \"Distirbution of prices of air bnb accross different prices\")\n```\n\n::: {.cell-output-display}\n![](PrachitiParkar_challenge5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nAny additional comments?\n",
    "supporting": [
      "PrachitiParkar_challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}