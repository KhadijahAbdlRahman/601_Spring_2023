{
  "hash": "86b9fd7ea43e2819101510a6afa47d0a",
  "result": {
    "markdown": "---\ntitle: \"Visualizing Multiple Dimensions\"\nauthor: \"Neha Jhurani\"\ndesription: \"Using ggplot2 for visualizing: eggs_tidy.csv\"\ndate: \"05/12/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge7\n  - Neha Jhurani\n  - eggs_tidy.csv\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\n\nknitr::opts_chunk$set(echo = TRUE)\n```\n:::\n\n\n## Analysing eggs_tidy data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n\n#reading eggs_tidy csv data\neggs_data <- read_csv(\"_data/eggs_tidy.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 120 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): month\ndbl (5): year, large_half_dozen, large_dozen, extra_large_half_dozen, extra_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#extracting all the column names\ncolnames(eggs_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"month\"                  \"year\"                   \"large_half_dozen\"      \n[4] \"large_dozen\"            \"extra_large_half_dozen\" \"extra_large_dozen\"     \n```\n:::\n\n```{.r .cell-code}\n#the dataset represents the price of particular quantity of eggs sold during specific time\n#The quantity type has it's own column, Converting it to a single column below as they all represent the quantity/ carton size of eggs\neggs_tidy_data <- eggs_data%>%\n  pivot_longer(col = c(large_half_dozen, large_dozen, extra_large_half_dozen, extra_large_dozen),\n                         names_to= \"carton_size\",\n                         values_to= \"price_per_pound\")\neggs_tidy_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 × 4\n   month     year carton_size            price_per_pound\n   <chr>    <dbl> <chr>                            <dbl>\n 1 January   2004 large_half_dozen                  126 \n 2 January   2004 large_dozen                       230 \n 3 January   2004 extra_large_half_dozen            132 \n 4 January   2004 extra_large_dozen                 230 \n 5 February  2004 large_half_dozen                  128.\n 6 February  2004 large_dozen                       226.\n 7 February  2004 extra_large_half_dozen            134.\n 8 February  2004 extra_large_dozen                 230 \n 9 March     2004 large_half_dozen                  131 \n10 March     2004 large_dozen                       225 \n# … with 470 more rows\n```\n:::\n\n```{.r .cell-code}\n#combining month and year to form a new column of data\n#Please note - As no day is mentioned, it assumes the day to be 1st of the month specified\neggs_lubricate_data <- eggs_tidy_data%>%\n  mutate( date = str_c(month, year , sep = \"-\"),\n          date = my(date))\neggs_lubricate_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 × 5\n   month     year carton_size            price_per_pound date      \n   <chr>    <dbl> <chr>                            <dbl> <date>    \n 1 January   2004 large_half_dozen                  126  2004-01-01\n 2 January   2004 large_dozen                       230  2004-01-01\n 3 January   2004 extra_large_half_dozen            132  2004-01-01\n 4 January   2004 extra_large_dozen                 230  2004-01-01\n 5 February  2004 large_half_dozen                  128. 2004-02-01\n 6 February  2004 large_dozen                       226. 2004-02-01\n 7 February  2004 extra_large_half_dozen            134. 2004-02-01\n 8 February  2004 extra_large_dozen                 230  2004-02-01\n 9 March     2004 large_half_dozen                  131  2004-03-01\n10 March     2004 large_dozen                       225  2004-03-01\n# … with 470 more rows\n```\n:::\n\n```{.r .cell-code}\n# Visualization with Multiple Dimensions\n#Histogram\neggs_lubricate_data%>%\n  ggplot(aes(x= price_per_pound,color = carton_size)) + geom_histogram() + labs(title = \"Quantity of carton sold for a specific price\", x = \"Price Per Pound\", y = \"Amount\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](NehaJhurani_challenge7_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#Stacked Bar Graph\neggs_lubricate_data%>%\n  ggplot(aes(x = year, y = price_per_pound, fill = carton_size)) + geom_bar(position = \"stack\", stat = \"identity\") + labs(title = \"Total amount/price sold per year\", x = \"Year\", y = \"Price per pound\")\n```\n\n::: {.cell-output-display}\n![](NehaJhurani_challenge7_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n:::",
    "supporting": [
      "NehaJhurani_challenge7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}