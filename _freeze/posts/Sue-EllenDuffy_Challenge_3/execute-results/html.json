{
  "hash": "bd463d8e59c49688f732720133ab2a66",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3: Eggs 2004-2013\"\nauthor: \"Sue-Ellen Duffy\"\ndescription: \"Pivoting Egg Data\"\ndate: \"03/14/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - eggs\n  - Sue-Ellen Duffy\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n### Egg Data!\n\nHere we have the monthly price paid by first receivers for USDA Certified Organic Eggs by size and carton types for January 2004 to December 2013. The unit \"Price\" is \"cents per pound\". So, for example in January 2004, the price paid by first receivers for USDA Certified Dozen of Extra Large Eggs was 230 cents/pound. As defined in the original data, First Receivers \"those entities that purchases the processed product from the poultry or egg company, such as a retailer, distributor, or manufacturer\". The term wholesale level would be appropriate in many cases. \n\n\n## Reading in the egg data\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_og <- read_excel(\"_data/organiceggpoultry.xls\",\n                      sheet=\"Data\",\n                      range =cell_limits(c(6,2),c(NA,6)),\n                      col_names = c(\"date\", \"xlarge_dzn\", \"xlarge_halfdzn\", \"large_dzn\", \"large_halfdzn\")\n)\neggs_og\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 5\n   date      xlarge_dzn xlarge_halfdzn large_dzn large_halfdzn\n   <chr>          <dbl>          <dbl>     <dbl>         <dbl>\n 1 Jan 2004        230            132       230           126 \n 2 February        230            134.      226.          128.\n 3 March           230            137       225           131 \n 4 April           234.           137       225           131 \n 5 May             236            137       225           131 \n 6 June            241            137       231.          134.\n 7 July            241            137       234.          134.\n 8 August          241            137       234.          134.\n 9 September       241            136.      234.          130.\n10 October         241            136.      234.          128.\n# … with 110 more rows\n```\n:::\n:::\n\n::: callout-Tip\n## Date Format 1\nStarting off a little messy. Already I see this data is -wide- and the date needs formatting. Let's see what other nuances might be lingering in the date column (count).\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(select(eggs_og, date))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ndate\n      April      August    December    February February /1    Jan 2004 \n         10          10          10           8           2           1 \n   Jan 2005    Jan 2006    Jan 2007    Jan 2008    Jan 2009    Jan 2010 \n          1           1           1           1           1           1 \n   Jan 2011    Jan 2012    Jan 2013        July        June       March \n          1           1           1          10          10          10 \n        May    November     October   September \n         10          10          10          10 \n```\n:::\n:::\n\n::: callout-Tip\n## Date Format 2\nIn the date column, January has a year indicator, 10 of the months appear 10 times, February appears 8 times and February/1 (a leap year) appears twice. We have to delete the /1 in February (mutate) and extend the year indicator from January to the rest of the months (separate and fill).\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs <- eggs_og %>%\n  mutate(date = str_remove(date, \" /1\")) %>%\n  separate(date,into=c(\"month\", \"year\"), sep=\" \") %>%\n  fill(year)\neggs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n   month     year  xlarge_dzn xlarge_halfdzn large_dzn large_halfdzn\n   <chr>     <chr>      <dbl>          <dbl>     <dbl>         <dbl>\n 1 Jan       2004        230            132       230           126 \n 2 February  2004        230            134.      226.          128.\n 3 March     2004        230            137       225           131 \n 4 April     2004        234.           137       225           131 \n 5 May       2004        236            137       225           131 \n 6 June      2004        241            137       231.          134.\n 7 July      2004        241            137       234.          134.\n 8 August    2004        241            137       234.          134.\n 9 September 2004        241            136.      234.          130.\n10 October   2004        241            136.      234.          128.\n# … with 110 more rows\n```\n:::\n:::\n\n::: callout-Tip\n## Pivot\nWe need to adjust this data so that it is long data (pivot). As of right now we can look at the data nicely, but can't do much analysis across sizes because they are in different columns. I will shift this data to month, year, \"carton_type\" which will combine the 4 types of cartons into one column as their names and place their values into another column labeled \"price\".\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_long <- eggs %>%\n  pivot_longer(cols=3:6,\n    names_to = c(\"carton_type\"),\n      values_to = \"Price\"\n  )\neggs_long\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 × 4\n   month    year  carton_type    Price\n   <chr>    <chr> <chr>          <dbl>\n 1 Jan      2004  xlarge_dzn      230 \n 2 Jan      2004  xlarge_halfdzn  132 \n 3 Jan      2004  large_dzn       230 \n 4 Jan      2004  large_halfdzn   126 \n 5 February 2004  xlarge_dzn      230 \n 6 February 2004  xlarge_halfdzn  134.\n 7 February 2004  large_dzn       226.\n 8 February 2004  large_halfdzn   128.\n 9 March    2004  xlarge_dzn      230 \n10 March    2004  xlarge_halfdzn  137 \n# … with 470 more rows\n```\n:::\n:::\n\n### Analyze\nAlright, now our data is pretty succinct. We can start doing some analysis!\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_long %>%\n  arrange(desc(`Price`))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 × 4\n   month    year  carton_type Price\n   <chr>    <chr> <chr>       <dbl>\n 1 November 2012  xlarge_dzn    290\n 2 December 2012  xlarge_dzn    290\n 3 Jan      2013  xlarge_dzn    290\n 4 February 2013  xlarge_dzn    290\n 5 March    2013  xlarge_dzn    290\n 6 April    2013  xlarge_dzn    290\n 7 May      2013  xlarge_dzn    290\n 8 June     2013  xlarge_dzn    290\n 9 July     2013  xlarge_dzn    290\n10 August   2013  xlarge_dzn    290\n# … with 470 more rows\n```\n:::\n:::\n\n\n## Price Analysis by Carton Type\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_long %>%\n  group_by(carton_type) %>%\n  summarise( Min = min(Price),\n             Max = max(Price),\n             Median = median(Price),\n             Mean = mean(Price)) %>%\n  arrange(desc(Mean))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  carton_type      Min   Max Median  Mean\n  <chr>          <dbl> <dbl>  <dbl> <dbl>\n1 xlarge_dzn       230  290    286.  267.\n2 large_dzn        225  278.   268.  254.\n3 xlarge_halfdzn   132  188.   186.  164.\n4 large_halfdzn    126  178    174.  155.\n```\n:::\n:::\n\n\nNo surprises here, xlarge_dzn is on average the most expensive of the 4 carton types and large_halfdzn is on average the least expensive of the 4 carton types.\n\n## Price analysis by Month\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_long %>%\n  group_by(month) %>%\n  summarise( Min = min(Price),\n             Max = max(Price),\n             Median = median(Price),\n             Mean =mean(Price)) %>%\n  arrange(desc(Mean)) %>%\n  print(n=12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 5\n   month       Min   Max Median  Mean\n   <chr>     <dbl> <dbl>  <dbl> <dbl>\n 1 July       128.   290   211.  212.\n 2 June       128.   290   210.  212.\n 3 December   128.   290   211.  212.\n 4 November   128.   290   211.  212.\n 5 August     128.   290   211.  212.\n 6 September  128.   290   211.  212.\n 7 October    128.   290   211.  212.\n 8 May        128.   290   207.  208.\n 9 April      128.   290   207.  208.\n10 March      128.   290   207.  207.\n11 February   128.   290   207.  207.\n12 Jan        126    290   209.  207.\n```\n:::\n:::\n\n\nHere we see the most expensive months are at the beginning of the winter season and at the beginning of the summer season. I wonder if this has anything to do with egg laying production or if this increase is seen within the broader scope of food price statistics.\n\n## Price Analysis by Year\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_long %>%\n  group_by(year) %>%\n  summarise( Min = min(Price),\n             Max = max(Price),\n             Median = median(Price),\n             Mean =mean(Price))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n   year    Min   Max Median  Mean\n   <chr> <dbl> <dbl>  <dbl> <dbl>\n 1 2004   126   241    181   183.\n 2 2005   128.  241    184.  185.\n 3 2006   128.  242.   184.  185.\n 4 2007   128.  245    186.  188.\n 5 2008   132   286.   211.  213.\n 6 2009   174.  286.   228.  230.\n 7 2010   174.  286.   226.  228.\n 8 2011   174.  286.   226.  229.\n 9 2012   173.  290    228.  229.\n10 2013   178   290    228.  231.\n```\n:::\n:::\n\n\nWhen looking at the data by Year we are basically given the dimensions for: large half dozen price of the cheapest month in a given year (min) extra large dozen price of the most expensive month in a given year (max) average price across 4 carton types and 12 months in a given year(mean).This does allow us to look at the price fluctuations over the years.Two drastic year shifts are from 2007 to 2008 and 2008 to 2009.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}