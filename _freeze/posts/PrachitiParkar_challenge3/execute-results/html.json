{
  "hash": "d0dc8088db24b917b256d1312b4d259f",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Prachiti Parkar\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"03/22/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xls ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\neggs_tidy_data <- read_csv(\"_data/eggs_tidy.csv\",col_names = c(\"month\", \"year\",\"xlarge_dozen\",\n                               \"xlarge_halfdozen\", \"large_dozen\",\n                               \"large_halfdozen\"))\neggs_tidy_data = eggs_tidy_data[-1,]\nview(eggs_tidy_data)\nhead(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 6\n  month    year  xlarge_dozen xlarge_halfdozen large_dozen large_halfdozen\n  <chr>    <chr> <chr>        <chr>            <chr>       <chr>          \n1 January  2004  126          230              132         230            \n2 February 2004  128.5        226.25           134.5       230            \n3 March    2004  131          225              137         230            \n4 April    2004  131          225              137         234.5          \n5 May      2004  131          225              137         236            \n6 June     2004  133.5        231.375          137         241            \n```\n:::\n\n```{.r .cell-code}\ndim(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120   6\n```\n:::\n\n```{.r .cell-code}\n# Summary of the dataset\nsummary(eggs_tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    month               year           xlarge_dozen       xlarge_halfdozen  \n Length:120         Length:120         Length:120         Length:120        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n large_dozen        large_halfdozen   \n Length:120         Length:120        \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n```\n:::\n:::\n\n\n### Briefly describe the data\n\nDescribe the data, and be sure to comment on why you are planning to pivot it to make it \"tidy\"\n\nThe dataset contains 6 columns and 120 rows. The dataset can be pivoted to size (extra large and large) and quantity (dozen and half_dozen) and the values shifted to prices. This would be better since it would be better to read data as per quantity and size.\n\n## Anticipate the End Result\n\n\nThe end result for our dataset would be to see large and xlarge under size column and halfdozen and dozen under quantity column and its respective values under a new column called price.\n\n### Example: find current and future data dimensions\n\n\n\n\n::: {.cell}\n\n:::\n\nrows = 120*4 (4 columns pivoted) = 480\ncolumns = 5 (4 columns made into 3 -> size quantity and price)\n\n### Challenge: Describe the final dimensions\n\nDocument your work here.\n\n\n::: {.cell}\n\n:::\n\nThe final dimensions would be 480*5\n\n\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\n#df<-pivot_longer(df, col = c(outgoing, incoming),\n#                 names_to=\"trade_direction\",\n#                 values_to = \"trade_value\")\n#df\n\neggs_pivot_data<-pivot_longer(eggs_tidy_data, cols = contains(\"dozen\"),\n                              names_to= c(\"size\", \"quantity\"),\n                              names_sep = \"_\",\n                              values_to = \"price\")\n\n\nhead(eggs_pivot_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 √ó 5\n  month    year  size   quantity  price \n  <chr>    <chr> <chr>  <chr>     <chr> \n1 January  2004  xlarge dozen     126   \n2 January  2004  xlarge halfdozen 230   \n3 January  2004  large  dozen     132   \n4 January  2004  large  halfdozen 230   \n5 February 2004  xlarge dozen     128.5 \n6 February 2004  xlarge halfdozen 226.25\n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $480x5$ - exactly what we expected!\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\n\n::: {.cell}\n\n:::\n\n\nThe new case would be easily readable. Also one can add medium (size) and halfdozen (quantity) and it would be easy to add to our dataset without any addition of columns.\n\nAny additional comments?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}