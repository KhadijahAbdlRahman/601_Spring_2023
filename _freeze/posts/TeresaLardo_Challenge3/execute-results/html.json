{
  "hash": "f07d42c5bc774b52112e7f50300bf973",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3: Animal Weights\"\nauthor: \"Teresa Lardo\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"08/17/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - Teresa Lardo\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\n## Read in data\n\nFor this challenge, I'll read in the csv file on animal weights. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nanimal_weight <- read_csv(\"_data/animal_weight.csv\", show_col_types =  FALSE)\nhead(animal_weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 17\n  IPCC A…¹ Cattl…² Cattl…³ Buffa…⁴ Swine…⁵ Swine…⁶ Chick…⁷ Chick…⁸ Ducks Turkeys\n  <chr>      <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl>\n1 Indian …     275     110     295      28      28     0.9     1.8   2.7     6.8\n2 Eastern…     550     391     380      50     180     0.9     1.8   2.7     6.8\n3 Africa       275     173     380      28      28     0.9     1.8   2.7     6.8\n4 Oceania      500     330     380      45     180     0.9     1.8   2.7     6.8\n5 Western…     600     420     380      50     198     0.9     1.8   2.7     6.8\n6 Latin A…     400     305     380      28      28     0.9     1.8   2.7     6.8\n# … with 7 more variables: Sheep <dbl>, Goats <dbl>, Horses <dbl>, Asses <dbl>,\n#   Mules <dbl>, Camels <dbl>, Llamas <dbl>, and abbreviated variable names\n#   ¹​`IPCC Area`, ²​`Cattle - dairy`, ³​`Cattle - non-dairy`, ⁴​Buffaloes,\n#   ⁵​`Swine - market`, ⁶​`Swine - breeding`, ⁷​`Chicken - Broilers`,\n#   ⁸​`Chicken - Layers`\n```\n:::\n:::\n\n\n### Briefly describe the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(animal_weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  9 17\n```\n:::\n\n```{.r .cell-code}\ncolnames(animal_weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"IPCC Area\"          \"Cattle - dairy\"     \"Cattle - non-dairy\"\n [4] \"Buffaloes\"          \"Swine - market\"     \"Swine - breeding\"  \n [7] \"Chicken - Broilers\" \"Chicken - Layers\"   \"Ducks\"             \n[10] \"Turkeys\"            \"Sheep\"              \"Goats\"             \n[13] \"Horses\"             \"Asses\"              \"Mules\"             \n[16] \"Camels\"             \"Llamas\"            \n```\n:::\n\n```{.r .cell-code}\nunique(animal_weight$`IPCC Area`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Indian Subcontinent\" \"Eastern Europe\"      \"Africa\"             \n[4] \"Oceania\"             \"Western Europe\"      \"Latin America\"      \n[7] \"Asia\"                \"Middle east\"         \"Northern America\"   \n```\n:::\n:::\n\n\nThe data set shows the weights of **16** different animal types (for agricultural use) for **9** different geographic regions. There are 16 different types of animal (including different uses for the same animal - such as chickens meant for broiling and chickens meant for laying eggs or dairy/nondairy cattle). The data set should be flipped so that instead of one long row giving 16 different weights for one geographic region, we only see one observation (animal weight) per row. \n\n## Anticipate the End Result\n\nWe'll use `pivot_longer()` to list each of the 16 animal types under a column called **Animals** and their weights under a column called **Weight** instead. This should result in a much longer version of our current tibble, where each IPCC area (geographic region) will appear 16 times - once per different type of animal - instead of once. As there are 9 IPCC areas listed now, this should end up being a tibble of 144 rows (observations) and 3 columns (IPCC area, Animals, and Weight). \n\n\n## Pivot the Data\n\nNow we will pivot all of the columns describing animal weights (columns 2 through 17) so that the name of each of these columns (**Cattle - dairy** through **Llamas**) is contained under a new column titled **Animals**. The values listed under the original columns will move to another new column, titled **Weight**. \n\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\nanimal_weight<-pivot_longer(animal_weight, col = c(2:17),\n                 names_to=\"Animals\",\n                 values_to = \"Weight\")\nanimal_weight\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 144 × 3\n   `IPCC Area`         Animals            Weight\n   <chr>               <chr>               <dbl>\n 1 Indian Subcontinent Cattle - dairy      275  \n 2 Indian Subcontinent Cattle - non-dairy  110  \n 3 Indian Subcontinent Buffaloes           295  \n 4 Indian Subcontinent Swine - market       28  \n 5 Indian Subcontinent Swine - breeding     28  \n 6 Indian Subcontinent Chicken - Broilers    0.9\n 7 Indian Subcontinent Chicken - Layers      1.8\n 8 Indian Subcontinent Ducks                 2.7\n 9 Indian Subcontinent Turkeys               6.8\n10 Indian Subcontinent Sheep                28  \n# … with 134 more rows\n```\n:::\n:::\n\n\n### Check Dimensions of Pivoted Data\n\nBefore pivoting, I calculated that the new dimensions would be 144 rows and 3 columns, where each row describes the weight of a type of agricultural animal in a geographic region. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(animal_weight)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 144   3\n```\n:::\n:::\n\n\nNow that the data has been pivoted long, our resulting tibble dimensions are $144x3$ as expected.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}