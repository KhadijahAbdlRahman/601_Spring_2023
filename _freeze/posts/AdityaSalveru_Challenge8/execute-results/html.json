{
  "hash": "35d83bd5e8c9473b73910400e2f00e3b",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Aditya Salveru\"\ndescription: \"Joining Data\"\ndate: \"05/22/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - railroads\n  - snl\n  - faostat\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\nRead the SNL data sets:\n\n::: {.cell}\n\n```{.r .cell-code}\nactors <- read.csv(\"_data/snl_actors.csv\")\nseasons <- read.csv(\"_data/snl_seasons.csv\")\ncasts <- read.csv(\"_data/snl_casts.csv\")\n```\n:::\n\n\n### Briefly describe the data\n\n## Tidy Data (as needed)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2306    4\n```\n:::\n\n```{.r .cell-code}\nhead(actors,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              aid           url  type  gender\n1   Kate McKinnon   /Cast/?KaMc  cast  female\n2     Alex Moffat   /Cast/?AlMo  cast    male\n3      Ego Nwodim   /Cast/?EgNw  cast unknown\n4      Chris Redd   /Cast/?ChRe  cast    male\n5  Kenan Thompson   /Cast/?KeTh  cast    male\n6  Carey Mulligan /Guests/?3677 guest    andy\n7  Marcus Mumford /Guests/?3679 guest    male\n8     Aidy Bryant   /Cast/?AiBr  cast  female\n9   Steve Higgins   /Crew/?StHi  crew    male\n10      Mikey Day   /Cast/?MiDa  cast    male\n```\n:::\n\n```{.r .cell-code}\ndim(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46  5\n```\n:::\n\n```{.r .cell-code}\nhead(seasons,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   sid year first_epid last_epid n_episodes\n1    1 1975   19751011  19760731         24\n2    2 1976   19760918  19770521         22\n3    3 1977   19770924  19780520         20\n4    4 1978   19781007  19790526         20\n5    5 1979   19791013  19800524         20\n6    6 1980   19801115  19810411         13\n7    7 1981   19811003  19820522         20\n8    8 1982   19820925  19830514         20\n9    9 1983   19831008  19840512         19\n10  10 1984   19841006  19850413         17\n```\n:::\n\n```{.r .cell-code}\ndim(casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 614   8\n```\n:::\n\n```{.r .cell-code}\nhead(casts,10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                aid sid featured first_epid last_epid update_anchor n_episodes\n1  A. Whitney Brown  11     True   19860222        NA         False          8\n2  A. Whitney Brown  12     True         NA        NA         False         20\n3  A. Whitney Brown  13     True         NA        NA         False         13\n4  A. Whitney Brown  14     True         NA        NA         False         20\n5  A. Whitney Brown  15     True         NA        NA         False         20\n6  A. Whitney Brown  16     True         NA        NA         False         20\n7      Alan Zweibel   5     True   19800409        NA         False          5\n8    Sasheer Zamata  39     True   20140118        NA         False         11\n9    Sasheer Zamata  40     True         NA        NA         False         21\n10   Sasheer Zamata  41    False         NA        NA         False         21\n   season_fraction\n1        0.4444444\n2        1.0000000\n3        1.0000000\n4        1.0000000\n5        1.0000000\n6        1.0000000\n7        0.2500000\n8        0.5238095\n9        1.0000000\n10       1.0000000\n```\n:::\n:::\n\nThese three datasets include details about the casts, actors, and seasons of the TV show \"Saturday Night Live.\" These dataframes' dimensions allow us to see that Saturday Night Live ran for 46 seasons and featured 2306 actors in total. The \"casts\" dataset includes information about the cast members' appearances on the show, including specifics like their highlighted episodes, number of appearances, and other pertinent data. The \"actors\" dataset contains specific actor-related information. The \"seasons\" dataset contains details on each season of the show, including the premiere and finale episodes, the year that each season first aired, and the overall number of episodes that season had.\n\n\nCheck for NA values\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(actors))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   aid    url   type gender \n     0      0      0      0 \n```\n:::\n\n```{.r .cell-code}\ncolSums(is.na(seasons))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       sid       year first_epid  last_epid n_episodes \n         0          0          0          0          0 \n```\n:::\n\n```{.r .cell-code}\ncolSums(is.na(casts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            aid             sid        featured      first_epid       last_epid \n              0               0               0             564             597 \n  update_anchor      n_episodes season_fraction \n              0               0               0 \n```\n:::\n:::\n\nThere are not many missing values apart from the first and last epid in the casts table. We will clean it if necessary.\n\n\n## Join Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors_and_casts <- actors %>%\n  inner_join(casts, by=\"aid\")\n\nactors_and_casts_and_seasons <- actors_and_casts %>%\n  inner_join(seasons, by=\"sid\")\n\ncolSums(is.na(actors_and_casts_and_seasons))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            aid             url            type          gender             sid \n              0               0               0               0               0 \n       featured    first_epid.x     last_epid.x   update_anchor    n_episodes.x \n              0             564             597               0               0 \nseason_fraction            year    first_epid.y     last_epid.y    n_episodes.y \n              0               0               0               0               0 \n```\n:::\n:::\n\nIgnore the columns with NA values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexclude_columns <- c(\"last_epid.x\", \"first_epid.x\")\n\nactors_and_casts_and_seasons <- actors_and_casts_and_seasons %>% \n  select(-one_of(exclude_columns))\nhead(actors_and_casts_and_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            aid         url type gender sid featured update_anchor n_episodes.x\n1 Kate McKinnon /Cast/?KaMc cast female  37     True         False            5\n2 Kate McKinnon /Cast/?KaMc cast female  38     True         False           21\n3 Kate McKinnon /Cast/?KaMc cast female  39    False         False           21\n4 Kate McKinnon /Cast/?KaMc cast female  40    False         False           21\n5 Kate McKinnon /Cast/?KaMc cast female  41    False         False           21\n6 Kate McKinnon /Cast/?KaMc cast female  42    False         False           21\n  season_fraction year first_epid.y last_epid.y n_episodes.y\n1       0.2272727 2011     20110924    20120519           22\n2       1.0000000 2012     20120915    20130518           21\n3       1.0000000 2013     20130928    20140517           21\n4       1.0000000 2014     20140927    20150516           21\n5       1.0000000 2015     20151003    20160521           21\n6       1.0000000 2016     20161001    20170520           21\n```\n:::\n:::\n\n\nFrom this joined data, we can plot the gender distribution over the years in the show\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- actors_and_casts_and_seasons %>% \n  select(year, gender) %>%\n  filter(gender == \"male\" | gender == \"female\")\n# Create the line plot\n\n# Count the number of occurrences of each gender per year\ngender_counts <- data %>% group_by(year, gender) %>% summarise(count = n())\n\n# Create the line plot\nggplot(gender_counts, aes(x = year, y = count, group = gender, color = gender)) +\n  geom_line() +\n  geom_point(size = 3) +\n  labs(x = \"Year\", y = \"Count\", color = \"Gender\") +\n  ggtitle(\"Gender Distribution over Years\")\n```\n\n::: {.cell-output-display}\n![](AdityaSalveru_Challenge8_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::",
    "supporting": [
      "AdityaSalveru_Challenge8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}