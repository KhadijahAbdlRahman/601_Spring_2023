{
  "hash": "493ccfcb54ed623c6e8daa114a1b95f1",
  "result": {
    "markdown": "---\ntitle: \"Challenge 7\"\nauthor: \"Pranav Komaravolu\"\ndescription: \"Visualizing Multiple Dimensions\"\ndate: \"05/19/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_7\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\noptions(dplyr.summarise.inform = FALSE)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n<!--\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  Recreate at least two graphs from previous exercises, but introduce at least one additional dimension that you omitted before using ggplot functionality (color, shape, line, facet, etc) The goal is not to create unneeded [chart ink (Tufte)](https://www.edwardtufte.com/tufte/), but to concisely capture variation in additional dimensions that were collapsed in your earlier 2 or 3 dimensional graphs.\n   - Explain why you choose the specific graph type\n5) If you haven't tried in previous weeks, work this week to make your graphs \"publication\" ready with titles, captions, and pretty axis labels and other viewer-friendly features\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code. And anyone not familiar with Edward Tufte should check out his [fantastic books](https://www.edwardtufte.com/tufte/books_vdqi) and [courses on data visualizaton.](https://www.edwardtufte.com/tufte/courses)\n\n(be sure to only include the category tags for the data you use!)\n-->\n\n## Data Description\n<!--\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - eggs ⭐\n  - abc_poll ⭐⭐\n  - australian_marriage ⭐⭐\n  - hotel_bookings ⭐⭐⭐\n  - air_bnb  ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - faostat ⭐⭐⭐⭐⭐\n-->\n## Data Description\n\nReading the data\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"_data/hotel_bookings.csv\", show_col_types = FALSE)\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  hotel   is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n  <chr>     <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n1 Resort…       0     342    2015 July         27       1       0       0      2\n2 Resort…       0     737    2015 July         27       1       0       0      2\n3 Resort…       0       7    2015 July         27       1       0       1      1\n4 Resort…       0      13    2015 July         27       1       0       1      1\n5 Resort…       0      14    2015 July         27       1       0       2      2\n6 Resort…       0      14    2015 July         27       1       0       2      2\n# … with 22 more variables: children <dbl>, babies <dbl>, meal <chr>,\n#   country <chr>, market_segment <chr>, distribution_channel <chr>,\n#   is_repeated_guest <dbl>, previous_cancellations <dbl>,\n#   previous_bookings_not_canceled <dbl>, reserved_room_type <chr>,\n#   assigned_room_type <chr>, booking_changes <dbl>, deposit_type <chr>,\n#   agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n:::\n\nColumns in the dataset:\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"hotel\"                          \"is_canceled\"                   \n [3] \"lead_time\"                      \"arrival_date_year\"             \n [5] \"arrival_date_month\"             \"arrival_date_week_number\"      \n [7] \"arrival_date_day_of_month\"      \"stays_in_weekend_nights\"       \n [9] \"stays_in_week_nights\"           \"adults\"                        \n[11] \"children\"                       \"babies\"                        \n[13] \"meal\"                           \"country\"                       \n[15] \"market_segment\"                 \"distribution_channel\"          \n[17] \"is_repeated_guest\"              \"previous_cancellations\"        \n[19] \"previous_bookings_not_canceled\" \"reserved_room_type\"            \n[21] \"assigned_room_type\"             \"booking_changes\"               \n[23] \"deposit_type\"                   \"agent\"                         \n[25] \"company\"                        \"days_in_waiting_list\"          \n[27] \"customer_type\"                  \"adr\"                           \n[29] \"required_car_parking_spaces\"    \"total_of_special_requests\"     \n[31] \"reservation_status\"             \"reservation_status_date\"       \n```\n:::\n:::\n\nThe dimensions of the dataset are as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 119390     32\n```\n:::\n:::\n\nThere are 32 columns and 119390 rows in the dataset.\n\n## Tidy Data (as needed)\nI plan on visualizing the number of people who stayed in a hotel during each year so the dataset can be assumed to be tidy and can be used for visualization.\n\n## Visualization with Multiple Dimensions\nFirst I want to analyse at which of these years the hotels had a maximum number of people staying at the hotel. To do that first I will have to filter out the people who cancelled from the dataset, then we can group the data on hotel and arrival_date_year and this data could be summarised to obtain the number of people staying in each of the hotels during different years. The command is as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\nmonth_yearly_data <- data%>%\n  filter(is_canceled == 0)%>%\n  group_by(hotel, arrival_date_year, arrival_date_month)%>%\n  mutate(total_people = adults + children + babies)%>%\n  summarise(bookings = n(), total_guests = sum(total_people))\n\nhead(month_yearly_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n# Groups:   hotel, arrival_date_year [1]\n  hotel      arrival_date_year arrival_date_month bookings total_guests\n  <chr>                  <dbl> <chr>                 <int>        <dbl>\n1 City Hotel              2015 August                 1248         2451\n2 City Hotel              2015 December                986         1876\n3 City Hotel              2015 July                    459          852\n4 City Hotel              2015 November                934         1470\n5 City Hotel              2015 October                2065         3634\n6 City Hotel              2015 September              1986         3456\n```\n:::\n\n```{.r .cell-code}\nyearly_data <- month_yearly_data%>%\n  group_by(hotel, arrival_date_year)%>%\n  summarise(yearly_bookings = sum(bookings), yearly_guests = sum(total_guests))\n\nhead(yearly_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n# Groups:   hotel [2]\n  hotel        arrival_date_year yearly_bookings yearly_guests\n  <chr>                    <dbl>           <int>         <dbl>\n1 City Hotel                2015            7678         13739\n2 City Hotel                2016           22733         44433\n3 City Hotel                2017           15817         31284\n4 Resort Hotel              2015            6176         12205\n5 Resort Hotel              2016           13637         26431\n6 Resort Hotel              2017            9125         17915\n```\n:::\n:::\n\nNow we have a clear idea on the number of bookings that took place and the total number of guests that stayed in a hotel during a particular year. So now similar to the last experiment we try to plot a bar graph indicating these factors.\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(yearly_data) + \n  geom_bar(aes(x = arrival_date_year, y = yearly_guests, fill = hotel), , stat = \"identity\", position = \"dodge\") +\n  labs(title = \"A bar graph depicting total number of guests every year\")\n```\n\n::: {.cell-output-display}\n![](PranavKomaravolu_Challenge7_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nNow we need to visualize the third dimension i.e, months in which the number of guests were high. This information helps the hotel owners prepare well for any kind of future scenarios. We can visualize the three dimensions of yearly guests\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(month_yearly_data, aes(x = arrival_date_year, y = total_guests, col = hotel)) +\n  facet_wrap(vars(hotel))+\n  geom_line() +\n  geom_point()+\n  geom_text(size=2.5, aes(label = arrival_date_month))\n```\n\n::: {.cell-output-display}\n![](PranavKomaravolu_Challenge7_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nThe above plot represents the number of guests that were present during each year and also depicts the number of guests each month.\n",
    "supporting": [
      "PranavKomaravolu_Challenge7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}