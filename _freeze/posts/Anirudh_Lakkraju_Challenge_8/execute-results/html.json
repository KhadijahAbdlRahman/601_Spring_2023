{
  "hash": "7beb28302502748397923f2a7f6c49d0",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8 Instructions\"\nauthor: \"Anirudh Lakkaraju\"\ndescription: \"Joining Data\"\ndate: \"05/15/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - SNL\n  - Anirudh Lakkaraju\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   military marriages ⭐⭐\n-   faostat ⭐⭐\n-   railroads ⭐⭐⭐\n-   fed_rate ⭐⭐⭐\n-   debt ⭐⭐⭐\n-   us_hh ⭐⭐⭐⭐\n-   snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseasons_df <- read.csv(\"_data/snl_seasons.csv\")\nactors_df <- read.csv(\"_data/snl_actors.csv\")\ncasts_df <- read.csv(\"_data/snl_casts.csv\")\n\n# Displaying first few rows of the datasets\nhead(seasons_df) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  sid year first_epid last_epid n_episodes\n1   1 1975   19751011  19760731         24\n2   2 1976   19760918  19770521         22\n3   3 1977   19770924  19780520         20\n4   4 1978   19781007  19790526         20\n5   5 1979   19791013  19800524         20\n6   6 1980   19801115  19810411         13\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(actors_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             aid           url  type  gender\n1  Kate McKinnon   /Cast/?KaMc  cast  female\n2    Alex Moffat   /Cast/?AlMo  cast    male\n3     Ego Nwodim   /Cast/?EgNw  cast unknown\n4     Chris Redd   /Cast/?ChRe  cast    male\n5 Kenan Thompson   /Cast/?KeTh  cast    male\n6 Carey Mulligan /Guests/?3677 guest    andy\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(casts_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               aid sid featured first_epid last_epid update_anchor n_episodes\n1 A. Whitney Brown  11     True   19860222        NA         False          8\n2 A. Whitney Brown  12     True         NA        NA         False         20\n3 A. Whitney Brown  13     True         NA        NA         False         13\n4 A. Whitney Brown  14     True         NA        NA         False         20\n5 A. Whitney Brown  15     True         NA        NA         False         20\n6 A. Whitney Brown  16     True         NA        NA         False         20\n  season_fraction\n1       0.4444444\n2       1.0000000\n3       1.0000000\n4       1.0000000\n5       1.0000000\n6       1.0000000\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Dimensions of datasets\ndim(seasons_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46  5\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(actors_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2306    4\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(casts_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 614   8\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(actors_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     aid                url                type              gender         \n Length:2306        Length:2306        Length:2306        Length:2306       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(seasons_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      sid             year        first_epid         last_epid       \n Min.   : 1.00   Min.   :1975   Min.   :19751011   Min.   :19760731  \n 1st Qu.:12.25   1st Qu.:1986   1st Qu.:19863512   1st Qu.:19872949  \n Median :23.50   Median :1998   Median :19975926   Median :19985512  \n Mean   :23.50   Mean   :1998   Mean   :19975965   Mean   :19985509  \n 3rd Qu.:34.75   3rd Qu.:2009   3rd Qu.:20088423   3rd Qu.:20098015  \n Max.   :46.00   Max.   :2020   Max.   :20201003   Max.   :20210410  \n   n_episodes  \n Min.   :12.0  \n 1st Qu.:20.0  \n Median :20.0  \n Mean   :19.7  \n 3rd Qu.:21.0  \n Max.   :24.0  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(casts_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     aid                 sid          featured           first_epid      \n Length:614         Min.   : 1.00   Length:614         Min.   :19770115  \n Class :character   1st Qu.:15.00   Class :character   1st Qu.:19801215  \n Mode  :character   Median :26.00   Mode  :character   Median :19901110  \n                    Mean   :25.47                      Mean   :19909634  \n                    3rd Qu.:37.00                      3rd Qu.:19957839  \n                    Max.   :46.00                      Max.   :20141025  \n                                                       NA's   :564       \n   last_epid        update_anchor        n_episodes    season_fraction  \n Min.   :19751011   Length:614         Min.   : 1.00   Min.   :0.04167  \n 1st Qu.:19850112   Class :character   1st Qu.:19.00   1st Qu.:1.00000  \n Median :19950225   Mode  :character   Median :20.00   Median :1.00000  \n Mean   :19944038                      Mean   :18.73   Mean   :0.94827  \n 3rd Qu.:20040117                      3rd Qu.:21.00   3rd Qu.:1.00000  \n Max.   :20140201                      Max.   :24.00   Max.   :1.00000  \n NA's   :597                                                            \n```\n:::\n:::\n\n\n### Briefly describe the data\n\n\\\nThe data frames contain organized and independent data. The actors Data Frame includes a comprehensive list of actors, guests, musical guests, and crew members from the show, with each entry representing an individual actor and providing details about their role type and gender.\n\nThe casts data frame focuses on actors who were part of a specific season's cast. Each entry represents an actor and includes information like their featured status, the dates of their first and last episodes, whether they served as an anchor on weekend update, and the number of episodes they participated in during that season.\n\nThe seasons data frame provides information about each season individually. Each entry corresponds to a specific season and includes data such as the airing year, the dates of the first and last episodes, and the total number of episodes.\n\n## Tidy Data (as needed)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors_df <- actors_df %>%\n  drop_na()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nseasons_df <- seasons_df %>%\n  drop_na()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncasts_df <- casts_df %>%\n  drop_na()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(actors_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"    \"url\"    \"type\"   \"gender\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(casts_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"             \"sid\"             \"featured\"        \"first_epid\"     \n[5] \"last_epid\"       \"update_anchor\"   \"n_episodes\"      \"season_fraction\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(seasons_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"        \"year\"       \"first_epid\" \"last_epid\"  \"n_episodes\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nactors_df <- actors_df %>%\n  mutate(appearances = rowSums(select(., starts_with(\"ep_\")), na.rm = TRUE))\n```\n:::\n\n\n## Join Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_casts_actors <- casts_df %>%\n  left_join(actors_df, by = \"aid\") %>%\n  select(sid, type, gender, featured, appearances)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_data <- seasons_df %>%\n  left_join(df_casts_actors, by = \"sid\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(df_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"         \"year\"        \"first_epid\"  \"last_epid\"   \"n_episodes\" \n[6] \"type\"        \"gender\"      \"featured\"    \"appearances\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(df_casts_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"         \"type\"        \"gender\"      \"featured\"    \"appearances\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_data <- casts_df %>%\n  select(-update_anchor, -season_fraction, -n_episodes) %>%\n  left_join(seasons_df, by=\"sid\")\n\njoined_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] aid          sid          featured     first_epid.x last_epid.x \n[6] year         first_epid.y last_epid.y  n_episodes  \n<0 rows> (or 0-length row.names)\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(joined_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"          \"sid\"          \"featured\"     \"first_epid.x\" \"last_epid.x\" \n[6] \"year\"         \"first_epid.y\" \"last_epid.y\"  \"n_episodes\"  \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}