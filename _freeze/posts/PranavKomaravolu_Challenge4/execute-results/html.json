{
  "hash": "a95233a787a180501d6dd48a708d6a8c",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4\"\nauthor: \"Pranav Komaravolu\"\ndescription: \"More data wrangling: pivoting\"\ndate: \"05/18/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: false\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(lubridate)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n<!--## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  identify variables that need to be mutated\n4)  mutate variables and sanity check all mutations\n-->\n## Data Description\nReading the dataset\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"_data/hotel_bookings.csv\", show_col_types = FALSE)\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  hotel   is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n  <chr>     <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n1 Resort…       0     342    2015 July         27       1       0       0      2\n2 Resort…       0     737    2015 July         27       1       0       0      2\n3 Resort…       0       7    2015 July         27       1       0       1      1\n4 Resort…       0      13    2015 July         27       1       0       1      1\n5 Resort…       0      14    2015 July         27       1       0       2      2\n6 Resort…       0      14    2015 July         27       1       0       2      2\n# … with 22 more variables: children <dbl>, babies <dbl>, meal <chr>,\n#   country <chr>, market_segment <chr>, distribution_channel <chr>,\n#   is_repeated_guest <dbl>, previous_cancellations <dbl>,\n#   previous_bookings_not_canceled <dbl>, reserved_room_type <chr>,\n#   assigned_room_type <chr>, booking_changes <dbl>, deposit_type <chr>,\n#   agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n:::\n\nColumns in the dataset\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"hotel\"                          \"is_canceled\"                   \n [3] \"lead_time\"                      \"arrival_date_year\"             \n [5] \"arrival_date_month\"             \"arrival_date_week_number\"      \n [7] \"arrival_date_day_of_month\"      \"stays_in_weekend_nights\"       \n [9] \"stays_in_week_nights\"           \"adults\"                        \n[11] \"children\"                       \"babies\"                        \n[13] \"meal\"                           \"country\"                       \n[15] \"market_segment\"                 \"distribution_channel\"          \n[17] \"is_repeated_guest\"              \"previous_cancellations\"        \n[19] \"previous_bookings_not_canceled\" \"reserved_room_type\"            \n[21] \"assigned_room_type\"             \"booking_changes\"               \n[23] \"deposit_type\"                   \"agent\"                         \n[25] \"company\"                        \"days_in_waiting_list\"          \n[27] \"customer_type\"                  \"adr\"                           \n[29] \"required_car_parking_spaces\"    \"total_of_special_requests\"     \n[31] \"reservation_status\"             \"reservation_status_date\"       \n```\n:::\n:::\n\nThe Dimensions of the dataset is as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 119390     32\n```\n:::\n:::\n\nFrom the above cells we can see that the dataset has 32 columns of which 3 columns only depict the arrival date this can be brought down to one column and that will reduce the dimensionality of the dataset to (119390, 30).\n\n## Tidying the dataset\n\nThe month column in the dataset is as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(data[\"arrival_date_month\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 1\n  arrival_date_month\n  <chr>             \n1 July              \n2 July              \n3 July              \n4 July              \n5 July              \n6 July              \n```\n:::\n:::\n\nThis can be changed to numerical data so that the date can be represented as a string of numerical values depicting month, day and year.\nThe code to mutate the data is as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\nmutated_data <- data %>%\n                  mutate(arrival_date_month = case_when(\n                    arrival_date_month == \"January\" ~ 1,\n                    arrival_date_month == \"Febuary\" ~ 2,\n                    arrival_date_month == \"March\" ~ 3,\n                    arrival_date_month == \"April\" ~ 4,\n                    arrival_date_month == \"May\" ~ 5,\n                    arrival_date_month == \"June\" ~ 6,\n                    arrival_date_month == \"July\" ~ 7,\n                    arrival_date_month == \"August\" ~ 8,\n                    arrival_date_month == \"September\" ~ 9,\n                    arrival_date_month == \"October\" ~ 10,\n                    arrival_date_month == \"November\" ~ 11,\n                    arrival_date_month == \"December\" ~ 12\n                  ))\nhead(mutated_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  hotel   is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n  <chr>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n1 Resort…       0     342    2015       7      27       1       0       0      2\n2 Resort…       0     737    2015       7      27       1       0       0      2\n3 Resort…       0       7    2015       7      27       1       0       1      1\n4 Resort…       0      13    2015       7      27       1       0       1      1\n5 Resort…       0      14    2015       7      27       1       0       2      2\n6 Resort…       0      14    2015       7      27       1       0       2      2\n# … with 22 more variables: children <dbl>, babies <dbl>, meal <chr>,\n#   country <chr>, market_segment <chr>, distribution_channel <chr>,\n#   is_repeated_guest <dbl>, previous_cancellations <dbl>,\n#   previous_bookings_not_canceled <dbl>, reserved_room_type <chr>,\n#   assigned_room_type <chr>, booking_changes <dbl>, deposit_type <chr>,\n#   agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n:::\n\n\n## Variables to be mutated\nNow we can mutate all the three columns arrival_date_year, arrival_date_month, arrival_date_day_of_month to a single column arrival_date\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_data <- mutated_data %>%\n                mutate(\n                  arrival_date = make_date(arrival_date_year, arrival_date_month, arrival_date_day_of_month)\n                ) %>%\n                select(-c(arrival_date_day_of_month, arrival_date_month, arrival_date_year))\n\nhead(final_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 30\n  hotel      is_ca…¹ lead_…² arriv…³ stays…⁴ stays…⁵ adults child…⁶ babies meal \n  <chr>        <dbl>   <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl> <chr>\n1 Resort Ho…       0     342      27       0       0      2       0      0 BB   \n2 Resort Ho…       0     737      27       0       0      2       0      0 BB   \n3 Resort Ho…       0       7      27       0       1      1       0      0 BB   \n4 Resort Ho…       0      13      27       0       1      1       0      0 BB   \n5 Resort Ho…       0      14      27       0       2      2       0      0 BB   \n6 Resort Ho…       0      14      27       0       2      2       0      0 BB   \n# … with 20 more variables: country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>,\n#   total_of_special_requests <dbl>, reservation_status <chr>, …\n```\n:::\n:::\n\nThe dimensions of the new modified dataset is as follows:\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(final_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 119390     30\n```\n:::\n:::\n\nTherefore we achieved the desired target and reduced the divided arrival date data into a single column.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}