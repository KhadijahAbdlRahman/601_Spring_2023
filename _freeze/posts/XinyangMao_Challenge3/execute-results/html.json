{
  "hash": "e030a6722aac041f2d616d6cd1300d90",
  "result": {
    "markdown": "---\ntitle: \"Challenge_3\"\nauthor: \"XinyangMao\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"03/17/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - eggs\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n-   aniceggpoultry.xls \n\n\n::: {.cell}\n\n```{.r .cell-code}\nexcel_sheets(\"_data/organiceggpoultry.xls\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Data\"                            \"Organic egg prices, 2004-13\"    \n[3] \"Organic poultry prices, 2004-13\"\n```\n:::\n:::\n\n\n### Import data\nUse the date col in eggs form\n\n::: {.cell}\n\n```{.r .cell-code}\ndate<-read_excel(\"_data/organiceggpoultry.xls\",\n                      sheet=\"Data\",\n                      range =cell_limits(c(6,2),c(NA,2)),\n                      col_names = c(\"date\")\n                 )\ndate\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 1\n   date     \n   <chr>    \n 1 Jan 2004 \n 2 February \n 3 March    \n 4 April    \n 5 May      \n 6 June     \n 7 July     \n 8 August   \n 9 September\n10 October  \n# … with 110 more rows\n```\n:::\n:::\n\nImport chicken data\n\n::: {.cell}\n\n```{.r .cell-code}\nchicken_orig<-read_excel(\"_data/organiceggpoultry.xls\",\n                      sheet=\"Data\",\n                      range =cell_limits(c(6,8),c(NA,12)),\n                      col_names = c(\"Whole\",\n                               \"B/S_Breast\", \"Bone-in_Breast\",\n                               \"Whole_Legs\",\"Thighs\")\n                 )\nhead(chicken_orig)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  Whole `B/S_Breast` `Bone-in_Breast` Whole_Legs Thighs \n  <dbl>        <dbl> <chr>                 <dbl> <chr>  \n1  198.         646. too few                194. too few\n2  198.         642. too few                194. 203    \n3  209          642. too few                194. 203    \n4  212          642. too few                194. 203    \n5  214.         642. too few                194. 203    \n6  216.         641  too few                202. 200.375\n```\n:::\n:::\n\nMerge date column and chicken data\n\n::: {.cell}\n\n```{.r .cell-code}\nchicken_merged <- cbind(date,chicken_orig)\nhead(chicken_merged)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      date   Whole B/S_Breast Bone-in_Breast Whole_Legs  Thighs\n1 Jan 2004 197.500      645.5        too few    193.500 too few\n2 February 197.500      642.5        too few    193.500     203\n3    March 209.000      642.5        too few    193.500     203\n4    April 212.000      642.5        too few    193.500     203\n5      May 214.500      642.5        too few    193.500     203\n6     June 216.375      641.0        too few    201.875 200.375\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchicken_merged%>%\n  count(date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          date  n\n1        April 10\n2       August 10\n3     December 10\n4     February  8\n5  February /1  2\n6     Jan 2004  1\n7     Jan 2005  1\n8     Jan 2006  1\n9     Jan 2007  1\n10    Jan 2008  1\n11    Jan 2009  1\n12    Jan 2010  1\n13    Jan 2011  1\n14    Jan 2012  1\n15    Jan 2013  1\n16        July 10\n17        June 10\n18       March 10\n19         May 10\n20    November 10\n21     October 10\n22   September 10\n```\n:::\n:::\n\nSame,we need to remove the \"/1\"\n\n::: {.cell}\n\n```{.r .cell-code}\nchicken<-chicken_merged%>%\n  mutate(date = str_remove(date, \" /1\"))\nhead(chicken)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      date   Whole B/S_Breast Bone-in_Breast Whole_Legs  Thighs\n1 Jan 2004 197.500      645.5        too few    193.500 too few\n2 February 197.500      642.5        too few    193.500     203\n3    March 209.000      642.5        too few    193.500     203\n4    April 212.000      642.5        too few    193.500     203\n5      May 214.500      642.5        too few    193.500     203\n6     June 216.375      641.0        too few    201.875 200.375\n```\n:::\n:::\n\nThen use separate() to split the date to month and year columns.We can use fill() to fill the blank year cell.\n\n::: {.cell}\n\n```{.r .cell-code}\nchicken<-chicken%>%\n  separate(date, into=c(\"month\", \"year\"), sep=\" \")%>%\n  fill(year)\nhead(chicken)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     month year   Whole B/S_Breast Bone-in_Breast Whole_Legs  Thighs\n1      Jan 2004 197.500      645.5        too few    193.500 too few\n2 February 2004 197.500      642.5        too few    193.500     203\n3    March 2004 209.000      642.5        too few    193.500     203\n4    April 2004 212.000      642.5        too few    193.500     203\n5      May 2004 214.500      642.5        too few    193.500     203\n6     June 2004 216.375      641.0        too few    201.875 200.375\n```\n:::\n:::\n\n\n\n## find current and future data dimensions\nWe can see there are 120 rows and 7 columns in this dataset,I'll use 2 of variables to identify a case,so I'll pivoting 7-2 variables into a longer format.Therefore,we would expect 120*(7-2)=600 rows in the pivoted dataframe.\n\n::: {.cell}\n\n```{.r .cell-code}\n#row number\nnrow(chicken)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#column number\nncol(chicken)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#expect row number after pivoted\nnrow(chicken) * (ncol(chicken)-2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 600\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#expect column number after pivoted\n2 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\n## Pivot the Chosen Data\n### Converting data types\nAs we can see,in the chicken data sheet,there are some string \"too few\" exist in 5 columns,so before we pivoting the data we should use a numeric type value replace them and convert all of the character type of number into numeric type value.\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\nchicken_db<-chicken\nchicken_db <- chicken_db%>%\n  mutate(across(`Whole`:`Thighs`,~ifelse(. == \"too few\",0.0,as.numeric(.))))\nhead(chicken_db)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     month year   Whole B/S_Breast Bone-in_Breast Whole_Legs  Thighs\n1      Jan 2004 197.500      645.5              0    193.500   0.000\n2 February 2004 197.500      642.5              0    193.500 203.000\n3    March 2004 209.000      642.5              0    193.500 203.000\n4    April 2004 212.000      642.5              0    193.500 203.000\n5      May 2004 214.500      642.5              0    193.500 203.000\n6     June 2004 216.375      641.0              0    201.875 200.375\n```\n:::\n:::\n\n\nNow all of the data are avaiable,we can use pivot_longer() function to make the dataset be longer.There are 7 variables in this dataset,but we need to use other 2 variavles to instead 5 of them.\n\n::: {.cell}\n\n```{.r .cell-code}\nchicken_long<-chicken_db%>%\n  pivot_longer(cols=c(`Whole`:`Thighs`), \n               names_to = \"ChickenType\",\n               values_to = \"Price\"\n  )\nhead(chicken_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  month    year  ChickenType    Price\n  <chr>    <chr> <chr>          <dbl>\n1 Jan      2004  Whole           198.\n2 Jan      2004  B/S_Breast      646.\n3 Jan      2004  Bone-in_Breast    0 \n4 Jan      2004  Whole_Legs      194.\n5 Jan      2004  Thighs            0 \n6 February 2004  Whole           198.\n```\n:::\n:::\n\nYes, once it is pivoted long, our resulting data are $600x4$ - exactly what we expected!\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}