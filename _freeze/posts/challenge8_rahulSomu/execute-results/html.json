{
  "hash": "d8c982079c76f684be0460e32fceb06a",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Rahul Somu\"\ndescription: \"Joining Data\"\ndate: \"05/16/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - railroads\n  - snl\n  - faostat\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n:::\n\n\n### Briefly describe the data\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n\nAfter checking the sanity of the data by using glimpse function to check the data types & column names and NA count, it has been found that casts data has more NA values. So it would be ideal to move ahead with actors and seasons data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n# Load the data sets\nsnl_actors <- read_csv(\"_data/snl_actors.csv\")\nsnl_casts <- read_csv(\"_data/snl_casts.csv\")\nsnl_seasons <- read_csv(\"_data/snl_seasons.csv\")\n\n# Check the structure of the data sets\nnames(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"    \"url\"    \"type\"   \"gender\"\n```\n:::\n\n```{.r .cell-code}\nglimpse(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,306\nColumns: 4\n$ aid    <chr> \"Kate McKinnon\", \"Alex Moffat\", \"Ego Nwodim\", \"Chris Redd\", \"Ke…\n$ url    <chr> \"/Cast/?KaMc\", \"/Cast/?AlMo\", \"/Cast/?EgNw\", \"/Cast/?ChRe\", \"/C…\n$ type   <chr> \"cast\", \"cast\", \"cast\", \"cast\", \"cast\", \"guest\", \"guest\", \"cast…\n$ gender <chr> \"female\", \"male\", \"unknown\", \"male\", \"male\", \"andy\", \"male\", \"f…\n```\n:::\n\n```{.r .cell-code}\nnames(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"             \"sid\"             \"featured\"        \"first_epid\"     \n[5] \"last_epid\"       \"update_anchor\"   \"n_episodes\"      \"season_fraction\"\n```\n:::\n\n```{.r .cell-code}\nglimpse(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 614\nColumns: 8\n$ aid             <chr> \"A. Whitney Brown\", \"A. Whitney Brown\", \"A. Whitney Br…\n$ sid             <dbl> 11, 12, 13, 14, 15, 16, 5, 39, 40, 41, 42, 45, 46, 21,…\n$ featured        <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, …\n$ first_epid      <dbl> 19860222, NA, NA, NA, NA, NA, 19800409, 20140118, NA, …\n$ last_epid       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ update_anchor   <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE…\n$ n_episodes      <dbl> 8, 20, 13, 20, 20, 20, 5, 11, 21, 21, 21, 18, 17, 20, …\n$ season_fraction <dbl> 0.4444444, 1.0000000, 1.0000000, 1.0000000, 1.0000000,…\n```\n:::\n\n```{.r .cell-code}\nnames(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"        \"year\"       \"first_epid\" \"last_epid\"  \"n_episodes\"\n```\n:::\n\n```{.r .cell-code}\nglimpse(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 46\nColumns: 5\n$ sid        <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ year       <dbl> 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,…\n$ first_epid <dbl> 19751011, 19760918, 19770924, 19781007, 19791013, 19801115,…\n$ last_epid  <dbl> 19760731, 19770521, 19780520, 19790526, 19800524, 19810411,…\n$ n_episodes <dbl> 24, 22, 20, 20, 20, 13, 20, 20, 19, 17, 18, 20, 13, 20, 20,…\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(snl_actors))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 57\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(snl_casts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1161\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(snl_seasons))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\n## Join Data\n\nBe sure to include a sanity check, and double-check that case count is correct!\n\nDocument your work here.\n\nBelow we join both the datasets, then convert dates to appropriate format and create a new colummn with season duration.\nFeatured, updated_anchor are converted to factors. Then we create a visualisation with number of episodes per season.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nsnl <- left_join(snl_seasons, snl_casts, by = \"sid\")\n\nstr(snl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nspc_tbl_ [614 × 12] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ sid            : num [1:614] 1 1 1 1 1 1 1 1 1 2 ...\n $ year           : num [1:614] 1975 1975 1975 1975 1975 ...\n $ first_epid.x   : num [1:614] 19751011 19751011 19751011 19751011 19751011 ...\n $ last_epid.x    : num [1:614] 19760731 19760731 19760731 19760731 19760731 ...\n $ n_episodes.x   : num [1:614] 24 24 24 24 24 24 24 24 24 22 ...\n $ aid            : chr [1:614] \"Gilda Radner\" \"Michael O'Donoghue\" \"Laraine Newman\" \"Garrett Morris\" ...\n $ featured       : logi [1:614] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ first_epid.y   : num [1:614] NA NA NA NA NA NA NA NA NA NA ...\n $ last_epid.y    : num [1:614] NA 19751108 NA NA NA ...\n $ update_anchor  : logi [1:614] FALSE FALSE FALSE FALSE FALSE FALSE ...\n $ n_episodes.y   : num [1:614] 24 4 24 24 24 1 24 24 24 22 ...\n $ season_fraction: num [1:614] 1 0.167 1 1 1 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   sid = col_double(),\n  ..   year = col_double(),\n  ..   first_epid = col_double(),\n  ..   last_epid = col_double(),\n  ..   n_episodes = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nsnl$first_epid.x <- as.Date(as.character(snl$first_epid.x), format = \"%Y%m%d\")\nsnl$last_epid.x <- as.Date(as.character(snl$last_epid.x), format = \"%Y%m%d\")\n\nsnl$featured <- as.factor(snl$featured)\nsnl$update_anchor <- as.factor(snl$update_anchor)\n\nsnl$aid <- factor(snl$aid, levels = unique(snl$aid[order(table(snl$aid), decreasing = TRUE)]))\n\nsnl$season_duration <- snl$last_epid.x - snl$first_epid.x\n\nsnl$season_fraction <- as.numeric(snl$season_fraction)\n\nggplot(snl, aes(x = sid, y = n_episodes.x)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Season\", y = \"Number of Episodes\")\n```\n\n::: {.cell-output-display}\n![](challenge8_rahulSomu_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "challenge8_rahulSomu_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}