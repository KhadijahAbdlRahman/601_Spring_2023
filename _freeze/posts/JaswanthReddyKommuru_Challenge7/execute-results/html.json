{
  "hash": "d3f7d2bd0f5d3ecc95e3f0ba59674f52",
  "result": {
    "markdown": "---\ntitle: \"Challenge 7\"\nauthor: \"Jaswanth Reddy Kommuru\"\ndescription: \"Visualizing Multiple Dimensions\"\ndate: \"05/11/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_7\n  - Jaswanth Reddy Kommuru\n  - AB_NYC_2019\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  Recreate at least two graphs from previous exercises, but introduce at least one additional dimension that you omitted before using ggplot functionality (color, shape, line, facet, etc) The goal is not to create unneeded [chart ink (Tufte)](https://www.edwardtufte.com/tufte/), but to concisely capture variation in additional dimensions that were collapsed in your earlier 2 or 3 dimensional graphs.\n   - Explain why you choose the specific graph type\n5) If you haven't tried in previous weeks, work this week to make your graphs \"publication\" ready with titles, captions, and pretty axis labels and other viewer-friendly features\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code. And anyone not familiar with Edward Tufte should check out his [fantastic books](https://www.edwardtufte.com/tufte/books_vdqi) and [courses on data visualizaton.](https://www.edwardtufte.com/tufte/courses)\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - eggs ⭐\n  - abc_poll ⭐⭐\n  - australian_marriage ⭐⭐\n  - hotel_bookings ⭐⭐⭐\n  - air_bnb  ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - faostat ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabnyc_data <- read.csv(\"_data/AB_NYC_2019.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(abnyc_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    id                                             name host_id   host_name\n1 2539               Clean & quiet apt home by the park    2787        John\n2 2595                            Skylit Midtown Castle    2845    Jennifer\n3 3647              THE VILLAGE OF HARLEM....NEW YORK !    4632   Elisabeth\n4 3831                  Cozy Entire Floor of Brownstone    4869 LisaRoxanne\n5 5022 Entire Apt: Spacious Studio/Loft by central park    7192       Laura\n6 5099        Large Cozy 1 BR Apartment In Midtown East    7322       Chris\n  neighbourhood_group neighbourhood latitude longitude       room_type price\n1            Brooklyn    Kensington 40.64749 -73.97237    Private room   149\n2           Manhattan       Midtown 40.75362 -73.98377 Entire home/apt   225\n3           Manhattan        Harlem 40.80902 -73.94190    Private room   150\n4            Brooklyn  Clinton Hill 40.68514 -73.95976 Entire home/apt    89\n5           Manhattan   East Harlem 40.79851 -73.94399 Entire home/apt    80\n6           Manhattan   Murray Hill 40.74767 -73.97500 Entire home/apt   200\n  minimum_nights number_of_reviews last_review reviews_per_month\n1              1                 9  2018-10-19              0.21\n2              1                45  2019-05-21              0.38\n3              3                 0                            NA\n4              1               270  2019-07-05              4.64\n5             10                 9  2018-11-19              0.10\n6              3                74  2019-06-22              0.59\n  calculated_host_listings_count availability_365\n1                              6              365\n2                              2              355\n3                              1              365\n4                              1              194\n5                              1                0\n6                              1              129\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(abnyc_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895    16\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(abnyc_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t48895 obs. of  16 variables:\n $ id                            : int  2539 2595 3647 3831 5022 5099 5121 5178 5203 5238 ...\n $ name                          : chr  \"Clean & quiet apt home by the park\" \"Skylit Midtown Castle\" \"THE VILLAGE OF HARLEM....NEW YORK !\" \"Cozy Entire Floor of Brownstone\" ...\n $ host_id                       : int  2787 2845 4632 4869 7192 7322 7356 8967 7490 7549 ...\n $ host_name                     : chr  \"John\" \"Jennifer\" \"Elisabeth\" \"LisaRoxanne\" ...\n $ neighbourhood_group           : chr  \"Brooklyn\" \"Manhattan\" \"Manhattan\" \"Brooklyn\" ...\n $ neighbourhood                 : chr  \"Kensington\" \"Midtown\" \"Harlem\" \"Clinton Hill\" ...\n $ latitude                      : num  40.6 40.8 40.8 40.7 40.8 ...\n $ longitude                     : num  -74 -74 -73.9 -74 -73.9 ...\n $ room_type                     : chr  \"Private room\" \"Entire home/apt\" \"Private room\" \"Entire home/apt\" ...\n $ price                         : int  149 225 150 89 80 200 60 79 79 150 ...\n $ minimum_nights                : int  1 1 3 1 10 3 45 2 2 1 ...\n $ number_of_reviews             : int  9 45 0 270 9 74 49 430 118 160 ...\n $ last_review                   : chr  \"2018-10-19\" \"2019-05-21\" \"\" \"2019-07-05\" ...\n $ reviews_per_month             : num  0.21 0.38 NA 4.64 0.1 0.59 0.4 3.47 0.99 1.33 ...\n $ calculated_host_listings_count: int  6 2 1 1 1 1 1 1 1 4 ...\n $ availability_365              : int  365 355 365 194 0 129 0 220 0 188 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(abnyc_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id               name              host_id           host_name        \n Min.   :    2539   Length:48895       Min.   :     2438   Length:48895      \n 1st Qu.: 9471945   Class :character   1st Qu.:  7822033   Class :character  \n Median :19677284   Mode  :character   Median : 30793816   Mode  :character  \n Mean   :19017143                      Mean   : 67620011                     \n 3rd Qu.:29152178                      3rd Qu.:107434423                     \n Max.   :36487245                      Max.   :274321313                     \n                                                                             \n neighbourhood_group neighbourhood         latitude       longitude     \n Length:48895        Length:48895       Min.   :40.50   Min.   :-74.24  \n Class :character    Class :character   1st Qu.:40.69   1st Qu.:-73.98  \n Mode  :character    Mode  :character   Median :40.72   Median :-73.96  \n                                        Mean   :40.73   Mean   :-73.95  \n                                        3rd Qu.:40.76   3rd Qu.:-73.94  \n                                        Max.   :40.91   Max.   :-73.71  \n                                                                        \n  room_type             price         minimum_nights    number_of_reviews\n Length:48895       Min.   :    0.0   Min.   :   1.00   Min.   :  0.00   \n Class :character   1st Qu.:   69.0   1st Qu.:   1.00   1st Qu.:  1.00   \n Mode  :character   Median :  106.0   Median :   3.00   Median :  5.00   \n                    Mean   :  152.7   Mean   :   7.03   Mean   : 23.27   \n                    3rd Qu.:  175.0   3rd Qu.:   5.00   3rd Qu.: 24.00   \n                    Max.   :10000.0   Max.   :1250.00   Max.   :629.00   \n                                                                         \n last_review        reviews_per_month calculated_host_listings_count\n Length:48895       Min.   : 0.010    Min.   :  1.000               \n Class :character   1st Qu.: 0.190    1st Qu.:  1.000               \n Mode  :character   Median : 0.720    Median :  1.000               \n                    Mean   : 1.373    Mean   :  7.144               \n                    3rd Qu.: 2.020    3rd Qu.:  2.000               \n                    Max.   :58.500    Max.   :327.000               \n                    NA's   :10052                                   \n availability_365\n Min.   :  0.0   \n 1st Qu.:  0.0   \n Median : 45.0   \n Mean   :112.8   \n 3rd Qu.:227.0   \n Max.   :365.0   \n                 \n```\n:::\n:::\n\n\n\n\n\n\n### Briefly describe the data\n\nThe dataset includes information on roughly 49,000 Airbnb rentals in New York City in 2019. The 16 variables that make up each observation, which represents a unique rental unit, include the ID, name, location, host ID and name, room type, price, minimum number of nights for a reservation, number of reviews, last review date, average monthly reviews, calculated count of hosts' Airbnb listings, and availability.\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabnyc_data <- abnyc_data[complete.cases(abnyc_data), ]\nabnyc_data <- abnyc_data %>%\n  mutate(Price_Range = case_when(price > 380 ~ \"high\", TRUE ~ \"low\"))\n```\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n:::\n\n\n## Visualization with Multiple Dimensions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(abnyc_data, aes(x = room_type, y = price)) +\n  geom_boxplot(fill = \"gray\", color = \"green\") +\n  labs(title = \"Price Distribution by Room Type\", x = \"Room Type\", y = \"Price\")\n```\n\n::: {.cell-output-display}\n![](JaswanthReddyKommuru_Challenge7_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(abnyc_data, aes(x = price, y = reviews_per_month)) +\n  geom_jitter(alpha = 0.6, color = \"blue\") +\n  geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +\n  labs(title = \"Price vs Reviews per Month\", x = \"Price\", y = \"Reviews per Month\")\n```\n\n::: {.cell-output-display}\n![](JaswanthReddyKommuru_Challenge7_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(abnyc_data, aes(x = room_type, y = price)) +\n  geom_boxplot(fill = \"gray\", color = \"green\") +\n  geom_jitter(aes(color = reviews_per_month), alpha = 0.6, width = 0.3) +\n  labs(title = \"Price Distribution by Room Type\", x = \"Room Type\", y = \"Price\")\n```\n\n::: {.cell-output-display}\n![](JaswanthReddyKommuru_Challenge7_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "JaswanthReddyKommuru_Challenge7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}