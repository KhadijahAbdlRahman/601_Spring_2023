{
  "hash": "1a1a690c98ddf54707079328566792ae",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Jaswanth Reddy Kommuru\"\ndescription: \"Joining Data\"\ndate: \"05/11/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - Jaswanth Reddy Kommuru\n  - snl\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadata <- read.csv(\"~/Documents/601/601_Spring_2023/posts/_data/snl_actors.csv\")\ncdata <- read.csv(\"~/Documents/601/601_Spring_2023/posts/_data/snl_casts.csv\")\nsdata <- read.csv(\"~/Documents/601/601_Spring_2023/posts/_data/snl_seasons.csv\")\n```\n:::\n\n\n### Briefly describe the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(sdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  sid year first_epid last_epid n_episodes\n1   1 1975   19751011  19760731         24\n2   2 1976   19760918  19770521         22\n3   3 1977   19770924  19780520         20\n4   4 1978   19781007  19790526         20\n5   5 1979   19791013  19800524         20\n6   6 1980   19801115  19810411         13\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               aid sid featured first_epid last_epid update_anchor n_episodes\n1 A. Whitney Brown  11     True   19860222        NA         False          8\n2 A. Whitney Brown  12     True         NA        NA         False         20\n3 A. Whitney Brown  13     True         NA        NA         False         13\n4 A. Whitney Brown  14     True         NA        NA         False         20\n5 A. Whitney Brown  15     True         NA        NA         False         20\n6 A. Whitney Brown  16     True         NA        NA         False         20\n  season_fraction\n1       0.4444444\n2       1.0000000\n3       1.0000000\n4       1.0000000\n5       1.0000000\n6       1.0000000\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(adata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             aid           url  type  gender\n1  Kate McKinnon   /Cast/?KaMc  cast  female\n2    Alex Moffat   /Cast/?AlMo  cast    male\n3     Ego Nwodim   /Cast/?EgNw  cast unknown\n4     Chris Redd   /Cast/?ChRe  cast    male\n5 Kenan Thompson   /Cast/?KeTh  cast    male\n6 Carey Mulligan /Guests/?3677 guest    andy\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(sdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t46 obs. of  5 variables:\n $ sid       : int  1 2 3 4 5 6 7 8 9 10 ...\n $ year      : int  1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 ...\n $ first_epid: int  19751011 19760918 19770924 19781007 19791013 19801115 19811003 19820925 19831008 19841006 ...\n $ last_epid : int  19760731 19770521 19780520 19790526 19800524 19810411 19820522 19830514 19840512 19850413 ...\n $ n_episodes: int  24 22 20 20 20 13 20 20 19 17 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(cdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t614 obs. of  8 variables:\n $ aid            : chr  \"A. Whitney Brown\" \"A. Whitney Brown\" \"A. Whitney Brown\" \"A. Whitney Brown\" ...\n $ sid            : int  11 12 13 14 15 16 5 39 40 41 ...\n $ featured       : chr  \"True\" \"True\" \"True\" \"True\" ...\n $ first_epid     : num  19860222 NA NA NA NA ...\n $ last_epid      : num  NA NA NA NA NA NA NA NA NA NA ...\n $ update_anchor  : chr  \"False\" \"False\" \"False\" \"False\" ...\n $ n_episodes     : int  8 20 13 20 20 20 5 11 21 21 ...\n $ season_fraction: num  0.444 1 1 1 1 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(adata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t2306 obs. of  4 variables:\n $ aid   : chr  \"Kate McKinnon\" \"Alex Moffat\" \"Ego Nwodim\" \"Chris Redd\" ...\n $ url   : chr  \"/Cast/?KaMc\" \"/Cast/?AlMo\" \"/Cast/?EgNw\" \"/Cast/?ChRe\" ...\n $ type  : chr  \"cast\" \"cast\" \"cast\" \"cast\" ...\n $ gender: chr  \"female\" \"male\" \"unknown\" \"male\" ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(adata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2306    4\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(sdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46  5\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(cdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 614   8\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(snldata)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.data.frame(x): object 'snldata' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(snldata)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'snldata' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(adata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     aid                url                type              gender         \n Length:2306        Length:2306        Length:2306        Length:2306       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(cdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     aid                 sid          featured           first_epid      \n Length:614         Min.   : 1.00   Length:614         Min.   :19770115  \n Class :character   1st Qu.:15.00   Class :character   1st Qu.:19801215  \n Mode  :character   Median :26.00   Mode  :character   Median :19901110  \n                    Mean   :25.47                      Mean   :19909634  \n                    3rd Qu.:37.00                      3rd Qu.:19957839  \n                    Max.   :46.00                      Max.   :20141025  \n                                                       NA's   :564       \n   last_epid        update_anchor        n_episodes    season_fraction  \n Min.   :19751011   Length:614         Min.   : 1.00   Min.   :0.04167  \n 1st Qu.:19850112   Class :character   1st Qu.:19.00   1st Qu.:1.00000  \n Median :19950225   Mode  :character   Median :20.00   Median :1.00000  \n Mean   :19944038                      Mean   :18.73   Mean   :0.94827  \n 3rd Qu.:20040117                      3rd Qu.:21.00   3rd Qu.:1.00000  \n Max.   :20140201                      Max.   :24.00   Max.   :1.00000  \n NA's   :597                                                            \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(sdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      sid             year        first_epid         last_epid       \n Min.   : 1.00   Min.   :1975   Min.   :19751011   Min.   :19760731  \n 1st Qu.:12.25   1st Qu.:1986   1st Qu.:19863512   1st Qu.:19872949  \n Median :23.50   Median :1998   Median :19975926   Median :19985512  \n Mean   :23.50   Mean   :1998   Mean   :19975965   Mean   :19985509  \n 3rd Qu.:34.75   3rd Qu.:2009   3rd Qu.:20088423   3rd Qu.:20098015  \n Max.   :46.00   Max.   :2020   Max.   :20201003   Max.   :20210410  \n   n_episodes  \n Min.   :12.0  \n 1st Qu.:20.0  \n Median :20.0  \n Mean   :19.7  \n 3rd Qu.:21.0  \n Max.   :24.0  \n```\n:::\n:::\n\n\n\nSeparate and well-organized data are contained in the data frames. The list of people who have appeared on the show, including actors, guests, musical guests, and staff members, is vast in the Actors Data Frame. Each item is specific to each actor and includes information about their gender and type of role. The Casts Data Frame, on the other hand, concentrates on actors who were a part of the cast during a specific season. Each item corresponds to a particular actor and contains details like the number of episodes they appeared in that season, the dates of their first and last appearances, whether they were a Weekend Update anchor, and their featured status. The Seasons Data Frame, contains details about each distinct season. Each entry is for a specific season and contains information about that season, including the year it debuted, the premiere and finale dates, and the total number of episodes.\n\n\n\n\n\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsdata <- sdata %>%\n  mutate(across(c(first_epid, last_epid), ymd))\n\ncdata <- cdata %>%\n  mutate(across(c(first_epid, last_epid), ymd))\n```\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n:::\n\n\n## Join Data\n\nBe sure to include a sanity check, and double-check that case count is correct!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadata <- adata %>%\n  filter(type == \"cast\") %>%\n  select(-url)\n\nmember_count <- n_distinct(cdata$aid)\nmember_count\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 156\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njoined_data <- full_join(adata, cdata, by = \"aid\") %>%\n        select(c(aid, gender, sid, featured, update_anchor))\n\nhead(joined_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            aid gender sid featured update_anchor\n1 Kate McKinnon female  37     True         False\n2 Kate McKinnon female  38     True         False\n3 Kate McKinnon female  39    False         False\n4 Kate McKinnon female  40    False         False\n5 Kate McKinnon female  41    False         False\n6 Kate McKinnon female  42    False         False\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}