{
  "hash": "903d9929326c2e528e82e5f799987378",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4\"\nauthor: \"FNU Avinesh Krishnan\"\ndescription: \"More data wrangling: pivoting\"\ndate: \"05/15/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - FNU Avinesh Krishnan\n  - HOTEL\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  identify variables that need to be mutated\n4)  mutate variables and sanity check all mutations\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   abc_poll.csv ⭐\n-   poultry_tidy.xlsx or organiceggpoultry.xls⭐⭐\n-   FedFundsRate.csv⭐⭐⭐\n-   hotel_bookings.csv⭐⭐⭐⭐\n-   debt_in_trillions.xlsx ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotelbookdata <- read_csv(\"~/Desktop/601_Spring_2023/posts/_data/hotel_bookings.csv\")\n```\n:::\n\n\n### Briefly describe the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(hotelbookdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 32\n  hotel   is_ca…¹ lead_…² arriv…³ arriv…⁴ arriv…⁵ arriv…⁶ stays…⁷ stays…⁸ adults\n  <chr>     <dbl>   <dbl>   <dbl> <chr>     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>\n1 Resort…       0     342    2015 July         27       1       0       0      2\n2 Resort…       0     737    2015 July         27       1       0       0      2\n3 Resort…       0       7    2015 July         27       1       0       1      1\n4 Resort…       0      13    2015 July         27       1       0       1      1\n5 Resort…       0      14    2015 July         27       1       0       2      2\n6 Resort…       0      14    2015 July         27       1       0       2      2\n# … with 22 more variables: children <dbl>, babies <dbl>, meal <chr>,\n#   country <chr>, market_segment <chr>, distribution_channel <chr>,\n#   is_repeated_guest <dbl>, previous_cancellations <dbl>,\n#   previous_bookings_not_canceled <dbl>, reserved_room_type <chr>,\n#   assigned_room_type <chr>, booking_changes <dbl>, deposit_type <chr>,\n#   agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(hotelbookdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nspc_tbl_ [119,390 × 32] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ hotel                         : chr [1:119390] \"Resort Hotel\" \"Resort Hotel\" \"Resort Hotel\" \"Resort Hotel\" ...\n $ is_canceled                   : num [1:119390] 0 0 0 0 0 0 0 0 1 1 ...\n $ lead_time                     : num [1:119390] 342 737 7 13 14 14 0 9 85 75 ...\n $ arrival_date_year             : num [1:119390] 2015 2015 2015 2015 2015 ...\n $ arrival_date_month            : chr [1:119390] \"July\" \"July\" \"July\" \"July\" ...\n $ arrival_date_week_number      : num [1:119390] 27 27 27 27 27 27 27 27 27 27 ...\n $ arrival_date_day_of_month     : num [1:119390] 1 1 1 1 1 1 1 1 1 1 ...\n $ stays_in_weekend_nights       : num [1:119390] 0 0 0 0 0 0 0 0 0 0 ...\n $ stays_in_week_nights          : num [1:119390] 0 0 1 1 2 2 2 2 3 3 ...\n $ adults                        : num [1:119390] 2 2 1 1 2 2 2 2 2 2 ...\n $ children                      : num [1:119390] 0 0 0 0 0 0 0 0 0 0 ...\n $ babies                        : num [1:119390] 0 0 0 0 0 0 0 0 0 0 ...\n $ meal                          : chr [1:119390] \"BB\" \"BB\" \"BB\" \"BB\" ...\n $ country                       : chr [1:119390] \"PRT\" \"PRT\" \"GBR\" \"GBR\" ...\n $ market_segment                : chr [1:119390] \"Direct\" \"Direct\" \"Direct\" \"Corporate\" ...\n $ distribution_channel          : chr [1:119390] \"Direct\" \"Direct\" \"Direct\" \"Corporate\" ...\n $ is_repeated_guest             : num [1:119390] 0 0 0 0 0 0 0 0 0 0 ...\n $ previous_cancellations        : num [1:119390] 0 0 0 0 0 0 0 0 0 0 ...\n $ previous_bookings_not_canceled: num [1:119390] 0 0 0 0 0 0 0 0 0 0 ...\n $ reserved_room_type            : chr [1:119390] \"C\" \"C\" \"A\" \"A\" ...\n $ assigned_room_type            : chr [1:119390] \"C\" \"C\" \"C\" \"A\" ...\n $ booking_changes               : num [1:119390] 3 4 0 0 0 0 0 0 0 0 ...\n $ deposit_type                  : chr [1:119390] \"No Deposit\" \"No Deposit\" \"No Deposit\" \"No Deposit\" ...\n $ agent                         : chr [1:119390] \"NULL\" \"NULL\" \"NULL\" \"304\" ...\n $ company                       : chr [1:119390] \"NULL\" \"NULL\" \"NULL\" \"NULL\" ...\n $ days_in_waiting_list          : num [1:119390] 0 0 0 0 0 0 0 0 0 0 ...\n $ customer_type                 : chr [1:119390] \"Transient\" \"Transient\" \"Transient\" \"Transient\" ...\n $ adr                           : num [1:119390] 0 0 75 75 98 ...\n $ required_car_parking_spaces   : num [1:119390] 0 0 0 0 0 0 0 0 0 0 ...\n $ total_of_special_requests     : num [1:119390] 0 0 0 0 1 1 0 1 1 0 ...\n $ reservation_status            : chr [1:119390] \"Check-Out\" \"Check-Out\" \"Check-Out\" \"Check-Out\" ...\n $ reservation_status_date       : Date[1:119390], format: \"2015-07-01\" \"2015-07-01\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   hotel = col_character(),\n  ..   is_canceled = col_double(),\n  ..   lead_time = col_double(),\n  ..   arrival_date_year = col_double(),\n  ..   arrival_date_month = col_character(),\n  ..   arrival_date_week_number = col_double(),\n  ..   arrival_date_day_of_month = col_double(),\n  ..   stays_in_weekend_nights = col_double(),\n  ..   stays_in_week_nights = col_double(),\n  ..   adults = col_double(),\n  ..   children = col_double(),\n  ..   babies = col_double(),\n  ..   meal = col_character(),\n  ..   country = col_character(),\n  ..   market_segment = col_character(),\n  ..   distribution_channel = col_character(),\n  ..   is_repeated_guest = col_double(),\n  ..   previous_cancellations = col_double(),\n  ..   previous_bookings_not_canceled = col_double(),\n  ..   reserved_room_type = col_character(),\n  ..   assigned_room_type = col_character(),\n  ..   booking_changes = col_double(),\n  ..   deposit_type = col_character(),\n  ..   agent = col_character(),\n  ..   company = col_character(),\n  ..   days_in_waiting_list = col_double(),\n  ..   customer_type = col_character(),\n  ..   adr = col_double(),\n  ..   required_car_parking_spaces = col_double(),\n  ..   total_of_special_requests = col_double(),\n  ..   reservation_status = col_character(),\n  ..   reservation_status_date = col_date(format = \"\")\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(hotelbookdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 119390     32\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(hotelbookdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"hotel\"                          \"is_canceled\"                   \n [3] \"lead_time\"                      \"arrival_date_year\"             \n [5] \"arrival_date_month\"             \"arrival_date_week_number\"      \n [7] \"arrival_date_day_of_month\"      \"stays_in_weekend_nights\"       \n [9] \"stays_in_week_nights\"           \"adults\"                        \n[11] \"children\"                       \"babies\"                        \n[13] \"meal\"                           \"country\"                       \n[15] \"market_segment\"                 \"distribution_channel\"          \n[17] \"is_repeated_guest\"              \"previous_cancellations\"        \n[19] \"previous_bookings_not_canceled\" \"reserved_room_type\"            \n[21] \"assigned_room_type\"             \"booking_changes\"               \n[23] \"deposit_type\"                   \"agent\"                         \n[25] \"company\"                        \"days_in_waiting_list\"          \n[27] \"customer_type\"                  \"adr\"                           \n[29] \"required_car_parking_spaces\"    \"total_of_special_requests\"     \n[31] \"reservation_status\"             \"reservation_status_date\"       \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(hotelbookdata$hotel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Resort Hotel\" \"City Hotel\"  \n```\n:::\n:::\n\n\n\n\n\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n:::\n\n\nAny additional comments?\n\n## Identify variables that need to be mutated\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, are all time variables correctly coded as dates? Are all string variables reduced and cleaned to sensible categories? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutated_data <- hotelbookdata %>%\n    mutate(month = case_when(arrival_date_month == \"January\" ~ 1,arrival_date_month == \"February\" ~ 2,arrival_date_month == \"March\" ~ 3,arrival_date_month == \"April\" ~ 4,arrival_date_month == \"May\" ~ 5,arrival_date_month == \"June\" ~ 6,arrival_date_month == \"July\" ~ 7,arrival_date_month == \"August\" ~ 8,arrival_date_month == \"September\" ~ 9,arrival_date_month == \"October\" ~ 10,arrival_date_month == \"November\" ~ 11,arrival_date_month == \"December\" ~ 12,)) %>%\n    mutate(date_of_arrrival = make_date(arrival_date_year, month, arrival_date_day_of_month)) %>%\n    select(-c(arrival_date_year, arrival_date_month, arrival_date_day_of_month, month, arrival_date_week_number))\n\nmutated_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 119,390 × 29\n   hotel     is_ca…¹ lead_…² stays…³ stays…⁴ adults child…⁵ babies meal  country\n   <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl> <chr> <chr>  \n 1 Resort H…       0     342       0       0      2       0      0 BB    PRT    \n 2 Resort H…       0     737       0       0      2       0      0 BB    PRT    \n 3 Resort H…       0       7       0       1      1       0      0 BB    GBR    \n 4 Resort H…       0      13       0       1      1       0      0 BB    GBR    \n 5 Resort H…       0      14       0       2      2       0      0 BB    GBR    \n 6 Resort H…       0      14       0       2      2       0      0 BB    GBR    \n 7 Resort H…       0       0       0       2      2       0      0 BB    PRT    \n 8 Resort H…       0       9       0       2      2       0      0 FB    PRT    \n 9 Resort H…       1      85       0       3      2       0      0 BB    PRT    \n10 Resort H…       1      75       0       3      2       0      0 HB    PRT    \n# … with 119,380 more rows, 19 more variables: market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, booking_changes <dbl>,\n#   deposit_type <chr>, agent <chr>, company <chr>, days_in_waiting_list <dbl>,\n#   customer_type <chr>, adr <dbl>, required_car_parking_spaces <dbl>,\n#   total_of_special_requests <dbl>, reservation_status <chr>, …\n```\n:::\n:::\n\n\nAfter eliminating four of the initial date columns (year, month, day, and week) and introducing a new column to represent the complete expected arrival date, the total number of columns (variables) in our dataset is 29.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nncol(mutated_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 29\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(mutated_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 119390     29\n```\n:::\n:::\n\n\n\n\nAny additional comments?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}