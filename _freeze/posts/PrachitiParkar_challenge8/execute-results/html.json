{
  "hash": "a3c90920f4969d6a92fb33496bb9aa49",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Prachiti Parkar\"\ndescription: \"Joining Data\"\ndate: \"05/10/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - railroads\n  - snl\n  - faostat\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_actors <- read_csv(\"_data/snl_actors.csv\")\nhead(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  aid            url           type  gender \n  <chr>          <chr>         <chr> <chr>  \n1 Kate McKinnon  /Cast/?KaMc   cast  female \n2 Alex Moffat    /Cast/?AlMo   cast  male   \n3 Ego Nwodim     /Cast/?EgNw   cast  unknown\n4 Chris Redd     /Cast/?ChRe   cast  male   \n5 Kenan Thompson /Cast/?KeTh   cast  male   \n6 Carey Mulligan /Guests/?3677 guest andy   \n```\n:::\n\n```{.r .cell-code}\nsnl_casts <- read_csv(\"_data/snl_casts.csv\")\nhead(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  aid                sid featured first_epid last_epid update_…¹ n_epi…² seaso…³\n  <chr>            <dbl> <lgl>         <dbl>     <dbl> <lgl>       <dbl>   <dbl>\n1 A. Whitney Brown    11 TRUE       19860222        NA FALSE           8   0.444\n2 A. Whitney Brown    12 TRUE             NA        NA FALSE          20   1    \n3 A. Whitney Brown    13 TRUE             NA        NA FALSE          13   1    \n4 A. Whitney Brown    14 TRUE             NA        NA FALSE          20   1    \n5 A. Whitney Brown    15 TRUE             NA        NA FALSE          20   1    \n6 A. Whitney Brown    16 TRUE             NA        NA FALSE          20   1    \n# … with abbreviated variable names ¹​update_anchor, ²​n_episodes,\n#   ³​season_fraction\n```\n:::\n\n```{.r .cell-code}\nsnl_seasons <- read_csv(\"_data/snl_seasons.csv\")\nhead(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n    sid  year first_epid last_epid n_episodes\n  <dbl> <dbl>      <dbl>     <dbl>      <dbl>\n1     1  1975   19751011  19760731         24\n2     2  1976   19760918  19770521         22\n3     3  1977   19770924  19780520         20\n4     4  1978   19781007  19790526         20\n5     5  1979   19791013  19800524         20\n6     6  1980   19801115  19810411         13\n```\n:::\n\n```{.r .cell-code}\ncolnames(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"    \"url\"    \"type\"   \"gender\"\n```\n:::\n\n```{.r .cell-code}\ncolnames(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"             \"sid\"             \"featured\"        \"first_epid\"     \n[5] \"last_epid\"       \"update_anchor\"   \"n_episodes\"      \"season_fraction\"\n```\n:::\n\n```{.r .cell-code}\ncolnames(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"        \"year\"       \"first_epid\" \"last_epid\"  \"n_episodes\"\n```\n:::\n:::\n\n\n### Briefly describe the data\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_actors %>%\n  snl_actors(na.rm = True)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in snl_actors(., na.rm = True): could not find function \"snl_actors\"\n```\n:::\n\n```{.r .cell-code}\nsnl_casts %>%\n  snl_casts(na.rm = True)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in snl_casts(., na.rm = True): could not find function \"snl_casts\"\n```\n:::\n\n```{.r .cell-code}\nsnl_seasons %>%\n  snl_seasons(na.rm = True)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in snl_seasons(., na.rm = True): could not find function \"snl_seasons\"\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n:::\n\n\n## Join Data\n\nBe sure to include a sanity check, and double-check that case count is correct!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_data <- snl_actors %>%\n  select(aid, gender) %>%\n  left_join(snl_casts, by=\"aid\")\n\nhead(snl_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  aid           gender   sid featured first_epid last_…¹ updat…² n_epi…³ seaso…⁴\n  <chr>         <chr>  <dbl> <lgl>         <dbl>   <dbl> <lgl>     <dbl>   <dbl>\n1 Kate McKinnon female    37 TRUE       20120407      NA FALSE         5   0.227\n2 Kate McKinnon female    38 TRUE             NA      NA FALSE        21   1    \n3 Kate McKinnon female    39 FALSE            NA      NA FALSE        21   1    \n4 Kate McKinnon female    40 FALSE            NA      NA FALSE        21   1    \n5 Kate McKinnon female    41 FALSE            NA      NA FALSE        21   1    \n6 Kate McKinnon female    42 FALSE            NA      NA FALSE        21   1    \n# … with abbreviated variable names ¹​last_epid, ²​update_anchor, ³​n_episodes,\n#   ⁴​season_fraction\n```\n:::\n:::\n\n\n## Visualize Data\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_data %>%\n  ggplot(aes(x = gender,y = first_epid))+geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](PrachitiParkar_challenge8_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsnl_data %>%\n  ggplot(aes(gender)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](PrachitiParkar_challenge8_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\nWe understand that there are gender data specifically referring to andy and unknown but they don't have any data belonging to first_epid. This means that they have not had any. ",
    "supporting": [
      "PrachitiParkar_challenge8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}