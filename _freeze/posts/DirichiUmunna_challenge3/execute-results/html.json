{
  "hash": "d1e11657486fb47f20b3c074071c3f37",
  "result": {
    "markdown": "---\ntitle: \"Tidying and Pivoting: Challenge 3 \"\nauthor: \"Dirichi Umunna\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"03/17/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - Dirichi Umunna\n  - eggs\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(magrittr)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(stringr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nIn this blog post, we will explore how to work with a given data set, starting from reading the data to tidying it using pivot_longer. The data set contains information on organic egg and poultry costs in the United States, with data points representing a range of values. We will describe the data set using words and provide additional supporting information as needed, such as tables, to provide insight into the contents of the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#read in the dataset. we will be excluding unnecessary columns\n\ncleanpoultry <- read_excel(\"_data/organiceggpoultry.xls\", sheet = \"Data\", skip = 5, col_names = c(\"Date\", \"Xtral_12\", \"Xtral_6\", \"Large_12\", \"Large_6\", \"Delete\", \"Whole\", \"Bsbreast\", \"Boneinbreast\", \"Wholelegs\", \"Thighs\")) %>%\nselect(-c(Delete))%>%\n  drop_na()\n\n#view data set\nhead(cleanpoultry)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 10\n  Date     Xtral_12 Xtral_6 Large…¹ Large_6 Whole Bsbre…² Bonei…³ Whole…⁴ Thighs\n  <chr>       <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl> <chr>     <dbl> <chr> \n1 Jan 2004     230     132     230     126   198.    646. too few    194. too f…\n2 February     230     134.    226.    128.  198.    642. too few    194. 203   \n3 March        230     137     225     131   209     642. too few    194. 203   \n4 April        234.    137     225     131   212     642. too few    194. 203   \n5 May          236     137     225     131   214.    642. too few    194. 203   \n6 June         241     137     231.    134.  216.    641  too few    202. 200.3…\n# … with abbreviated variable names ¹​Large_12, ²​Bsbreast, ³​Boneinbreast,\n#   ⁴​Wholelegs\n```\n:::\n:::\n\n\n## Briefly describe the data\n\nThe data set is focused on the monthly prices paid for USDA certified organic eggs and poultry, specifically chicken, between the years 2004 and 2013. It contains information on four different types of eggs and five different types of chicken, including their prices per carton and price cents per pound. The prices were set at the delivery to first receivers. The data set is sourced from the U.S. Department of Agriculture. Pivoting this data set to make it \"tidy\" is often required to make it easier to analyze and visualize the data.\n\n## Anticipate the End Result\n\nWe will attempt to visualize the end result of our pivoting activity by anticipating our expected number of columns and rows. First we will further clean dataset in anticipation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#separate the date into month and year\ncleanpoultry <- separate (cleanpoultry, Date, into = c(\"Month\", \"Year\", sep = \" \"))\n\n#convert year to integer\ncleanpoultry$Year <- as.integer(cleanpoultry$Year)\n\n# fill in missing values in Year column\ncleanpoultry <- fill(cleanpoultry, Year)\n\n#remove unnecessary column\ncleanpoultry <- cleanpoultry[, -which(names(cleanpoultry) == \" \")]\n\n## make all datatypes the same\ncleanpoultry <- cleanpoultry %>%\n  mutate(Boneinbreast = as.numeric(Boneinbreast),\n         Thighs = as.numeric(Thighs))\n\ncleanpoultry\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 11\n   Month      Year Xtral…¹ Xtral_6 Large…² Large_6 Whole Bsbre…³ Bonei…⁴ Whole…⁵\n   <chr>     <int>   <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>\n 1 Jan        2004    230     132     230     126   198.    646.     NA     194.\n 2 February   2004    230     134.    226.    128.  198.    642.     NA     194.\n 3 March      2004    230     137     225     131   209     642.     NA     194.\n 4 April      2004    234.    137     225     131   212     642.     NA     194.\n 5 May        2004    236     137     225     131   214.    642.     NA     194.\n 6 June       2004    241     137     231.    134.  216.    641      NA     202.\n 7 July       2004    241     137     234.    134.  217     642.    390.    204.\n 8 August     2004    241     137     234.    134.  217     642.    390.    204.\n 9 September  2004    241     136.    234.    130.  217     642.    390.    204.\n10 October    2004    241     136.    234.    128.  217     642.    390.    204.\n# … with 110 more rows, 1 more variable: Thighs <dbl>, and abbreviated variable\n#   names ¹​Xtral_12, ²​Large_12, ³​Bsbreast, ⁴​Boneinbreast, ⁵​Wholelegs\n```\n:::\n\n```{.r .cell-code}\n# view data\ncolnames(cleanpoultry)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Month\"        \"Year\"         \"Xtral_12\"     \"Xtral_6\"      \"Large_12\"    \n [6] \"Large_6\"      \"Whole\"        \"Bsbreast\"     \"Boneinbreast\" \"Wholelegs\"   \n[11] \"Thighs\"      \n```\n:::\n\n```{.r .cell-code}\nstr(cleanpoultry)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [120 × 11] (S3: tbl_df/tbl/data.frame)\n $ Month       : chr [1:120] \"Jan\" \"February\" \"March\" \"April\" ...\n $ Year        : int [1:120] 2004 2004 2004 2004 2004 2004 2004 2004 2004 2004 ...\n $ Xtral_12    : num [1:120] 230 230 230 234 236 ...\n $ Xtral_6     : num [1:120] 132 134 137 137 137 ...\n $ Large_12    : num [1:120] 230 226 225 225 225 ...\n $ Large_6     : num [1:120] 126 128 131 131 131 ...\n $ Whole       : num [1:120] 198 198 209 212 214 ...\n $ Bsbreast    : num [1:120] 646 642 642 642 642 ...\n $ Boneinbreast: num [1:120] NA NA NA NA NA ...\n $ Wholelegs   : num [1:120] 194 194 194 194 194 ...\n $ Thighs      : num [1:120] NA 203 203 203 203 ...\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(cleanpoultry)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(cleanpoultry)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(cleanpoultry) * (ncol(cleanpoultry)-2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1080\n```\n:::\n\n```{.r .cell-code}\n# expected columns \nncol(cleanpoultry) - 9 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n\n```{.r .cell-code}\ncleanpoultry\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 11\n   Month      Year Xtral…¹ Xtral_6 Large…² Large_6 Whole Bsbre…³ Bonei…⁴ Whole…⁵\n   <chr>     <int>   <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl>   <dbl>   <dbl>\n 1 Jan        2004    230     132     230     126   198.    646.     NA     194.\n 2 February   2004    230     134.    226.    128.  198.    642.     NA     194.\n 3 March      2004    230     137     225     131   209     642.     NA     194.\n 4 April      2004    234.    137     225     131   212     642.     NA     194.\n 5 May        2004    236     137     225     131   214.    642.     NA     194.\n 6 June       2004    241     137     231.    134.  216.    641      NA     202.\n 7 July       2004    241     137     234.    134.  217     642.    390.    204.\n 8 August     2004    241     137     234.    134.  217     642.    390.    204.\n 9 September  2004    241     136.    234.    130.  217     642.    390.    204.\n10 October    2004    241     136.    234.    128.  217     642.    390.    204.\n# … with 110 more rows, 1 more variable: Thighs <dbl>, and abbreviated variable\n#   names ¹​Xtral_12, ²​Large_12, ³​Bsbreast, ⁴​Boneinbreast, ⁵​Wholelegs\n```\n:::\n:::\n\n\n## Pivot the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#now we pivot the data\n\ncleanpoultry <-pivot_longer(cleanpoultry, col = c(\"Xtral_12\", \"Xtral_6\", \"Large_12\", \"Large_6\", \"Whole\", \"Bsbreast\", \"Boneinbreast\", \"Wholelegs\", \"Thighs\"),\n                 names_to=\"Eggs & Poultry Type\",\n                 values_to = \"Cost\")\ncleanpoultry\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,080 × 4\n   Month     Year `Eggs & Poultry Type`  Cost\n   <chr>    <int> <chr>                 <dbl>\n 1 Jan       2004 Xtral_12               230 \n 2 Jan       2004 Xtral_6                132 \n 3 Jan       2004 Large_12               230 \n 4 Jan       2004 Large_6                126 \n 5 Jan       2004 Whole                  198.\n 6 Jan       2004 Bsbreast               646.\n 7 Jan       2004 Boneinbreast            NA \n 8 Jan       2004 Wholelegs              194.\n 9 Jan       2004 Thighs                  NA \n10 February  2004 Xtral_12               230 \n# … with 1,070 more rows\n```\n:::\n:::\n\n\n## Conclusion\n\nIn this current exercise, we successfully cleaned a data set and transformed it into a tidy format using pivot longer function. The resulting data set now has 1080 cases and 4 columns, like we anticipated. This makes it easy to analyze and manipulate the data. The process of cleaning and tidying the data set has made it more organized and readily usable for further analysis.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}