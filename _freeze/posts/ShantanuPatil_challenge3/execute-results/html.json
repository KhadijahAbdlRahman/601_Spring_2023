{
  "hash": "6648e834d43d6facf903b1d35b129751",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Shantanu Patil\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"03/26/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - shantanu \n  - animal_weights\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n### Briefly describe the data\n\nThis csv file keeps track of the weights of various animals in various parts of the world. The Indian Subcontinent, Eastern Europe, Africa, Oceania, Western Europe, Latin America, Asia, the Middle East, and Northern America are all included. There are sixteen different kinds of animals. \n\nEach animal is currently represented as a column, which is not very neat. I'd like to reduce the number of columns in the dataframe to three: area, animal type, and weight. This requires me to pivot each of the 16 animal columns.\n\n## Anticipate the End Result\n\n$n=9$ and $k=17$ in this case. I'll be pivoting $17-1=16$ variables because I'll be using $1$ of those variables to identify a case. The animal's type will be entered into the 'animal type' column, and its weight will be entered into the 'weight' column. In the pivoted dataframe, I would anticipate $9*16=144$ rows. Because I'd be converting those $16$ columns to $2$ columns, the pivoted dataframe would have $3$ columns.\n\n\n### Reading the Data \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Read in data\nanimals <- read_csv(\"_data/animal_weight.csv\")\n\n# View a few data points\nhead(animals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 17\n  IPCC A…¹ Cattl…² Cattl…³ Buffa…⁴ Swine…⁵ Swine…⁶ Chick…⁷ Chick…⁸ Ducks Turkeys\n  <chr>      <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dbl>   <dbl>\n1 Indian …     275     110     295      28      28     0.9     1.8   2.7     6.8\n2 Eastern…     550     391     380      50     180     0.9     1.8   2.7     6.8\n3 Africa       275     173     380      28      28     0.9     1.8   2.7     6.8\n4 Oceania      500     330     380      45     180     0.9     1.8   2.7     6.8\n5 Western…     600     420     380      50     198     0.9     1.8   2.7     6.8\n6 Latin A…     400     305     380      28      28     0.9     1.8   2.7     6.8\n# … with 7 more variables: Sheep <dbl>, Goats <dbl>, Horses <dbl>, Asses <dbl>,\n#   Mules <dbl>, Camels <dbl>, Llamas <dbl>, and abbreviated variable names\n#   ¹​`IPCC Area`, ²​`Cattle - dairy`, ³​`Cattle - non-dairy`, ⁴​Buffaloes,\n#   ⁵​`Swine - market`, ⁶​`Swine - breeding`, ⁷​`Chicken - Broilers`,\n#   ⁸​`Chicken - Layers`\n```\n:::\n\n```{.r .cell-code}\n# View all columns\ncolnames(animals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"IPCC Area\"          \"Cattle - dairy\"     \"Cattle - non-dairy\"\n [4] \"Buffaloes\"          \"Swine - market\"     \"Swine - breeding\"  \n [7] \"Chicken - Broilers\" \"Chicken - Layers\"   \"Ducks\"             \n[10] \"Turkeys\"            \"Sheep\"              \"Goats\"             \n[13] \"Horses\"             \"Asses\"              \"Mules\"             \n[16] \"Camels\"             \"Llamas\"            \n```\n:::\n:::\n\n\n\n### Challenge: Calcuating the dimensions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate existing rows, existing columns, expected rows, and expected columns\nn <- nrow(animals)\nk <- ncol(animals)\nexpected_rows <- n * (k - 1)\nexpected_cols <- 1 + 2\n```\n:::\n\n\n### Challenge: Pivot the Chosen Data\n\nInstead of a vector of weights, each \"case\" described by a row is one weight. The number of samples increases, but the level of granularity makes calculating statistics about the weights themselves much easier.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define columns to be pivoted\ncols <- colnames(animals)[-1]\n\n# Pivot the data using pivot_longer()\nanimals_pivoted <- pivot_longer(animals, cols = cols,\n                                 names_to = \"animal_type\",\n                                 values_to = \"weight\")\n\n# Display a sample of the pivoted data\nanimals_pivoted[sample(nrow(animals_pivoted), 10), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   `IPCC Area`   animal_type        weight\n   <chr>         <chr>               <dbl>\n 1 Asia          Ducks                 2.7\n 2 Oceania       Camels              217  \n 3 Latin America Cattle - non-dairy  305  \n 4 Asia          Cattle - non-dairy  391  \n 5 Middle east   Turkeys               6.8\n 6 Latin America Chicken - Layers      1.8\n 7 Middle east   Camels              217  \n 8 Africa        Sheep                28  \n 9 Asia          Asses               130  \n10 Latin America Buffaloes           380  \n```\n:::\n\n```{.r .cell-code}\n# Display the dimensions of the pivoted data\ndim(animals_pivoted)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 144   3\n```\n:::\n:::\n\n\nOur calculations were correct, as evidenced by the code output.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}