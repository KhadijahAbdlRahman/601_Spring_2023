{
  "hash": "6d3567ebf3efa85d844493eee488c9f6",
  "result": {
    "markdown": "---\ntitle: \"DACSS 601 Final Project Spring 2023\"\nformat: \n    html:\n      code-fold: true\n      code-tools: true\nexecute: \n  freeze: true\ncode-block-bg: true\nhighlight-style: github\nauthor: \"Ravina Banze\"\nbibliography: \n    - RB_data_files/ref.bib\n    - RB_data_files/packages.bib\nnocite: |\n    @*\n---\n\n\n# Visualizing the American Workforce and Mapping changes in it over the years\n\nAccording to the Pew Research, more than 157 Americans are part of the labor force. Over the years, particularly since 1999, the composition of the workforce has undergone significant transformations, transitioning towards a more service-oriented economy. In this research endeavor, the objective is to analyze and investigate the patterns of workforce changes utilizing the available data spanning the period from 1999 to 2018. This project adopts a focused approach by emphasizing a singular overarching research question, rather than pursuing multiple distinct research inquiries. The aim is to discern discernible patterns within the chosen scope, thereby enhancing the depth of analysis and facilitating a more comprehensive understanding of the subject matter. By adopting this methodological approach, the research endeavors to provide a coherent and cohesive examination of the identified patterns within the context of the study, enabling more robust conclusions to be drawn.\n\n### Loading all the libraries\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\nlibrary(pacman)\n\npacman::p_load(\n    \"tidyverse\", \"readxl\", \"usethis\", \n    \"ggplot2\", \"cowplot\", \"grid\", \n    \"packcircles\"\n)\n\nknitr::write_bib(c(.packages(), \"bookdown\"), \"RB_data_files/packages.bib\")\n\noptions(file.sep = \"\\\\\")\n```\n:::\n\n\n## Data Cleaning and Formulation\n\nSince the size of the dataset was too large, I decided to store all of them as zip files and unzip them as required and then delete them after I have created a combined dataset.\n\nDefining an empty dataframe and other required path variables like `zip_folder` and `years` which will help locating the file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_data <- list()\n\nzip_folder <- \"RB_data_files\\\\zip\" # Path to zip data files\ntemp_dir <- \"RB_data_files\\\\temp_files\" #Path to store all of the extracted sheets\n\nyears <- c(\n  \"97\", \"98\", \"99\", \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\",\n  \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\",\n  \"21\", \"22\"\n) %>% unlist()\n```\n:::\n\n\nUnzipping and storing all of the zip files temporarily.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlapply(\n    list.files(\n        zip_folder, \n        full.name = T,\n    ),\n    function(file){\n        file.list <- utils::unzip(\n            file,\n            list = TRUE,\n        )\n        files.to.extract <- file.list[!grepl(\"field_description\", file.list$Name), \"Name\"]\n        \n        utils::unzip(\n            file,\n            files = files.to.extract,\n            exdir = temp_dir,\n            junkpaths = T\n        )\n    }\n)\n\nfile.rename(\n    file.path(\n        \"RB_data_files//temp_files\", \"national_dl.xls\"\n    ),\n    file.path(\n        \"RB_data_files//temp_files\", \"national_2009_dl.xls\"\n    )\n)\n\nfile_names <- c(list.files(path = \"RB_data_files/temp_files\", full.names = T))\n```\n:::\n\n\nCombining all of the data files under `combined_files`. Since each dataset had NA values or required skipping rows, I decided to declare the type of all the problematic or error raising columns before calling the function `dplyr::bind_rows()`. I also renamed all of the columns in the dataframe so that there is uniformity since each dataset had the columns labeled differently or in some cases had different columns towards the end. To handle for all such cases, I only renamed the useful columns and then selected them from from the sheet.\n\nAfter binding all of the rows I proceed to delete all of the temporary files extracted from the zips.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol.names <- c(\n    \"occ_code\", \"occ_title\", \"group\", \"tot_emp\",\n    \"emp_prse\", \"h_mean\", \"a_mean\", \"mean_prse\",\n    \"h_pct10\", \"h_pct25\", \"h_median\", \"h_pct75\",\n    \"h_pct90\", \"a_pct10\", \"a_pct25\", \"a_median\",\n    \"a_pct75\", \"a_pct90\", \"a_pct90\", \"annual\"\n)\n\n\n\ncombined_files <- lapply(\n    years,\n    function(year){\n        year_pre <- ifelse( as.numeric(year) > 90, \"19\", \"20\")\n        file <- file_names[grep(paste0(year_pre, year), file_names)]\n\n        skiprows <- ifelse( \n            as.numeric(paste0(year_pre, year)) < 2001,\n            38,\n            0\n        )\n        \n        file <- file %>%\n                stringr::str_replace_all(., \"/\", \"//\") %>%\n                readxl::read_excel(., skip = skiprows) # %>%\n                # mutate(\n                #     Year = substr(\n                #         paste0(year_pre, year),\n                #         nchar(paste0(year_pre, year)) - 3,\n                #         4\n                #     )\n                # )\n\n        # print(paste0(year_pre, year))\n        \n        if (as.numeric(paste0(year_pre, year)) < 2001){\n            print(\"Executing\")\n            colnames(file) <- col.names\n            \n        }\n        else {\n           colnames(file) <- col.names\n        }\n\n        file$year.id<- paste0(year_pre, year)\n\n        # print(as.numeric(paste0(year_pre, year)))\n        # print(colnames(file))\n        \n        file <- file %>%\n             dplyr::select(\n                     year.id, occ_title, group, tot_emp, emp_prse, h_mean,  \n                     mean_prse, h_pct25, h_pct75, h_median, a_mean, \n                     a_pct25, a_pct75, a_median\n             )\n        \n        file$emp_prse <- as.numeric(file$emp_prse)\n        file$tot_emp <- as.numeric(file$tot_emp)\n        file$mean_prse <- as.numeric(file$mean_prse)\n        file$h_pct75 <- as.numeric(file$h_pct75)\n        file$h_pct25 <- as.numeric(file$h_pct25)\n        file$h_median <- as.numeric(file$h_median)\n        file$h_mean <- as.numeric(file$h_mean)\n        file$a_mean <- as.numeric(file$a_mean)\n        file$a_median <- as.numeric(file$a_median)\n        file$a_pct25 <- as.numeric(file$a_pct25)\n        file$a_pct75 <- as.numeric(file$a_pct75)\n        \n        \n        return (file)\n    }\n)\n\ncombined_files <- combined_files %>%\n  dplyr::bind_rows()\n\nfile.remove(list.files(\"data//temp_files\", full.names = T))\n```\n:::\n\n\nA quick look of the combined dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(combined_files)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  year.id occ_title group tot_emp emp_p…¹ h_mean mean_…² h_pct25 h_pct75 h_med…³\n  <chr>   <chr>     <chr>   <dbl>   <dbl>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 1997    Staff an… maj        NA    NA     19.5    NA      13.5    23.6    17.7\n2 1997    Financia… <NA>   655680     0.6   27.4     0.4    17.7    38.9    25.2\n3 1997    Personne… <NA>   221370     0.7   24.1     0.4    16.3    34.3    22.6\n4 1997    Purchasi… <NA>   172980     0.8   21.4     0.4    13.7    28.6    19.0\n5 1997    Marketin… <NA>   453920     0.8   27.4     0.4    17.4    39.2    25.6\n6 1997    Administ… <NA>   346600     1.2   22.6     0.5    14.8    31.3    20.4\n# … with 4 more variables: a_mean <dbl>, a_pct25 <dbl>, a_pct75 <dbl>,\n#   a_median <dbl>, and abbreviated variable names ¹​emp_prse, ²​mean_prse,\n#   ³​h_median\n```\n:::\n:::\n\n\nWe can see that there are some NA values right from the start. Since our focus of study is to based different `occ_title`, we need to first analyze this column\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_files %>% dplyr::count(occ_title)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,567 × 2\n   occ_title                                                         n\n   <chr>                                                         <int>\n 1 Able Seamen                                                       2\n 2 Accountants and auditors                                          7\n 3 Accountants and Auditors                                         22\n 4 Actors                                                           20\n 5 Actors, Producers, and Directors                                  7\n 6 Actuaries                                                        29\n 7 Adhesive Bonding Machine Operators and Tenders                    9\n 8 Adjudicators, Hearings Officers, and Judicial Reviewers           2\n 9 Adjustment Clerks                                                 2\n10 Administrative law judges, adjudicators, and hearing officers     7\n# … with 2,557 more rows\n```\n:::\n:::\n\n\nSince there a lot of unique values, we need a separate column to classify each job title into a more inclusive one. We can just select the occupations marked as `Major` under the group column. This helps in identifying major fields of occupation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_data <- combined_files %>%\n    dplyr::filter(grepl(\"major\", group, ignore.case = T)) %>%\n    dplyr::group_by(., year.id, occ_title) %>%\n    dplyr::summarise(\n        tot_emp = sum(tot_emp),\n        h_mean = mean(h_mean),\n        h_pct25 = stats::median(h_pct25),\n        h_pct75 = stats::median(h_pct75),\n        h_median = stats::median(h_median),\n        a_mean = mean(a_mean),\n        a_pct25 = stats::median(a_pct25),\n        a_pct75 = stats::median(a_pct75),\n        a_median = stats::median(a_median)\n    ) %>%\n    dplyr::mutate(\n        a_median = as.double(a_median),\n        a_pct25 = as.double(a_pct25),\n        a_pct75 = as.double(a_pct75)\n    )\n\ngrouped_data %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 11\n# Groups:   year.id [1]\n  year.id occ_ti…¹ tot_emp h_mean h_pct25 h_pct75 h_med…² a_mean a_pct25 a_pct75\n  <chr>   <chr>      <dbl>  <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>   <dbl>\n1 1999    Archite… 2506380  24.8    17.5     31.2   23.7   51600   36470   64860\n2 1999    Arts, D… 1551600  18.1     9.87    23.1   15.2   37650   20540   47980\n3 1999    Buildin… 4274200   9.09    6.58    10.6    8.08  18910   13680   21970\n4 1999    Busines… 4361980  22.2    15.1     26.7   20.1   46100   31360   55560\n5 1999    Communi… 1404540  15.2    10.6     18.9   14.0   31640   21970   39290\n6 1999    Compute… 2620080  26.4    18.6     32.8   25.0   54930   38700   68250\n# … with 1 more variable: a_median <dbl>, and abbreviated variable names\n#   ¹​occ_title, ²​h_median\n```\n:::\n:::\n\n\nThe data looks almost ready after this step but we still need to check `occ_title`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_data %>% dplyr::ungroup() %>% count(occ_title) %>% print(n= 30)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 × 2\n   occ_title                                                      n\n   <chr>                                                      <int>\n 1 All Occupations                                                1\n 2 Architecture and engineering occupations                       7\n 3 Architecture and Engineering Occupations                      13\n 4 Arts, design, entertainment, sports, and media occupations     7\n 5 Arts, Design, Entertainment, Sports, and Media Occupations    13\n 6 Building and grounds cleaning and maintenance occupations      7\n 7 Building and Grounds Cleaning and Maintenance Occupations     13\n 8 Business and financial operations occupations                  7\n 9 Business and Financial Operations Occupations                 13\n10 Community and Social Service Occupations                       9\n11 Community and social services occupations                      7\n12 Community and Social Services Occupations                      4\n13 Computer and mathematical occupations                          5\n14 Computer and Mathematical Occupations                         12\n15 Computer and mathematical science occupations                  2\n16 Computer and Mathematical Science Occupations                  1\n17 Construction and extraction occupations                        7\n18 Construction and Extraction Occupations                       13\n19 Education, training, and library occupations                   7\n20 Education, Training, and Library Occupations                  13\n21 Farming, fishing, and forestry occupations                     7\n22 Farming, Fishing, and Forestry Occupations                    13\n23 Food preparation and serving related occupations               7\n24 Food Preparation and Serving Related Occupations              13\n25 Healthcare practitioner and technical occupations              1\n26 Healthcare Practitioner and Technical Occupations              1\n27 Healthcare practitioners and technical occupations             6\n28 Healthcare Practitioners and Technical Occupations            12\n29 Healthcare support occupations                                 7\n30 Healthcare Support Occupations                                13\n# … with 20 more rows\n```\n:::\n:::\n\n\nAfter a quick look we can make out that almost all of the fields listed have 2 or more occurrences due to difference in cases of words. To go past this I will convert all of the names to lower and then again group it to get the correct values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_files %>%\n    dplyr::filter(grepl(\"major\", group, ignore.case = T)) %>%\n    dplyr::mutate(occ_title = stringr::str_to_lower(occ_title)) %>% \n    dplyr::count(occ_title) %>%\n    dplyr::filter(n != 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 2\n  occ_title                                              n\n  <chr>                                              <int>\n1 all occupations                                        1\n2 community and social service occupations               9\n3 community and social services occupations             11\n4 computer and mathematical occupations                 17\n5 computer and mathematical science occupations          3\n6 healthcare practitioner and technical occupations      2\n7 healthcare practitioners and technical occupations    18\n```\n:::\n:::\n\n\nSince there is only 1 occurrence of `all_occupation`, we need to filter it out and also using `dplyr::mutate` and `grepl` match and join all the other similar professions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_files %>%\n    dplyr::filter(grepl(\"major\", group, ignore.case = T)) %>%\n    dplyr::slice(-1) %>%\n    dplyr::mutate(\n        occ_title = stringr::str_to_lower(occ_title),\n        occ_title = dplyr::case_when(\n            grepl('community and social', occ_title) ~ 'community and social services occupations',\n            grepl('computer and mathematical', occ_title) ~ 'computer and mathematical science occupations',\n            grepl('healthcare practitioner', occ_title) ~ 'healthcare practitioners and technical occupations',\n            TRUE ~ occ_title\n        )\n    ) %>%\n    dplyr::count(occ_title) %>%\n    print(n=24)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23 × 2\n   occ_title                                                      n\n   <chr>                                                      <int>\n 1 all occupations                                                1\n 2 architecture and engineering occupations                      20\n 3 arts, design, entertainment, sports, and media occupations    20\n 4 building and grounds cleaning and maintenance occupations     20\n 5 business and financial operations occupations                 20\n 6 community and social services occupations                     20\n 7 computer and mathematical science occupations                 20\n 8 construction and extraction occupations                       20\n 9 education, training, and library occupations                  20\n10 farming, fishing, and forestry occupations                    20\n11 food preparation and serving related occupations              20\n12 healthcare practitioners and technical occupations            20\n13 healthcare support occupations                                20\n14 installation, maintenance, and repair occupations             20\n15 legal occupations                                             20\n16 life, physical, and social science occupations                20\n17 management occupations                                        19\n18 office and administrative support occupations                 20\n19 personal care and service occupations                         20\n20 production occupations                                        20\n21 protective service occupations                                20\n22 sales and related occupations                                 20\n23 transportation and material moving occupations                20\n```\n:::\n:::\n\n\nWe will have to start from `combined_files` in order to get other complex calculations like median and mean correct.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_data <- combined_files %>%\n    dplyr::filter(grepl(\"major\", group, ignore.case = T)) %>%\n    dplyr::filter(!str_detect(occ_title, 'all_occupations')) %>%\n    dplyr::mutate(\n        occ_title = stringr::str_to_lower(occ_title),\n        occ_title = dplyr::case_when(\n            grepl('community and social', occ_title) ~ 'community and social services occupations',\n            grepl('computer and mathematical', occ_title) ~ 'computer and mathematical science occupations',\n            grepl('healthcare practitioner', occ_title) ~ 'healthcare practitioners and technical occupations',\n            TRUE ~ occ_title\n        ),\n        year.id = as.numeric(year.id)\n    ) %>%\n    dplyr::group_by(., year.id, occ_title) %>%\n    dplyr::summarise(\n        tot_emp = sum(tot_emp),\n        h_mean = mean(h_mean),\n        h_pct25 = stats::median(h_pct25),\n        h_pct75 = stats::median(h_pct75),\n        h_median = stats::median(h_median),\n        a_mean = mean(a_mean),\n        a_pct25 = stats::median(a_pct25),\n        a_pct75 = stats::median(a_pct75),\n        a_median = stats::median(a_median)\n    ) %>%\n    dplyr::mutate(\n        a_median = as.double(a_median),\n        a_pct25 = as.double(a_pct25),\n        a_pct75 = as.double(a_pct75)\n    )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year.id'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ngrouped_data %>% ungroup() %>% count(occ_title) %>% print(n = 40)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23 × 2\n   occ_title                                                      n\n   <chr>                                                      <int>\n 1 all occupations                                                1\n 2 architecture and engineering occupations                      20\n 3 arts, design, entertainment, sports, and media occupations    20\n 4 building and grounds cleaning and maintenance occupations     20\n 5 business and financial operations occupations                 20\n 6 community and social services occupations                     20\n 7 computer and mathematical science occupations                 20\n 8 construction and extraction occupations                       20\n 9 education, training, and library occupations                  20\n10 farming, fishing, and forestry occupations                    20\n11 food preparation and serving related occupations              20\n12 healthcare practitioners and technical occupations            20\n13 healthcare support occupations                                20\n14 installation, maintenance, and repair occupations             20\n15 legal occupations                                             20\n16 life, physical, and social science occupations                20\n17 management occupations                                        20\n18 office and administrative support occupations                 20\n19 personal care and service occupations                         20\n20 production occupations                                        20\n21 protective service occupations                                20\n22 sales and related occupations                                 20\n23 transportation and material moving occupations                20\n```\n:::\n:::\n\n\nThe categories are still a bit much and won't allow us to analyze the fields in depth. To be able to study the entire dataset we can create a new column `category`. Here are five categories you can use to group the occupations:\n\n1.  Professional Services\n\n    -   Architecture and Engineering Occupations\n\n    -   Business and Financial Operations Occupations\n\n    -   Legal Occupations\n\n2.  Creative and Media\n\n    -   Arts, Design, Entertainment, Sports, and Media Occupations\n\n3.  Service Industry\n\n    -   Building and Grounds Cleaning and Maintenance Occupations\n\n    -   Personal Care and Service Occupations\n\n    -   Food Preparation and Serving Related Occupations\n\n4.  Healthcare\n\n    -   Healthcare Practitioners and Technical Occupations\n\n    -   Healthcare Support Occupations\n\n5.  Education and Administration\n\n    -   Education, Training, and Library Occupations\n\n    -   Office and Administrative Support Occupations\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_data2 <- combined_files %>%\n    dplyr::filter(grepl(\"major\", group, ignore.case = T)) %>%\n    dplyr::filter(!str_detect(occ_title, 'all_occupations')) %>%\n    dplyr::mutate(\n        occ_title = stringr::str_to_lower(occ_title),\n        occ_title = dplyr::case_when(\n            grepl('community and social', occ_title) ~ 'community and social services occupations',\n            grepl('computer and mathematical', occ_title) ~ 'computer and mathematical science occupations',\n            grepl('healthcare practitioner', occ_title) ~ 'healthcare practitioners and technical occupations',\n            TRUE ~ occ_title\n        ),\n        year.id = as.numeric(year.id)\n    ) %>%\n  mutate(category = case_when(\n    occ_title %in% c(\n      \"architecture and engineering occupations\",\n      \"business and financial operations occupations\",\n      \"legal occupations\"\n    ) ~ \"Professional Services\",\n    occ_title %in% c(\"arts, design, entertainment, sports, and media occupations\") ~ \"Creative and Media\",\n    occ_title %in% c(\n      \"building and grounds cleaning and maintenance occupations\",\n      \"personal care and service occupations\",\n      \"food preparation and serving related occupations\"\n    ) ~ \"Service Industry\",\n    occ_title %in% c(\n      \"healthcare practitioners and technical occupations\",\n      \"healthcare support occupations\"\n    ) ~ \"Healthcare\",\n    occ_title %in% c(\n      \"education, training, and library occupations\",\n      \"office and administrative support occupations\"\n    ) ~ \"Education and Administration\",\n    TRUE ~ \"Other\"\n  )) \n    \n      \n  grouped_data2 <- grouped_data2 %>% \n                  dplyr::filter(occ_title != \"all occupations\") %>% \n                  dplyr::group_by(., year.id, category) %>%\n                  dplyr::summarise(\n                        tot_emp = sum(tot_emp),\n                        h_mean = mean(h_mean),\n                        h_pct25 = stats::median(h_pct25),\n                        h_pct75 = stats::median(h_pct75),\n                        h_median = stats::median(h_median),\n                        a_mean = mean(a_mean),\n                        a_pct25 = stats::median(a_pct25),\n                        a_pct75 = stats::median(a_pct75),\n                        a_median = stats::median(a_median)\n                    ) %>%\n                    dplyr::mutate(\n                        a_median = as.double(a_median),\n                        a_pct25 = as.double(a_pct25),\n                        a_pct75 = as.double(a_pct75)\n                    )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year.id'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nhead(grouped_data2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 11\n# Groups:   year.id [1]\n  year.id category tot_emp h_mean h_pct25 h_pct75 h_med…¹ a_mean a_pct25 a_pct75\n    <dbl> <chr>      <dbl>  <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>   <dbl>\n1    1999 Creativ…  1.55e6  18.1     9.87    23.1   15.2  37650    20540   47980\n2    1999 Educati…  2.99e7  14.8     9.69    18.4   13.6  30675    20145   38245\n3    1999 Healthc…  8.97e6  15.6    10.5     18.2   13.8  32515    21910   37810\n4    1999 Other     6.26e7  17.0    10.6     18.9   14.0  35288.   21970   39290\n5    1999 Profess…  7.73e6  26.4    16.4     31.2   23.7  54827.   34080   64860\n6    1999 Service…  1.65e7   8.78    6.37    10.6    7.82 18270    13250   21970\n# … with 1 more variable: a_median <dbl>, and abbreviated variable name\n#   ¹​h_median\n```\n:::\n:::\n\n\n## Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- grouped_data2 %>%\n    ggplot2::ggplot(., aes(x = year.id, y = tot_emp, fill = category)) +\n    geom_area()\n\ng + theme_minimal() + theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](601_FinalProject_RavinaBanze_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](601_FinalProject_RavinaBanze_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nCreating the column `emp_prct` to show percentage share of each category for each year. For validation we can group it by `year.id` and then `sum(emp_prct)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_data2 <- grouped_data2 %>%\n    dplyr::group_by(year.id) %>%\n    dplyr::mutate(emp_prct = tot_emp * 1e2/sum(tot_emp),total = sum(tot_emp)) %>%\n    dplyr::ungroup()\n\ngrouped_data <- grouped_data %>%\n    dplyr::group_by(year.id) %>%\n    dplyr::mutate(emp_prct = tot_emp * 1e2/sum(tot_emp),total = sum(tot_emp)) %>%\n    dplyr::ungroup()   \n```\n:::\n\n\nTo put the data in perspective we can re-plot on as percentage of employment for each category over the years instead.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- grouped_data2 %>%\n    ggplot2::ggplot(., aes(x = year.id, y = emp_prct, fill = category)) +\n    geom_bar(stat = \"identity\")\n\ng + theme_minimal() + theme(legend.position = \"none\") \n```\n\n::: {.cell-output-display}\n![](601_FinalProject_RavinaBanze_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](601_FinalProject_RavinaBanze_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Function to generate packed bubble plot for a specific year\ngenerate_packed_bubble_plot <- function(year, grouped_data2) {\n  data <- grouped_data2 %>%\n    filter(year.id == year) %>%\n    select(category, emp_prct)\n  \n  packing <- packcircles::circleProgressiveLayout(data$emp_prct, sizetype = 'area')\n  \n  data <- cbind(data, packing)\n  \n  dat.gg <- circleLayoutVertices(packing, npoints = 5)\n  \n  # Make the plot\n  ggplot(data = dat.gg) + \n    geom_polygon(aes(x, y, group = id, fill = as.factor(id)), colour = \"black\", alpha = 0.6) +\n    geom_text(data = data, aes(x, y, size = emp_prct, label = paste0(category,\": \",round(emp_prct, 2)))) +\n    scale_size_continuous(range = c(1, 4)) +\n    theme_void() +\n    theme(legend.position = \"none\") +\n    coord_equal() +\n    labs(title = paste(\"Year-\", year))\n}\n```\n:::\n\n\n::: panel-tabset\n## 1999\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](601_FinalProject_RavinaBanze_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n## 2003\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](601_FinalProject_RavinaBanze_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n## 2007\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](601_FinalProject_RavinaBanze_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## 2011\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](601_FinalProject_RavinaBanze_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n## 2015\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](601_FinalProject_RavinaBanze_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n## 2018\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](601_FinalProject_RavinaBanze_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n:::\n\nFrom the graph obtained we can see that there has been a steady growth in the `service industry` over the years along with `Professional Services`. Although `Healthcare` is one of the most important, it's employment has always been ${< 10 \\%}$ which is concerning.\n",
    "supporting": [
      "601_FinalProject_RavinaBanze_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}