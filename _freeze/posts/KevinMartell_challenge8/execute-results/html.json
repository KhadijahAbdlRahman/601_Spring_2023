{
  "hash": "6bd46708c29a887f0d686f9f80c2672e",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8 Instructions\"\nauthor: \"Kevin Martell Luya\"\ndescription: \"Joining Data\"\ndate: \"05/22/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - railroads\n  - snl\n  - faostat\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors <- read.csv(file = \"_data/snl_actors.csv\",\n  header=TRUE,\n  sep = \",\")\n\ncasts <- read.csv(file = \"_data/snl_casts.csv\",\n  header=TRUE,\n  sep = \",\"\n  )\n\nseasons <- read.csv(file = \"_data/snl_seasons.csv\",\n  header=TRUE,\n  sep = \",\"\n  )\nhead(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             aid           url  type  gender\n1  Kate McKinnon   /Cast/?KaMc  cast  female\n2    Alex Moffat   /Cast/?AlMo  cast    male\n3     Ego Nwodim   /Cast/?EgNw  cast unknown\n4     Chris Redd   /Cast/?ChRe  cast    male\n5 Kenan Thompson   /Cast/?KeTh  cast    male\n6 Carey Mulligan /Guests/?3677 guest    andy\n```\n:::\n\n```{.r .cell-code}\nhead(casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               aid sid featured first_epid last_epid update_anchor n_episodes\n1 A. Whitney Brown  11     True   19860222        NA         False          8\n2 A. Whitney Brown  12     True         NA        NA         False         20\n3 A. Whitney Brown  13     True         NA        NA         False         13\n4 A. Whitney Brown  14     True         NA        NA         False         20\n5 A. Whitney Brown  15     True         NA        NA         False         20\n6 A. Whitney Brown  16     True         NA        NA         False         20\n  season_fraction\n1       0.4444444\n2       1.0000000\n3       1.0000000\n4       1.0000000\n5       1.0000000\n6       1.0000000\n```\n:::\n\n```{.r .cell-code}\nhead(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  sid year first_epid last_epid n_episodes\n1   1 1975   19751011  19760731         24\n2   2 1976   19760918  19770521         22\n3   3 1977   19770924  19780520         20\n4   4 1978   19781007  19790526         20\n5   5 1979   19791013  19800524         20\n6   6 1980   19801115  19810411         13\n```\n:::\n:::\n\n### Briefly describe the data\n\nThe datasets are related to Saturday Night Live (SNL) and contain different types of information. The snl_casts dataset has data on the episodes and seasons in which actors were cast, while the snl_seasons dataset has information about each season, such as the number of episodes and the year it started. The snl_actors dataset contains information about each actor, including their role and type of appearance. The actors dataset has 2306 rows and 4 columns, the casts dataset has 614 rows and 8 columns, and the seasons dataset has 46 rows and 5 columns.\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors  <- na.omit(actors)\n#casts   <- na.omit(casts)\n#seasons   <- na.omit(seasons)\n```\n:::\n\n\n\n## Join Data\n\nThe casts dataframe has information about cast members in each season, but not their gender. Gender information is stored in the actors dataframe, which does not have information about the seasons. To merge the two dataframes, left_join() will be used based on actor ID. Guest stars and crew members will be filtered out using the filter() function. Finally, the count() function will be used to summarize gender makeup by season.\n\n::: {.cell}\n\n```{.r .cell-code}\ncasts_seasons <- casts %>% left_join(seasons ,by=\"sid\")\n\n#sanity check \nhead(casts_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               aid sid featured first_epid.x last_epid.x update_anchor\n1 A. Whitney Brown  11     True     19860222          NA         False\n2 A. Whitney Brown  12     True           NA          NA         False\n3 A. Whitney Brown  13     True           NA          NA         False\n4 A. Whitney Brown  14     True           NA          NA         False\n5 A. Whitney Brown  15     True           NA          NA         False\n6 A. Whitney Brown  16     True           NA          NA         False\n  n_episodes.x season_fraction year first_epid.y last_epid.y n_episodes.y\n1            8       0.4444444 1985     19851109    19860524           18\n2           20       1.0000000 1986     19861011    19870523           20\n3           13       1.0000000 1987     19871017    19880227           13\n4           20       1.0000000 1988     19881008    19890520           20\n5           20       1.0000000 1989     19890930    19900519           20\n6           20       1.0000000 1990     19900929    19910518           20\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nseasons_casts_actors <- casts_seasons %>% \n  left_join(actors, by = \"aid\")\n\n# sanity check\nhead(seasons_casts_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               aid sid featured first_epid.x last_epid.x update_anchor\n1 A. Whitney Brown  11     True     19860222          NA         False\n2 A. Whitney Brown  12     True           NA          NA         False\n3 A. Whitney Brown  13     True           NA          NA         False\n4 A. Whitney Brown  14     True           NA          NA         False\n5 A. Whitney Brown  15     True           NA          NA         False\n6 A. Whitney Brown  16     True           NA          NA         False\n  n_episodes.x season_fraction year first_epid.y last_epid.y n_episodes.y\n1            8       0.4444444 1985     19851109    19860524           18\n2           20       1.0000000 1986     19861011    19870523           20\n3           13       1.0000000 1987     19871017    19880227           13\n4           20       1.0000000 1988     19881008    19890520           20\n5           20       1.0000000 1989     19890930    19900519           20\n6           20       1.0000000 1990     19900929    19910518           20\n          url type gender\n1 /Cast/?AWBr cast   male\n2 /Cast/?AWBr cast   male\n3 /Cast/?AWBr cast   male\n4 /Cast/?AWBr cast   male\n5 /Cast/?AWBr cast   male\n6 /Cast/?AWBr cast   male\n```\n:::\n:::\n\n\nAfter left joining three table, we enriched this table by changing the date format\n\n::: {.cell}\n\n```{.r .cell-code}\nseasons_casts_actors <- mutate( seasons_casts_actors, \n                   first_epid.x = as.Date( as.character(first_epid.x), format= \"%Y%m%d\"), \n                   last_epid.y = as.Date(as.character(last_epid.x), format = \"%Y%m%d\"))\n\n#sanity check\ntable(seasons_casts_actors$first_epid.x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n1977-01-15 1979-10-13 1979-11-17 1979-12-15 1980-01-26 1980-04-09 1980-12-13 \n         1          1          2          1          3          2          3 \n1980-12-20 1981-04-11 1986-02-22 1986-03-22 1989-01-21 1989-03-25 1990-10-27 \n         1          5          1          1          1          1          1 \n1990-11-10 1991-02-09 1991-11-16 1993-10-02 1993-10-09 1994-03-12 1995-01-14 \n         2          2          2          1          2          1          1 \n1995-02-25 1995-04-08 1996-03-16 1999-10-23 2000-05-06 2002-03-02 2005-05-07 \n         1          1          1          1          1          1          1 \n2005-11-12 2008-02-23 2008-11-15 2012-04-07 2014-01-18 2014-03-01 2014-10-25 \n         1          1          2          1          1          1          1 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(seasons_casts_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               aid sid featured first_epid.x last_epid.x update_anchor\n1 A. Whitney Brown  11     True   1986-02-22          NA         False\n2 A. Whitney Brown  12     True         <NA>          NA         False\n3 A. Whitney Brown  13     True         <NA>          NA         False\n4 A. Whitney Brown  14     True         <NA>          NA         False\n5 A. Whitney Brown  15     True         <NA>          NA         False\n6 A. Whitney Brown  16     True         <NA>          NA         False\n  n_episodes.x season_fraction year first_epid.y last_epid.y n_episodes.y\n1            8       0.4444444 1985     19851109        <NA>           18\n2           20       1.0000000 1986     19861011        <NA>           20\n3           13       1.0000000 1987     19871017        <NA>           13\n4           20       1.0000000 1988     19881008        <NA>           20\n5           20       1.0000000 1989     19890930        <NA>           20\n6           20       1.0000000 1990     19900929        <NA>           20\n          url type gender\n1 /Cast/?AWBr cast   male\n2 /Cast/?AWBr cast   male\n3 /Cast/?AWBr cast   male\n4 /Cast/?AWBr cast   male\n5 /Cast/?AWBr cast   male\n6 /Cast/?AWBr cast   male\n```\n:::\n:::\n\n\n## Visualization\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(data = seasons_casts_actors, aes(x = year, y = mean(n_episodes.x), fill = gender)) +\n  geom_bar(stat = \"identity\") +\n  labs(x = \"Year\", y = \"Number of Episodes\", title = \"Number of Episodes per Season\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](KevinMartell_challenge8_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "KevinMartell_challenge8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}