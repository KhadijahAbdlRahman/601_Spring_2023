{
  "hash": "53928e4abfe02876e0c25c082972f28b",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8 \"\nauthor: \"Sue-Ellen Duffy\"\ndescription: \"Joining Data\"\ndate: \"04/27/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - railroads\n  - snl\n  - faostat\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(readr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\n# Reading in the data\nThis dataset will look at SNL actor/actress gender over time. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors <- read_csv(\"_data/snl_actors.csv\")\ncasts <- read_csv(\"_data/snl_casts.csv\")\nseasons <- read_csv(\"_data/snl_seasons.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(actors, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,306 × 5\n   aid            url           type  gender   `10`\n   <chr>          <chr>         <chr> <chr>   <dbl>\n 1 Kate McKinnon  /Cast/?KaMc   cast  female     10\n 2 Alex Moffat    /Cast/?AlMo   cast  male       10\n 3 Ego Nwodim     /Cast/?EgNw   cast  unknown    10\n 4 Chris Redd     /Cast/?ChRe   cast  male       10\n 5 Kenan Thompson /Cast/?KeTh   cast  male       10\n 6 Carey Mulligan /Guests/?3677 guest andy       10\n 7 Marcus Mumford /Guests/?3679 guest male       10\n 8 Aidy Bryant    /Cast/?AiBr   cast  female     10\n 9 Steve Higgins  /Crew/?StHi   crew  male       10\n10 Mikey Day      /Cast/?MiDa   cast  male       10\n# … with 2,296 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(casts, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 9\n   aid                sid featured first…¹ last_…² updat…³ n_epi…⁴ seaso…⁵  `10`\n   <chr>            <dbl> <lgl>      <dbl>   <dbl> <lgl>     <dbl>   <dbl> <dbl>\n 1 A. Whitney Brown    11 TRUE      1.99e7      NA FALSE         8   0.444    10\n 2 A. Whitney Brown    12 TRUE     NA           NA FALSE        20   1        10\n 3 A. Whitney Brown    13 TRUE     NA           NA FALSE        13   1        10\n 4 A. Whitney Brown    14 TRUE     NA           NA FALSE        20   1        10\n 5 A. Whitney Brown    15 TRUE     NA           NA FALSE        20   1        10\n 6 A. Whitney Brown    16 TRUE     NA           NA FALSE        20   1        10\n 7 Alan Zweibel         5 TRUE      1.98e7      NA FALSE         5   0.25     10\n 8 Sasheer Zamata      39 TRUE      2.01e7      NA FALSE        11   0.524    10\n 9 Sasheer Zamata      40 TRUE     NA           NA FALSE        21   1        10\n10 Sasheer Zamata      41 FALSE    NA           NA FALSE        21   1        10\n# … with 604 more rows, and abbreviated variable names ¹​first_epid, ²​last_epid,\n#   ³​update_anchor, ⁴​n_episodes, ⁵​season_fraction\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(seasons, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 46 × 6\n     sid  year first_epid last_epid n_episodes  `10`\n   <dbl> <dbl>      <dbl>     <dbl>      <dbl> <dbl>\n 1     1  1975   19751011  19760731         24    10\n 2     2  1976   19760918  19770521         22    10\n 3     3  1977   19770924  19780520         20    10\n 4     4  1978   19781007  19790526         20    10\n 5     5  1979   19791013  19800524         20    10\n 6     6  1980   19801115  19810411         13    10\n 7     7  1981   19811003  19820522         20    10\n 8     8  1982   19820925  19830514         20    10\n 9     9  1983   19831008  19840512         19    10\n10    10  1984   19841006  19850413         17    10\n# … with 36 more rows\n```\n:::\n:::\n\n\n\nIn order to join these datasets I will have to join actors and casts by \"aid\" or actor ID and then join that with seasons through \"sid\" or season ID. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(actors$ \"type\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"cast\"    \"guest\"   \"crew\"    \"unknown\"\n```\n:::\n:::\n\nAs a way to filter out the potential skewing of data through guests starring or crew (though those would also be interesting to look at later) I will filter these out of our datasets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncasts_gender_count <- casts %>%\n  left_join(filter(actors, type==\"cast\"), \n            by=\"aid\") %>%\n  count(sid, gender)\ntibble(casts_gender_count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 102 × 3\n     sid gender     n\n   <dbl> <chr>  <int>\n 1     1 female     3\n 2     1 male       6\n 3     2 female     3\n 4     2 male       5\n 5     3 female     3\n 6     3 male       6\n 7     4 female     3\n 8     4 male       6\n 9     5 female     3\n10     5 male      12\n# … with 92 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncast_prop_all <- casts_gender_count %>%\n  group_by(sid) %>%\n  mutate(prop=n/sum(n)) %>%\n  ungroup () %>%\n  select(-n) %>%\n  pivot_wider(names_from = gender,\n              values_from = prop) %>%\n  mutate(across(everything(),~replace_na(.,0))) %>%\n  pivot_longer(c(female, male, `NA`, unknown),\n               values_to = \"prop\",\n               names_to = \"gender\")\ntibble(cast_prop_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 184 × 3\n     sid gender   prop\n   <dbl> <chr>   <dbl>\n 1     1 female  0.333\n 2     1 male    0.667\n 3     1 NA      0    \n 4     1 unknown 0    \n 5     2 female  0.375\n 6     2 male    0.625\n 7     2 NA      0    \n 8     2 unknown 0    \n 9     3 female  0.333\n10     3 male    0.667\n# … with 174 more rows\n```\n:::\n:::\n\n# Visualization\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}