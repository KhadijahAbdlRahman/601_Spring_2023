{
  "hash": "c33bff344b792abdf1c6cbd55078902a",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Xinyang Mao\"\ndescription: \"Joining Data\"\ndate: \"05/22/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - snl\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors <- read.csv(\"_data/snl_actors.csv\")\nseasons <- read.csv(\"_data/snl_seasons.csv\")\ncasts <- read.csv(\"_data/snl_casts.csv\")\n```\n:::\n\n\n### Briefly describe the data\nshow dimension of `actors`\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2306    4\n```\n:::\n:::\n\nShow the columns of `actors`\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"    \"url\"    \"type\"   \"gender\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             aid           url  type  gender\n1  Kate McKinnon   /Cast/?KaMc  cast  female\n2    Alex Moffat   /Cast/?AlMo  cast    male\n3     Ego Nwodim   /Cast/?EgNw  cast unknown\n4     Chris Redd   /Cast/?ChRe  cast    male\n5 Kenan Thompson   /Cast/?KeTh  cast    male\n6 Carey Mulligan /Guests/?3677 guest    andy\n```\n:::\n:::\n\n\nBy examining the dimensions of these dataframes, we can observe that \"Saturday Night Live\" spanned across 46 seasons and involved a total of 2306 actors.The \"actors\" dataset focuses on specific information related to the actors themselves. \n\nshow dimension of `seasons`\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46  5\n```\n:::\n:::\n\nShow the columns of `seasons`\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"        \"year\"       \"first_epid\" \"last_epid\"  \"n_episodes\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  sid year first_epid last_epid n_episodes\n1   1 1975   19751011  19760731         24\n2   2 1976   19760918  19770521         22\n3   3 1977   19770924  19780520         20\n4   4 1978   19781007  19790526         20\n5   5 1979   19791013  19800524         20\n6   6 1980   19801115  19810411         13\n```\n:::\n:::\n\nFor `seasons` dataset,the \"seasons\" dataset provides comprehensive details about each season of the show, including the premiere and finale episodes, the initial airing year of each season, and the overall number of episodes in each season`\n\nshow dimension of `casts`\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 614   8\n```\n:::\n:::\n\nShow the columns of `casts`\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"             \"sid\"             \"featured\"        \"first_epid\"     \n[5] \"last_epid\"       \"update_anchor\"   \"n_episodes\"      \"season_fraction\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               aid sid featured first_epid last_epid update_anchor n_episodes\n1 A. Whitney Brown  11     True   19860222        NA         False          8\n2 A. Whitney Brown  12     True         NA        NA         False         20\n3 A. Whitney Brown  13     True         NA        NA         False         13\n4 A. Whitney Brown  14     True         NA        NA         False         20\n5 A. Whitney Brown  15     True         NA        NA         False         20\n6 A. Whitney Brown  16     True         NA        NA         False         20\n  season_fraction\n1       0.4444444\n2       1.0000000\n3       1.0000000\n4       1.0000000\n5       1.0000000\n6       1.0000000\n```\n:::\n:::\n\nThe \"casts\" dataset offers insights into the cast members' participation on the show, including details such as their notable episodes, appearance counts, and other relevant data. \n## Tidy data\nCheck if own missing values.\n\n::: {.cell}\n\n```{.r .cell-code}\nm_actors <- colSums(is.na(actors))\nm_actors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   aid    url   type gender \n     0      0      0      0 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nm_seasons <- colSums(is.na(seasons))\nm_seasons\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       sid       year first_epid  last_epid n_episodes \n         0          0          0          0          0 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nm_casts <- colSums(is.na(casts))\nm_casts\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            aid             sid        featured      first_epid       last_epid \n              0               0               0             564             597 \n  update_anchor      n_episodes season_fraction \n              0               0               0 \n```\n:::\n:::\n\n`actors` and `seasons` datasets have no missing values, `casts` have missing values for `first_epid` and `last_epid`, but they are not used here, so I removed these two variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncasts <- subset(casts,select = -c(first_epid,last_epid))\ncolnames(casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"             \"sid\"             \"featured\"        \"update_anchor\"  \n[5] \"n_episodes\"      \"season_fraction\"\n```\n:::\n:::\n\n\n## Join Data\n\nInner join the 3 datasets according to `aid` and `sid`\n\n::: {.cell}\n\n```{.r .cell-code}\na_c <- inner_join(actors,casts, by=\"aid\")\na_c_s <- inner_join(a_c,seasons, by=\"sid\")\ncolnames(a_c_s)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"aid\"             \"url\"             \"type\"            \"gender\"         \n [5] \"sid\"             \"featured\"        \"update_anchor\"   \"n_episodes.x\"   \n [9] \"season_fraction\" \"year\"            \"first_epid\"      \"last_epid\"      \n[13] \"n_episodes.y\"   \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(a_c_s)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            aid         url type gender sid featured update_anchor n_episodes.x\n1 Kate McKinnon /Cast/?KaMc cast female  37     True         False            5\n2 Kate McKinnon /Cast/?KaMc cast female  38     True         False           21\n3 Kate McKinnon /Cast/?KaMc cast female  39    False         False           21\n4 Kate McKinnon /Cast/?KaMc cast female  40    False         False           21\n5 Kate McKinnon /Cast/?KaMc cast female  41    False         False           21\n6 Kate McKinnon /Cast/?KaMc cast female  42    False         False           21\n  season_fraction year first_epid last_epid n_episodes.y\n1       0.2272727 2011   20110924  20120519           22\n2       1.0000000 2012   20120915  20130518           21\n3       1.0000000 2013   20130928  20140517           21\n4       1.0000000 2014   20140927  20150516           21\n5       1.0000000 2015   20151003  20160521           21\n6       1.0000000 2016   20161001  20170520           21\n```\n:::\n:::\n\nCheck if the new generated dataframe has missing value.\n\n::: {.cell}\n\n```{.r .cell-code}\nm_n <- colSums(is.na(a_c_s))\nm_n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            aid             url            type          gender             sid \n              0               0               0               0               0 \n       featured   update_anchor    n_episodes.x season_fraction            year \n              0               0               0               0               0 \n     first_epid       last_epid    n_episodes.y \n              0               0               0 \n```\n:::\n:::\n\nPerfect!The new dataframe doesn't has any missing value.\n\nNext,let's take a look at the distribution of `year` ,`season_fraction` and `gender` of actors!\n\nCheck the unique value of `gender`\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(unique(a_c_s$gender))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"female\"  \"male\"    \"unknown\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(a_c_s, aes(fill=gender, y=season_fraction, x=year)) + \n    geom_bar(position=\"stack\", stat=\"identity\")\n```\n\n::: {.cell-output-display}\n![](XinyangMao_Challenge8_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n```{.r .cell-code}\n  labs(x = \"Year\", y = \"season_fraction of Episodes\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n:::\n",
    "supporting": [
      "XinyangMao_Challenge8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}