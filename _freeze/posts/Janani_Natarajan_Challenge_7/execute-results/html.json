{
  "hash": "acd34fad34e0d52dce0eb21cf2b36349",
  "result": {
    "markdown": "---\ntitle: \"Challenge 7\"\nauthor: \"Janani Natarajan\"\ndescription: \"Visualizing Multiple Dimensions\"\ndate: \"05/13/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_7\n  - hotel_bookings\n  - australian_marriage\n  - air_bnb\n  - eggs\n  - abc_poll\n  - faostat\n  - usa_households\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(treemap)\nlibrary(treemapify)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   eggs ⭐\n-   abc_poll ⭐⭐\n-   australian_marriage ⭐⭐\n-   hotel_bookings ⭐⭐⭐\n-   air_bnb ⭐⭐⭐\n-   us_hh ⭐⭐⭐⭐\n-   faostat ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAB_NYC <- read_csv(\"_data/AB_NYC_2019.csv\", show_col_types = FALSE)\n```\n:::\n\n\n### Briefly describe the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(AB_NYC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895    16\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(AB_NYC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 16\n     id name       host_id host_…¹ neigh…² neigh…³ latit…⁴ longi…⁵ room_…⁶ price\n  <dbl> <chr>        <dbl> <chr>   <chr>   <chr>     <dbl>   <dbl> <chr>   <dbl>\n1  2539 Clean & q…    2787 John    Brookl… Kensin…    40.6   -74.0 Privat…   149\n2  2595 Skylit Mi…    2845 Jennif… Manhat… Midtown    40.8   -74.0 Entire…   225\n3  3647 THE VILLA…    4632 Elisab… Manhat… Harlem     40.8   -73.9 Privat…   150\n4  3831 Cozy Enti…    4869 LisaRo… Brookl… Clinto…    40.7   -74.0 Entire…    89\n5  5022 Entire Ap…    7192 Laura   Manhat… East H…    40.8   -73.9 Entire…    80\n6  5099 Large Coz…    7322 Chris   Manhat… Murray…    40.7   -74.0 Entire…   200\n# … with 6 more variables: minimum_nights <dbl>, number_of_reviews <dbl>,\n#   last_review <date>, reviews_per_month <dbl>,\n#   calculated_host_listings_count <dbl>, availability_365 <dbl>, and\n#   abbreviated variable names ¹​host_name, ²​neighbourhood_group,\n#   ³​neighbourhood, ⁴​latitude, ⁵​longitude, ⁶​room_type\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(AB_NYC$neighbourhood_group)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Brooklyn\"      \"Manhattan\"     \"Queens\"        \"Staten Island\"\n[5] \"Bronx\"        \n```\n:::\n:::\n\n\nThis dataset provides information on nearly 49,000 AirBNB listings located in the New York City area in the year 2019. Each listing contains the following details: the listing's name and ID, the host's name and ID, the number of listings associated with that particular host, the location information which includes the borough, specific neighborhood, latitude, and longitude, the type of room (whether it's a private room, shared room, or an entire home), the minimum length of stay in nights, the price, and year-round availability. Additionally, the dataset includes the number of reviews, reviews per month, and the most recent review for each listing.\n\n## Tidy Data (as needed)\n\nThe date was originally characters, I used transform and as.date to mutate last_review into date format.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAB_NYC <- transform(mydata, last_review=as.Date(last_review))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in transform(mydata, last_review = as.Date(last_review)): object 'mydata' not found\n```\n:::\n:::\n\n\n## Visualization with Multiple Dimensions\n\nFor this series of graph, I did this to help readers more easily identify and understand relationships between different neighborhood groups.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mydata, aes(longitude, latitude, color = neighbourhood_group), group = neighbourhood_group) + geom_point() +\n  labs (size = \"Price\", color = \"Neighborhoods\", title = \"AirBnB Neighborhood Groups\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(mydata, aes(longitude, latitude, color = neighbourhood_group), : object 'mydata' not found\n```\n:::\n:::\n\n\nThe map above provides an overview of the geographic distribution of Airbnb units, while the graph below shows that Brooklyn and Manhattan have roughly similar numbers of Airbnb units. In contrast, Staten Island and the Bronx have significantly fewer units in comparison.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmydata %>%\n  count(neighbourhood_group) %>%\n  ggplot(aes(area= n, fill= neighbourhood_group, label = neighbourhood_group)) + \n  geom_treemap() + \n  labs(title = \"Airbnb Units\") + \n  scale_fill_discrete(name = \"Neighborhood Group\") +\n  geom_treemap_text(colour = \"brown\",\n                    place = \"centre\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in count(., neighbourhood_group): object 'mydata' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngg<- ggplot(mydata, aes(neighbourhood_group, price, color = neighbourhood_group)) + geom_boxplot() + ylim(0, 800) + \n  labs (x = \"Neighbourhood Group\", y = \"Price\") \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(mydata, aes(neighbourhood_group, price, color = neighbourhood_group)): object 'mydata' not found\n```\n:::\n\n```{.r .cell-code}\nplot(gg) + labs(title = \"Property Prices\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(gg): object 'gg' not found\n```\n:::\n:::\n\n\nIn the above visualization, we can observe the average price of Airbnb units per neighborhood group and room type. This provides us with an understanding of how each neighborhood group typically prices their units. For instance, we can see that a private room in Manhattan costs roughly the same as an entire home/apartment in the Bronx and Staten Island.\n\nPlotting AirBnB hosts with varying numbers of total listings generally price their listings. Additionally, I want to investigate whether certain room types are consistently more affordable or expensive. To achieve this, I plan to create a scatterplot where each listing is assigned a specific color based on its room type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(AB_NYC_2019, aes(x=calculated_host_listings_count, y=price)) +\n  geom_point(aes(color=room_type)) + \n  labs(\n    title = \"NYC AirBNB prices sky high even amongst humbler hosts\",\n    x = \"Number of Listings From Host\",\n    y = \"Price of AirBNB ($USD)\", \n    caption = \"Data from InsideAirbnb.com\",\n    color = \"Room Type\") +\n  scale_color_manual(values=c(\"green\", \"blue\", \"red\")) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(AB_NYC_2019, aes(x = calculated_host_listings_count, y = price)): object 'AB_NYC_2019' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(AB_NYC_2019 %>% \n         filter(calculated_host_listings_count <= 50), aes(x=calculated_host_listings_count, y=price)) +\n  geom_point(aes(color=room_type)) + \n  labs(\n    title = \"Hosts with more properties offer lower-priced NYC AirBnBs\",\n    x = \"Listings From Host\",\n    y = \"Price\", \n    color = \"Room Type\") +\n  scale_color_manual(values=c(\"green\", \"blue\", \"red\")) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in filter(., calculated_host_listings_count <= 50): object 'AB_NYC_2019' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(AB_NYC_2019, aes(fill=room_type, x=neighbourhood_group, y=number_of_reviews)) +\n  geom_bar(position=\"dodge\", stat = \"identity\") +\n  labs(\n    title = \"AirBnBs in Queens\",\n    x = \"Borough\",\n    y = \"Reviews\",\n    fill = \"Room Type\", \n  ) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(AB_NYC_2019, aes(fill = room_type, x = neighbourhood_group, : object 'AB_NYC_2019' not found\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}