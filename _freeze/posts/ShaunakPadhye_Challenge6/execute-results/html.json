{
  "hash": "5dd3223a17c4e2fa237f8c61d6ff4683",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Shaunak Padhye\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"05/19/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - Shaunak Padhye\n  - hotel_bookings\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\nFor this challenge, I will be using the following dataset:\n\n  - hotel_bookings ⭐⭐⭐⭐\n\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nbookings <- read.csv(\"_data/hotel_bookings.csv\")\nhead(bookings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         hotel is_canceled lead_time arrival_date_year arrival_date_month\n1 Resort Hotel           0       342              2015               July\n2 Resort Hotel           0       737              2015               July\n3 Resort Hotel           0         7              2015               July\n4 Resort Hotel           0        13              2015               July\n5 Resort Hotel           0        14              2015               July\n6 Resort Hotel           0        14              2015               July\n  arrival_date_week_number arrival_date_day_of_month stays_in_weekend_nights\n1                       27                         1                       0\n2                       27                         1                       0\n3                       27                         1                       0\n4                       27                         1                       0\n5                       27                         1                       0\n6                       27                         1                       0\n  stays_in_week_nights adults children babies meal country market_segment\n1                    0      2        0      0   BB     PRT         Direct\n2                    0      2        0      0   BB     PRT         Direct\n3                    1      1        0      0   BB     GBR         Direct\n4                    1      1        0      0   BB     GBR      Corporate\n5                    2      2        0      0   BB     GBR      Online TA\n6                    2      2        0      0   BB     GBR      Online TA\n  distribution_channel is_repeated_guest previous_cancellations\n1               Direct                 0                      0\n2               Direct                 0                      0\n3               Direct                 0                      0\n4            Corporate                 0                      0\n5                TA/TO                 0                      0\n6                TA/TO                 0                      0\n  previous_bookings_not_canceled reserved_room_type assigned_room_type\n1                              0                  C                  C\n2                              0                  C                  C\n3                              0                  A                  C\n4                              0                  A                  A\n5                              0                  A                  A\n6                              0                  A                  A\n  booking_changes deposit_type agent company days_in_waiting_list customer_type\n1               3   No Deposit  NULL    NULL                    0     Transient\n2               4   No Deposit  NULL    NULL                    0     Transient\n3               0   No Deposit  NULL    NULL                    0     Transient\n4               0   No Deposit   304    NULL                    0     Transient\n5               0   No Deposit   240    NULL                    0     Transient\n6               0   No Deposit   240    NULL                    0     Transient\n  adr required_car_parking_spaces total_of_special_requests reservation_status\n1   0                           0                         0          Check-Out\n2   0                           0                         0          Check-Out\n3  75                           0                         0          Check-Out\n4  75                           0                         0          Check-Out\n5  98                           0                         1          Check-Out\n6  98                           0                         1          Check-Out\n  reservation_status_date\n1              2015-07-01\n2              2015-07-01\n3              2015-07-02\n4              2015-07-02\n5              2015-07-03\n6              2015-07-03\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThis dataset contains the booking details for a number of hotels. This is a very comprehensive dataset having 32 variables. It covers various details such as the details of the booking party (adults, children, babies, meal, country, etc), details of the hotel(hotel, reserved room type, assigned room type, etc) and details of the booking itself(arrival date details, reservation status details, etc).\nThe data will need to be tidied and some columns will be mutated.\n\n## Tidy Data (as needed)\n\nWe can merge the arrival columns to create a single column that holds the arrival date in a standard format.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbookings$date_str <- paste(bookings$arrival_date_year, bookings$arrival_date_month, bookings$arrival_date_day_of_month, sep = \"-\")\n\nbookings$arrival_date <- as.Date(bookings$date_str, format = \"%Y-%B-%d\")\n\nbookings <- bookings[, !(names(bookings) %in% \"date_str\")]\n\nhead(select(bookings, arrival_date, reservation_status_date))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  arrival_date reservation_status_date\n1   2015-07-01              2015-07-01\n2   2015-07-01              2015-07-01\n3   2015-07-01              2015-07-02\n4   2015-07-01              2015-07-02\n5   2015-07-01              2015-07-03\n6   2015-07-01              2015-07-03\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbookings <- select(bookings, -arrival_date_week_number, -arrival_date_day_of_month)\ncolnames(bookings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"hotel\"                          \"is_canceled\"                   \n [3] \"lead_time\"                      \"arrival_date_year\"             \n [5] \"arrival_date_month\"             \"stays_in_weekend_nights\"       \n [7] \"stays_in_week_nights\"           \"adults\"                        \n [9] \"children\"                       \"babies\"                        \n[11] \"meal\"                           \"country\"                       \n[13] \"market_segment\"                 \"distribution_channel\"          \n[15] \"is_repeated_guest\"              \"previous_cancellations\"        \n[17] \"previous_bookings_not_canceled\" \"reserved_room_type\"            \n[19] \"assigned_room_type\"             \"booking_changes\"               \n[21] \"deposit_type\"                   \"agent\"                         \n[23] \"company\"                        \"days_in_waiting_list\"          \n[25] \"customer_type\"                  \"adr\"                           \n[27] \"required_car_parking_spaces\"    \"total_of_special_requests\"     \n[29] \"reservation_status\"             \"reservation_status_date\"       \n[31] \"arrival_date\"                  \n```\n:::\n:::\n\n\nWe can use the lead_time column along with the arrival_date column to get the booking date for the booking.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbookings$reservation_booking_date <- bookings$arrival_date - days(bookings$lead_time)\nhead(select(bookings, lead_time, arrival_date, reservation_booking_date))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  lead_time arrival_date reservation_booking_date\n1       342   2015-07-01               2014-07-24\n2       737   2015-07-01               2013-06-24\n3         7   2015-07-01               2015-06-24\n4        13   2015-07-01               2015-06-18\n5        14   2015-07-01               2015-06-17\n6        14   2015-07-01               2015-06-17\n```\n:::\n:::\n\n\n## Time Dependent Visualization\n\nWe can plot the number of bookings for a month over time. This can give us a good idea regarding which months are popular.\n\n::: {.cell}\n\n```{.r .cell-code}\nbookings %>%\n  mutate(year_month = format(as.Date(arrival_date), \"%Y-%m\")) %>%\n  group_by(year_month) %>%\n  summarise(Total_bookings = n()) %>%\n  ggplot(aes(x = as.Date(paste0(year_month, \"-01\")), y = Total_bookings)) +\n  geom_line(color = \"grey\") +\n  geom_point(shape = 21, color = \"black\", fill = \"#69b3a2\", size = 6) +\n  theme_minimal() +\n  labs(title = \"Bookings by Month and Year\",\n       x = \"Year and Month\",\n       y = \"Count\") +\n  scale_x_date(date_breaks = \"3 month\", date_labels = \"%Y-%m\")\n```\n\n::: {.cell-output-display}\n![](ShaunakPadhye_Challenge6_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nFrom the above graph, we can see that there is a dip in the number of bookings for the winter months and the number of bookings are highest during the summer months.\n\n## Visualizing Part-Whole Relationships\n\nWe can check the cancellation percentage for each hotel by plotting a bar graph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bookings, aes(x = hotel, fill = factor(is_canceled))) +\n  geom_bar(position = position_stack(reverse = TRUE)) +\n  scale_fill_manual(values = c(\"#00AFBB\", \"#FC4E07\"), name = \"Is Canceled\") +\n  labs(title = \"Composition of Cancellation by Hotel\", x = \"Hotel\", y = \"Count\",fill=\"Cancellation\") +\n   scale_fill_manual(values = c(\"#00AFBB\", \"#FC4E07\"), \n                     guide = guide_legend(reverse = TRUE),\n                    labels = c(\"No\", \"Yes\"))\n```\n\n::: {.cell-output-display}\n![](ShaunakPadhye_Challenge6_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nWe observe that while \"City Hotel\" received more bookings overall, there was a less percentage of cancellations for the \"Resort Hotel\"\n",
    "supporting": [
      "ShaunakPadhye_Challenge6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}