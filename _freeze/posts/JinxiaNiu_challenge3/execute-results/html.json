{
  "hash": "c0ebb6563260cbcbd6fe44f0f09b7dba",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 by Jinxia Niu\"\nauthor: \"Jinxia Niu\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"03/17/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - Jinxia Niu\n  - eggs_tidy.csv\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xls ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n eggs <- read_csv(\"_data/eggs_tidy.csv\")\n```\n:::\n\n\n### Briefly describe the data\n\nThe data has 120 rows with 6 variables (2 grouping and 4 values) .The data reports the average price per carton paid to the farmer or producer for organic eggs (and organic chicken), reported monthly from 2004 to 2013. Average price is reported by carton type, which can vary in both size (x-large or large) and quantity (half-dozen or dozen.)\n\n## Anticipate the End Result\n\nwe can pivot longer - changing our data from 120 rows with 6 variables (2 grouping and 4 values) to 480 rows of 4 variables\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\n`## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_new <- eggs%>%\n  pivot_longer(cols=contains(\"large\"),\n               names_to = c(\"size\",\"quantity\"),\n               names_sep = \"_\",\n               values_to = \"Price\"\n               )\n\nprint(eggs_new)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 √ó 5\n   month     year size  quantity Price\n   <chr>    <dbl> <chr> <chr>    <dbl>\n 1 January   2004 large half      126 \n 2 January   2004 large dozen     230 \n 3 January   2004 extra large     132 \n 4 January   2004 extra large     230 \n 5 February  2004 large half      128.\n 6 February  2004 large dozen     226.\n 7 February  2004 extra large     134.\n 8 February  2004 extra large     230 \n 9 March     2004 large half      131 \n10 March     2004 large dozen     225 \n# ‚Ä¶ with 470 more rows\n```\n:::\n:::\n\n\n\n### Challenge: Pivot the Chosen Data\n\nDocument your work here. What will a new \"case\" be once you have pivoted the data? How does it meet requirements for tidy data?\n\n\n::: {.cell}\n\n:::\n\n\n#Any additional comments?\nHow to tell R that names_sep = \"_\" is the second \"_\" such as \"extra_large_dozen\" instead of the first\"_\"?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}