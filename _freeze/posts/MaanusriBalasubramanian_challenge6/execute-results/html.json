{
  "hash": "7ac7f241950e68b6833150ea562f2ac5",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Maanusri Balasubramanian\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"05/06/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - maanusri balasubramanian\n  - usa_households\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least one graph including time (evolution)\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n5)  Create at least one graph depicting part-whole or flow relationships\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - debt  ⭐\n  - fed_rate ⭐⭐\n  - abc_poll ⭐⭐⭐\n  - usa_hh ⭐⭐⭐\n  - hotel_bookings ⭐⭐⭐⭐\n  - AB_NYC ⭐⭐⭐⭐⭐\n\n  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# reading dataset from CSV\nab <- read.csv(\"_data/AB_NYC_2019.csv\")\n\n# peaking into the dataset\nhead(ab)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    id                                             name host_id   host_name\n1 2539               Clean & quiet apt home by the park    2787        John\n2 2595                            Skylit Midtown Castle    2845    Jennifer\n3 3647              THE VILLAGE OF HARLEM....NEW YORK !    4632   Elisabeth\n4 3831                  Cozy Entire Floor of Brownstone    4869 LisaRoxanne\n5 5022 Entire Apt: Spacious Studio/Loft by central park    7192       Laura\n6 5099        Large Cozy 1 BR Apartment In Midtown East    7322       Chris\n  neighbourhood_group neighbourhood latitude longitude       room_type price\n1            Brooklyn    Kensington 40.64749 -73.97237    Private room   149\n2           Manhattan       Midtown 40.75362 -73.98377 Entire home/apt   225\n3           Manhattan        Harlem 40.80902 -73.94190    Private room   150\n4            Brooklyn  Clinton Hill 40.68514 -73.95976 Entire home/apt    89\n5           Manhattan   East Harlem 40.79851 -73.94399 Entire home/apt    80\n6           Manhattan   Murray Hill 40.74767 -73.97500 Entire home/apt   200\n  minimum_nights number_of_reviews last_review reviews_per_month\n1              1                 9  2018-10-19              0.21\n2              1                45  2019-05-21              0.38\n3              3                 0                            NA\n4              1               270  2019-07-05              4.64\n5             10                 9  2018-11-19              0.10\n6              3                74  2019-06-22              0.59\n  calculated_host_listings_count availability_365\n1                              6              365\n2                              2              355\n3                              1              365\n4                              1              194\n5                              1                0\n6                              1              129\n```\n:::\n\n```{.r .cell-code}\n# number of rows\nnrow(ab)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 48895\n```\n:::\n\n```{.r .cell-code}\n# number of columns\nncol(ab)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n\n```{.r .cell-code}\n# print column names\ncolnames(ab)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"id\"                             \"name\"                          \n [3] \"host_id\"                        \"host_name\"                     \n [5] \"neighbourhood_group\"            \"neighbourhood\"                 \n [7] \"latitude\"                       \"longitude\"                     \n [9] \"room_type\"                      \"price\"                         \n[11] \"minimum_nights\"                 \"number_of_reviews\"             \n[13] \"last_review\"                    \"reviews_per_month\"             \n[15] \"calculated_host_listings_count\" \"availability_365\"              \n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe dataset contains information about Airbnbs in all boroughs in New York City. The dataset has 48895 entries and 16 columns. Each row gives us information about the particular Airbnb like type information, location information, owner information, reviews, etc.\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nThe data is already tidy for the visualizations that I plan to do, so no work needs to be done.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ab)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    id                                             name host_id   host_name\n1 2539               Clean & quiet apt home by the park    2787        John\n2 2595                            Skylit Midtown Castle    2845    Jennifer\n3 3647              THE VILLAGE OF HARLEM....NEW YORK !    4632   Elisabeth\n4 3831                  Cozy Entire Floor of Brownstone    4869 LisaRoxanne\n5 5022 Entire Apt: Spacious Studio/Loft by central park    7192       Laura\n6 5099        Large Cozy 1 BR Apartment In Midtown East    7322       Chris\n  neighbourhood_group neighbourhood latitude longitude       room_type price\n1            Brooklyn    Kensington 40.64749 -73.97237    Private room   149\n2           Manhattan       Midtown 40.75362 -73.98377 Entire home/apt   225\n3           Manhattan        Harlem 40.80902 -73.94190    Private room   150\n4            Brooklyn  Clinton Hill 40.68514 -73.95976 Entire home/apt    89\n5           Manhattan   East Harlem 40.79851 -73.94399 Entire home/apt    80\n6           Manhattan   Murray Hill 40.74767 -73.97500 Entire home/apt   200\n  minimum_nights number_of_reviews last_review reviews_per_month\n1              1                 9  2018-10-19              0.21\n2              1                45  2019-05-21              0.38\n3              3                 0                            NA\n4              1               270  2019-07-05              4.64\n5             10                 9  2018-11-19              0.10\n6              3                74  2019-06-22              0.59\n  calculated_host_listings_count availability_365\n1                              6              365\n2                              2              355\n3                              1              365\n4                              1              194\n5                              1                0\n6                              1              129\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nab_year <- ab %>% drop_na(last_review)\n\nab_year <- mutate(ab_year, Date = ymd(last_review)) %>% \n  mutate(day = day(Date), month = month(Date, label = TRUE), year = year(Date)) %>%\n  select(id, neighbourhood_group:year)\n\nyearly_price <-ab_year  %>% \n    filter(availability_365>0)  %>% \n    filter(price > quantile(price)[2] - 1.5 * IQR(price) & price < quantile(price)[4] + 1.5 * IQR(price))  %>% \n    drop_na(year) %>%\n    group_by(year)  %>%\n    summarise(Mean = mean(price, na.rm = TRUE))\n```\n:::\n\n\n\n## Time Dependent Visualization\n\nThe visualization depicts the price trend based on the last year of review.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(yearly_price, aes(x = as.integer(year), y = Mean)) +\n  geom_line(color = \"orange\", linewidth = 0.4) +\n  labs(title = \"Price Trend by Last Review Year\",\n       x = \"Year of Latest Review\") +\n  scale_x_continuous(\n    breaks = seq(min(as.integer(yearly_price$year)), max(as.integer(yearly_price$year)), by = 1),\n    labels = seq(min(as.integer(yearly_price$year)), max(as.integer(yearly_price$year)), by = 1),\n    expand = c(0, 0)\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.title = element_text(size = 10),\n    axis.text = element_text(size = 10),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.border = element_blank(),\n    axis.line = element_line(color = \"grey\")\n  )\n```\n\n::: {.cell-output-display}\n![](MaanusriBalasubramanian_challenge6_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Visualizing Part-Whole Relationships\n\nThe stacked barchart helps us understand the distribution of room types in each borough. This gives us an overall understanding about the proportion of different room types in each borough.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ab, aes(neighbourhood_group, fill = room_type)) +\n  geom_bar() +\n  labs(\n    title = \"Distribution of Room Types in Each Borough\",\n    x = \"Borough\",\n    y = \"Count\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](MaanusriBalasubramanian_challenge6_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "MaanusriBalasubramanian_challenge6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}