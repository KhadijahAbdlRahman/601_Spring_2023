{
  "hash": "4f77ec41a35f9a2e586e333b7fa322b7",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8 Paritosh\"\nauthor: \"Paritosh G\"\ndescription: \"Joining Data\"\ndate: \"05/29/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - railroads\n  - snl\n  - faostat\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in 3 datasets.\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors <- read_csv(\"_data/snl_actors.csv\")\ncasts  <- read_csv(\"_data/snl_casts.csv\")\nseasons <- read_csv(\"_data/snl_seasons.csv\")\n```\n:::\n\n\n### Briefly describe the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"    \"url\"    \"type\"   \"gender\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"aid\"             \"sid\"             \"featured\"        \"first_epid\"     \n[5] \"last_epid\"       \"update_anchor\"   \"n_episodes\"      \"season_fraction\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sid\"        \"year\"       \"first_epid\" \"last_epid\"  \"n_episodes\"\n```\n:::\n:::\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncasts <- casts %>%\n  mutate(first_epid = ymd(first_epid), last_epid = ymd(last_epid))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nseasons <- seasons %>%\n  mutate(first_epid = ymd(first_epid), last_epid = ymd(last_epid))\n```\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n## Join Data\n\nBe sure to include a sanity check, and double-check that case count is correct\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors_merged <- actors %>%\n  left_join(casts, by = \"aid\") %>%\n  rename(\"actor_first_epid\" = \"first_epid\", \"actor_last_epid\" = \"last_epid\", \"n_actor_episodes\" = \"n_episodes\") %>%\n  left_join(seasons, by = \"sid\") %>%\n  rename(\"season_first_epid\" = \"first_epid\", \"season_last_epid\" = \"last_epid\") %>%\n  select(1, 4, 3, 2, 5, 6, 12:14, 7:11) %>%\n  arrange(season_first_epid)\n actors_merged\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,764 × 14\n   aid   gender type  url     sid featu…¹  year season_f…² season_l…³ actor_fi…⁴\n   <chr> <chr>  <chr> <chr> <dbl> <lgl>   <dbl> <date>     <date>     <date>    \n 1 Chev… male   cast  /Cas…     1 FALSE    1975 1975-10-11 1976-07-31 NA        \n 2 Dan … male   cast  /Cas…     1 FALSE    1975 1975-10-11 1976-07-31 NA        \n 3 Garr… male   cast  /Cas…     1 FALSE    1975 1975-10-11 1976-07-31 NA        \n 4 John… male   cast  /Cas…     1 FALSE    1975 1975-10-11 1976-07-31 NA        \n 5 Mich… male   cast  /Cas…     1 FALSE    1975 1975-10-11 1976-07-31 NA        \n 6 Jane… female cast  /Cas…     1 FALSE    1975 1975-10-11 1976-07-31 NA        \n 7 Lara… female cast  /Cas…     1 FALSE    1975 1975-10-11 1976-07-31 NA        \n 8 Gild… female cast  /Cas…     1 FALSE    1975 1975-10-11 1976-07-31 NA        \n 9 Geor… male   cast  /Cas…     1 FALSE    1975 1975-10-11 1976-07-31 NA        \n10 Bill… male   cast  /Cas…     2 FALSE    1976 1976-09-18 1977-05-21 1977-01-15\n# … with 2,754 more rows, 4 more variables: actor_last_epid <date>,\n#   update_anchor <lgl>, n_actor_episodes <dbl>, season_fraction <dbl>, and\n#   abbreviated variable names ¹​featured, ²​season_first_epid,\n#   ³​season_last_epid, ⁴​actor_first_epid\n```\n:::\n:::\n\n\n## Visualisation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors_merged %>% \n  ggplot(aes(sid, fill = gender)) +\n  geom_histogram(bins=30) +\n  theme_bw() +\n  labs(title = \"Bar Plot\", subtitle = \"Cast composition for different seasons\", y = \"No. of cast members\", x = \"Season ID\", fill = \"Gender\")\n```\n\n::: {.cell-output-display}\n![](Challenge_8_Paritosh_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Challenge_8_Paritosh_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}