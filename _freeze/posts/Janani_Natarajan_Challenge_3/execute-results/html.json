{
  "hash": "d20e66ca812c559173ab178125972e36",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Janani Natarajan\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"05/08/23\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ⭐\n-   eggs_tidy.csv ⭐⭐ or organiceggpoultry.xls ⭐⭐⭐\n-   australian_marriage\\*.xls ⭐⭐⭐\n-   USA Households\\*.xlsx ⭐⭐⭐⭐\n-   sce_labor_chart_data_public.xlsx 🌟🌟🌟🌟🌟\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanimals <- read.csv(\"_data/animal_weight.csv\")\n```\n:::\n\n\n### Briefly describe the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(animals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            IPCC.Area Cattle...dairy Cattle...non.dairy Buffaloes\n1 Indian Subcontinent            275                110       295\n2      Eastern Europe            550                391       380\n3              Africa            275                173       380\n4             Oceania            500                330       380\n5      Western Europe            600                420       380\n6       Latin America            400                305       380\n  Swine...market Swine...breeding Chicken...Broilers Chicken...Layers Ducks\n1             28               28                0.9              1.8   2.7\n2             50              180                0.9              1.8   2.7\n3             28               28                0.9              1.8   2.7\n4             45              180                0.9              1.8   2.7\n5             50              198                0.9              1.8   2.7\n6             28               28                0.9              1.8   2.7\n  Turkeys Sheep Goats Horses Asses Mules Camels Llamas\n1     6.8  28.0  30.0    238   130   130    217    217\n2     6.8  48.5  38.5    377   130   130    217    217\n3     6.8  28.0  30.0    238   130   130    217    217\n4     6.8  48.5  38.5    377   130   130    217    217\n5     6.8  48.5  38.5    377   130   130    217    217\n6     6.8  28.0  30.0    238   130   130    217    217\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize(animals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ndata frame with 0 columns and 1 row\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nview(animals)\nncol(animals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(animal_weight)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in nrow(animal_weight): object 'animal_weight' not found\n```\n:::\n:::\n\n\n## Anticipate the End Result\n\nThe first step in pivoting the data is to try to come up with a concrete vision of what the end product *should* look like - that way you will know whether or not your pivoting was successful.\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\n### Finding current and future data dimensions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(animals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 9\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nncol(animals)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(animals) * (ncol(animals)-1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 144\n```\n:::\n:::\n\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanimals2 <- pivot_longer(animals, `Cattle...dairy`:`Llamas`, names_to = \"type\", values_to = \"weights\")\n```\n:::\n\n\n### Describe the final dimensions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(animals2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 144\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nncol(animals2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}