{
  "hash": "c695c11ef6cbe69b749bd51c28fd9977",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6\"\nauthor: \"Matt Eckstein\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"04/05/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  \n  - debt\n  - Matt Eckstein\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\n\n## Read in data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\ndebt <- read_xlsx(\"_data/debt_in_trillions.xlsx\")\n```\n:::\n\n\n### Briefly describe the data\n\nThis dataset contains the total amount of household debt of six types in the United States, as well as total household debt, for every quarter between quarter 1 of 2003 and quarter 2 of 2021 inclusive.\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nThese data are tidy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Nothing needed here\n```\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#I check the structure of the dataset; everything is numeric except for `Year and Quarter`.\nstr(debt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [74 x 8] (S3: tbl_df/tbl/data.frame)\n $ Year and Quarter: chr [1:74] \"03:Q1\" \"03:Q2\" \"03:Q3\" \"03:Q4\" ...\n $ Mortgage        : num [1:74] 4.94 5.08 5.18 5.66 5.84 ...\n $ HE Revolving    : num [1:74] 0.242 0.26 0.269 0.302 0.328 0.367 0.426 0.468 0.502 0.528 ...\n $ Auto Loan       : num [1:74] 0.641 0.622 0.684 0.704 0.72 0.743 0.751 0.728 0.725 0.774 ...\n $ Credit Card     : num [1:74] 0.688 0.693 0.693 0.698 0.695 0.697 0.706 0.717 0.71 0.717 ...\n $ Student Loan    : num [1:74] 0.241 0.243 0.249 0.253 0.26 ...\n $ Other           : num [1:74] 0.478 0.486 0.477 0.449 0.447 ...\n $ Total           : num [1:74] 7.23 7.38 7.56 8.07 8.29 ...\n```\n:::\n\n```{.r .cell-code}\n#Though I preserve the original dataset as well, since keeping the year and quarter variable together in the original form is useful in some circumstances for readability, here, I separate them into two variables to make calculations easier.\n\ndebt2 <- debt %>% \n  separate(`Year and Quarter`, into = c(\"Year\", \"Quarter\"),sep = \":\")\n\n#Then, I drop the Q from the quarter variables by separating out the Q.\n\ndebt2 <- debt2 %>% \n  separate(Quarter, into = c(\"delete\", \"Quarter\"),sep = \"Q\")\n\n#Finally, I get rid of the blank variable created by this process, reunite the year and quarter, and change the variable type - it's now numeric! This \n\ndebt2 <- debt2 %>%\n  unite(`yearquarter`, Year:Quarter, sep = \"\", remove=TRUE)\n\ndebt2 <- debt2 %>%\n  mutate(yearquarter=as.numeric(yearquarter))\n\nstr(debt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [74 x 8] (S3: tbl_df/tbl/data.frame)\n $ Year and Quarter: chr [1:74] \"03:Q1\" \"03:Q2\" \"03:Q3\" \"03:Q4\" ...\n $ Mortgage        : num [1:74] 4.94 5.08 5.18 5.66 5.84 ...\n $ HE Revolving    : num [1:74] 0.242 0.26 0.269 0.302 0.328 0.367 0.426 0.468 0.502 0.528 ...\n $ Auto Loan       : num [1:74] 0.641 0.622 0.684 0.704 0.72 0.743 0.751 0.728 0.725 0.774 ...\n $ Credit Card     : num [1:74] 0.688 0.693 0.693 0.698 0.695 0.697 0.706 0.717 0.71 0.717 ...\n $ Student Loan    : num [1:74] 0.241 0.243 0.249 0.253 0.26 ...\n $ Other           : num [1:74] 0.478 0.486 0.477 0.449 0.447 ...\n $ Total           : num [1:74] 7.23 7.38 7.56 8.07 8.29 ...\n```\n:::\n:::\n\n\n## Time Dependent Visualization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(debt, aes(x=`Year and Quarter`, y=Total)) + \n  theme_classic(base_size = 20) + \n  geom_point(position=position_dodge(), stat=\"identity\") + \n  xlab(\"Year and Quarter\") +\n  ylab(\"Total All-Type Household Debt (trillions of $)\") + \n  theme(axis.text.x = element_text(angle=90)) +\n  theme(axis.text.x = element_text(size = 6)) +\n  theme(axis.title = element_text(size = 10)) \n```\n\n::: {.cell-output-display}\n![](MattEckstein_hw6_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n## Visualizing Part-Whole Relationships\n\nHere, I modify the above graph to display the relationship of mortgage debt to total debt, with the color indicating growth in mortgage debt and the line indicating growth in total debt. (I tried various approaches to making total debt bars that filled up to a certain point in a different color for the share of the total debt that was mortgage debt, but to no avail.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(debt, aes(x=`Year and Quarter`, y=Total, fill=Mortgage)) + \n  theme_classic(base_size = 20) + \n  geom_bar(position=position_dodge(), stat=\"identity\") + \n  xlab(\"Year and Quarter\") +\n  ylab(\"Mortgage Debt as Share of Total Household Debt\") +\n  theme(axis.text.x = element_text(angle=90)) +\n  theme(axis.text.x = element_text(size = 6)) +\n  theme(axis.title = element_text(size = 10)) \n```\n\n::: {.cell-output-display}\n![](MattEckstein_hw6_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "MattEckstein_hw6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}