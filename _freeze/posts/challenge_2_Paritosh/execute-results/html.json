{
  "hash": "2afbe5272de4a72ddb2ab8ab53a4fd26",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2 Paritosh\"\nauthor: \"Paritosh Gandhi\"\ndescription: \"Data wrangling: using group() and summarise()\"\ndate: \"05/26/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - railroads\n  - faostat\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a data set, and describe the data using both words and any supporting information (e.g., tables, etc)\n2)  provide summary statistics for different interesting groups within the data, and interpret those statistics\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, available in the `posts/_data` folder, using the correct R package and command.\n\n-   railroad\\*.csv or StateCounty2012.xls ⭐\n-   FAOstat\\*.csv or birds.csv ⭐⭐⭐\n-   hotel_bookings.csv ⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhtb <- read.csv(file = '_data/hotel_bookings.csv')\n\n\n\n\n#unique(df$adults)\n```\n:::\n\n\nAdd any comments or documentation as needed. More challenging data may require additional code chunks and documentation.\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(htb$hotel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Resort Hotel\" \"City Hotel\"  \n```\n:::\n\n```{.r .cell-code}\nunique(htb$arrival_date_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2015 2016 2017\n```\n:::\n\n```{.r .cell-code}\nunique(htb$country)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"PRT\"  \"GBR\"  \"USA\"  \"ESP\"  \"IRL\"  \"FRA\"  \"NULL\" \"ROU\"  \"NOR\"  \"OMN\" \n [11] \"ARG\"  \"POL\"  \"DEU\"  \"BEL\"  \"CHE\"  \"CN\"   \"GRC\"  \"ITA\"  \"NLD\"  \"DNK\" \n [21] \"RUS\"  \"SWE\"  \"AUS\"  \"EST\"  \"CZE\"  \"BRA\"  \"FIN\"  \"MOZ\"  \"BWA\"  \"LUX\" \n [31] \"SVN\"  \"ALB\"  \"IND\"  \"CHN\"  \"MEX\"  \"MAR\"  \"UKR\"  \"SMR\"  \"LVA\"  \"PRI\" \n [41] \"SRB\"  \"CHL\"  \"AUT\"  \"BLR\"  \"LTU\"  \"TUR\"  \"ZAF\"  \"AGO\"  \"ISR\"  \"CYM\" \n [51] \"ZMB\"  \"CPV\"  \"ZWE\"  \"DZA\"  \"KOR\"  \"CRI\"  \"HUN\"  \"ARE\"  \"TUN\"  \"JAM\" \n [61] \"HRV\"  \"HKG\"  \"IRN\"  \"GEO\"  \"AND\"  \"GIB\"  \"URY\"  \"JEY\"  \"CAF\"  \"CYP\" \n [71] \"COL\"  \"GGY\"  \"KWT\"  \"NGA\"  \"MDV\"  \"VEN\"  \"SVK\"  \"FJI\"  \"KAZ\"  \"PAK\" \n [81] \"IDN\"  \"LBN\"  \"PHL\"  \"SEN\"  \"SYC\"  \"AZE\"  \"BHR\"  \"NZL\"  \"THA\"  \"DOM\" \n [91] \"MKD\"  \"MYS\"  \"ARM\"  \"JPN\"  \"LKA\"  \"CUB\"  \"CMR\"  \"BIH\"  \"MUS\"  \"COM\" \n[101] \"SUR\"  \"UGA\"  \"BGR\"  \"CIV\"  \"JOR\"  \"SYR\"  \"SGP\"  \"BDI\"  \"SAU\"  \"VNM\" \n[111] \"PLW\"  \"QAT\"  \"EGY\"  \"PER\"  \"MLT\"  \"MWI\"  \"ECU\"  \"MDG\"  \"ISL\"  \"UZB\" \n[121] \"NPL\"  \"BHS\"  \"MAC\"  \"TGO\"  \"TWN\"  \"DJI\"  \"STP\"  \"KNA\"  \"ETH\"  \"IRQ\" \n[131] \"HND\"  \"RWA\"  \"KHM\"  \"MCO\"  \"BGD\"  \"IMN\"  \"TJK\"  \"NIC\"  \"BEN\"  \"VGB\" \n[141] \"TZA\"  \"GAB\"  \"GHA\"  \"TMP\"  \"GLP\"  \"KEN\"  \"LIE\"  \"GNB\"  \"MNE\"  \"UMI\" \n[151] \"MYT\"  \"FRO\"  \"MMR\"  \"PAN\"  \"BFA\"  \"LBY\"  \"MLI\"  \"NAM\"  \"BOL\"  \"PRY\" \n[161] \"BRB\"  \"ABW\"  \"AIA\"  \"SLV\"  \"DMA\"  \"PYF\"  \"GUY\"  \"LCA\"  \"ATA\"  \"GTM\" \n[171] \"ASM\"  \"MRT\"  \"NCL\"  \"KIR\"  \"SDN\"  \"ATF\"  \"SLE\"  \"LAO\" \n```\n:::\n\n```{.r .cell-code}\nunique(htb$market_segment)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Direct\"        \"Corporate\"     \"Online TA\"     \"Offline TA/TO\"\n[5] \"Complementary\" \"Groups\"        \"Undefined\"     \"Aviation\"     \n```\n:::\n\n```{.r .cell-code}\nunique(htb$reserved_room_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"C\" \"A\" \"D\" \"E\" \"G\" \"F\" \"H\" \"L\" \"P\" \"B\"\n```\n:::\n\n```{.r .cell-code}\nunique(htb$arrival_date_month)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"July\"      \"August\"    \"September\" \"October\"   \"November\"  \"December\" \n [7] \"January\"   \"February\"  \"March\"     \"April\"     \"May\"       \"June\"     \n```\n:::\n:::\n\n\nHence, the dataset contains booking data for two types of hotels, in 3 years time frame. The guests are from 177 countries and 10 types of rooms.\n\n\\\n\\## Provide Grouped Summary Statistics\n\nConduct some exploratory data analysis, using dplyr commands such as `group_by()`, `select()`, `filter()`, and `summarise()`. Find the central tendency (mean, median, mode) and dispersion (standard deviation, mix/max/quantile) for different subgroups within the data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhtb %>% \n  filter(hotel == \"City Hotel\") %>% \n  group_by(hotel) %>% \n  summarize(avg_adr = mean(adr))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  hotel      avg_adr\n  <chr>        <dbl>\n1 City Hotel    105.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhtb %>% \n  summarize(avg_adr = mean(adr))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   avg_adr\n1 101.8311\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhtb %>% \n  filter(hotel == \"Resort Hotel\", country %in% c(\"PRT\",\"GBR\",\"USA\",\"\",\"FRA\",\"POL\")) %>% \n  group_by(arrival_date_month) %>% \n  summarise(avg_adr = mean(adr))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 2\n   arrival_date_month avg_adr\n   <chr>                <dbl>\n 1 April                 74.7\n 2 August               181. \n 3 December              72.5\n 4 February              54.5\n 5 January               48.2\n 6 July                 148. \n 7 June                 105. \n 8 March                 56.1\n 9 May                   74.6\n10 November              46.5\n11 October               58.3\n12 September             91.3\n```\n:::\n:::\n\n\n### Explain and Interpret\n\nBe sure to explain why you choose a specific group. Comment on the interpretation of any interesting differences between groups that you uncover. This section can be integrated with the exploratory data analysis, just be sure it is included.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_1 <- htb%>%\n  group_by(hotel, reserved_room_type)%>%\n  summarise(price = mean(adr),\n            adults = mean(adults),\n            children = mean(children+babies, na.rm=TRUE)\n            )%>%\n  pivot_wider(names_from= hotel, \n              values_from = c(price, adults, children))\ntable_1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 7\n   reserved_room_type `price_City Hotel` price…¹ adult…² adult…³ child…⁴ child…⁵\n   <chr>                           <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 A                                96.2    76.2    1.78    1.78  0.0414  0.0370\n 2 B                                90.3   105.     1.57    2     0.567   0     \n 3 C                                85.5   161.     1.5     2.05  0.143   1.36  \n 4 D                               131.    104.     2.17    1.96  0.0456  0.0572\n 5 E                               157.    114.     2.07    1.95  0.281   0.0498\n 6 F                               189.    133.     2.01    1.97  1.64    0.0904\n 7 G                               202.    168.     2.27    2.02  1.05    1.38  \n 8 P                                 0       0      0       0     0       0     \n 9 H                                NA     188.    NA       2.71 NA       0.995 \n10 L                                NA     125.    NA       2.17 NA       0     \n# … with abbreviated variable names ¹​`price_Resort Hotel`,\n#   ²​`adults_City Hotel`, ³​`adults_Resort Hotel`, ⁴​`children_City Hotel`,\n#   ⁵​`children_Resort Hotel`\n```\n:::\n:::\n",
    "supporting": [
      "challenge_2_Paritosh_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}