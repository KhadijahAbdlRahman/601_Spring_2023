{
  "hash": "70fdc1aea6539e58e58c043b7eaa402a",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4: FedFundRate.csv Clean Up\"\nauthor: \"Lauren Zichittella\"\ndescription: \"More data wrangling: pivoting\"\ndate: \"03/22/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - fed_rates\n  - laurenzichittella\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\nRead in FedFundRate.csv and utilize functions to understand dataset and formulate next steps in clean-up\n\n### Steps\n1) Import data set. Utilize functions to understand data structure\n2) Recreate data with better named columns to faciliate easier processing downstream\n3) Utilize \"sanity checks\" to confirm no errors in logic or understanding \n4) Output basic characterization of dataset \n\n### Next stepts\n1) Create tidy version of dataset where each row represents a distinct date and type measurement\n2) Further characterize data to inform any additional cleaning to be done and start planning for graphical display\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in dataset and evaluate basics to understand any necessary basic cleanings that should be done before tidying\n\n   fedfundrate_raw <-read_csv(\"_data/FedFundsRate.csv\")\n   colnames(fedfundrate_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Year\"                         \"Month\"                       \n [3] \"Day\"                          \"Federal Funds Target Rate\"   \n [5] \"Federal Funds Upper Target\"   \"Federal Funds Lower Target\"  \n [7] \"Effective Federal Funds Rate\" \"Real GDP (Percent Change)\"   \n [9] \"Unemployment Rate\"            \"Inflation Rate\"              \n```\n:::\n\n```{.r .cell-code}\n   head(fedfundrate_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 10\n   Year Month   Day Federal Fu…¹ Feder…² Feder…³ Effec…⁴ Real …⁵ Unemp…⁶ Infla…⁷\n  <dbl> <dbl> <dbl>        <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1  1954     7     1           NA      NA      NA    0.8      4.6     5.8      NA\n2  1954     8     1           NA      NA      NA    1.22    NA       6        NA\n3  1954     9     1           NA      NA      NA    1.06    NA       6.1      NA\n4  1954    10     1           NA      NA      NA    0.85     8       5.7      NA\n5  1954    11     1           NA      NA      NA    0.83    NA       5.3      NA\n6  1954    12     1           NA      NA      NA    1.28    NA       5        NA\n# … with abbreviated variable names ¹​`Federal Funds Target Rate`,\n#   ²​`Federal Funds Upper Target`, ³​`Federal Funds Lower Target`,\n#   ⁴​`Effective Federal Funds Rate`, ⁵​`Real GDP (Percent Change)`,\n#   ⁶​`Unemployment Rate`, ⁷​`Inflation Rate`\n```\n:::\n\n```{.r .cell-code}\n   tail(fedfundrate_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 10\n   Year Month   Day Federal Fu…¹ Feder…² Feder…³ Effec…⁴ Real …⁵ Unemp…⁶ Infla…⁷\n  <dbl> <dbl> <dbl>        <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1  2016    12     1           NA    0.5     0.25    0.54      NA     4.7     2.2\n2  2016    12    14           NA    0.75    0.5    NA         NA    NA      NA  \n3  2017     1     1           NA    0.75    0.5     0.65      NA     4.8     2.3\n4  2017     2     1           NA    0.75    0.5     0.66      NA     4.7     2.2\n5  2017     3     1           NA    0.75    0.5    NA         NA    NA      NA  \n6  2017     3    16           NA    1       0.75   NA         NA    NA      NA  \n# … with abbreviated variable names ¹​`Federal Funds Target Rate`,\n#   ²​`Federal Funds Upper Target`, ³​`Federal Funds Lower Target`,\n#   ⁴​`Effective Federal Funds Rate`, ⁵​`Real GDP (Percent Change)`,\n#   ⁶​`Unemployment Rate`, ⁷​`Inflation Rate`\n```\n:::\n\n```{.r .cell-code}\n# Create pre-tidy version of data, changing variable names to make easier to reference in code \n   fedfundrate_pretidy <-read_csv(\"_data/FedFundsRate.csv\"\n                    , skip =1\n                    , col_names = c(\"year\",\t\"month\", \"day\", \"fedfunds_targetrate\", \"fedfunds_targetupper\",  \"fedfunds_targetlower\",\"fedfunds_effectiverate\", \"realgdp_percentchange\",\t\"unemployment_rate\", \t\"inflation_rate\"))\n   \n   # confirm updated read did not affect row count or column counts\n   nrow(fedfundrate_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 904\n```\n:::\n\n```{.r .cell-code}\n   nrow(fedfundrate_pretidy)   \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 904\n```\n:::\n\n```{.r .cell-code}\n   ncol(fedfundrate_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\n   ncol(fedfundrate_pretidy)   \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\n# Output basic summary to describe dataset \n   \n   # quick summary \n   print(summarytools::dfSummary(fedfundrate_pretidy, \n                        plain.ascii  = FALSE, \n                        style        = \"grid\", \n                        graph.magnif = 0.70, ),\n      method = 'render',\n      table.classes = 'table-condensed')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"container st-container\">\n<h3>Data Frame Summary</h3>\n<h4>fedfundrate_pretidy</h4>\n<strong>Dimensions</strong>: 904 x 10\n  <br/><strong>Duplicates</strong>: 0\n<br/>\n<table class=\"table table-striped table-bordered st-table st-table-striped st-table-bordered st-multiline table-condensed\">\n  <thead>\n    <tr>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>No</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Variable</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Stats / Values</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Freqs (% of Valid)</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Graph</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Valid</strong></th>\n      <th align=\"center\" class=\"st-protect-top-border\"><strong>Missing</strong></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td align=\"center\">1</td>\n      <td align=\"left\">year\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 1986.7 (17.2)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1954 &le; 1987.5 &le; 2017</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 28 (0)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">64 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wMWECoF9mBo3gAAAIdJREFUWMPt1W0KgCAMBmCPUJ2g7Abt/ndrskQDQzckyN73jx/0MFFM58bP/BDPKc1PFbcTHXB93MJnYHJEBFdzYXc3i+PRO04WqHcCvuTS30bn0u42ulDI4rIGrq+To89cuJj3FJ2UzF3hEzg4ODi4QZw8B3p3zbQ5rrFaHPfg/u28MtGNnBMKdOtreLlQwgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wMy0yMlQxNjo0MjowNSswMDowMB7QSgwAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDMtMjJUMTY6NDI6MDUrMDA6MDBvjfKwAAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">904\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">2</td>\n      <td align=\"left\">month\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 6.6 (3.5)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1 &le; 7 &le; 12</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 6 (0.5)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">12 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wMWECoLEdhF2QAAAHhJREFUWMPt1VEKgCAQRVGXUK6gdAfN/vdWMzhCCmH9BHIfCIO8I/NnCPMnXdnX8SzFZRHB4XA4HO4Pp3/X9sFpd8xF/x5taJ3epW4ji5Rnow6t03PUum9kt+LPPjobfKPqbkPnvF4bg65r4HA4HA6Ha116GXcz5wRiPdU5+m0ICAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wMy0yMlQxNjo0MjoxMSswMDowMCY1boEAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDMtMjJUMTY6NDI6MTErMDA6MDBXaNY9AAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">904\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">3</td>\n      <td align=\"left\">day\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 3.6 (6.8)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1 &le; 1 &le; 31</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 0 (1.9)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">29 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wMWECoLEdhF2QAAAEdJREFUWMPt17ENACAIBVFG0A30OwL772aBEltbclcQmkePWf0kzf5RO26543A4HA6Hw+FwOBwOV8TFd5zzLa/Gfp0+G1a/DRuzB6mhir3lAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIzLTAzLTIyVDE2OjQyOjExKzAwOjAwJjVugQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMy0wMy0yMlQxNjo0MjoxMSswMDowMFdo1j0AAAAASUVORK5CYII=\"></td>\n      <td align=\"center\">904\n(100.0%)</td>\n      <td align=\"center\">0\n(0.0%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">4</td>\n      <td align=\"left\">fedfunds_targetrate\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 5.7 (2.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">1 &le; 5.5 &le; 11.5</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 4 (0.5)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">63 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wMWECoLEdhF2QAAAIpJREFUWMPt1sENgCAMBVBGECfQuoHsv5uUhIN8SaAmGMn/p0r61PQAODd/fJlVYnZfy1J1IYaOjo6Ojm5uB6dkozvKrl86vCQ0Ovj4o9O3i8Hpw/mFy+PodXl1pIPhgksd4GBI4FKHWosLZXEbrhhcKujo6N67vMP1Oi1GO/3XzeC0eOukM9nNnAs2ao8pUem0tgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMy0wMy0yMlQxNjo0MjoxMSswMDowMCY1boEAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjMtMDMtMjJUMTY6NDI6MTErMDA6MDBXaNY9AAAAAElFTkSuQmCC\"></td>\n      <td align=\"center\">462\n(51.1%)</td>\n      <td align=\"center\">442\n(48.9%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">5</td>\n      <td align=\"left\">fedfunds_targetupper\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 0.3 (0.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0.2 &le; 0.2 &le; 1</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 0 (0.5)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">4 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGMAAABJBAMAAADbIoX2AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wMWECoLEdhF2QAAAFtJREFUSMft09EJACAIBNBGqA3KNqj9d+sjBziNCuTu24cIZ0qxIniqkj7hkJC8Io4mFzzZT3SphezzBwnJNeKoJTL7hYg0K+mThOQucdQSnT8j0NeTkEQkUbIAj7MdrIhLHwEAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDMtMjJUMTY6NDI6MTErMDA6MDAmNW6BAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTAzLTIyVDE2OjQyOjExKzAwOjAwV2jWPQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">103\n(11.4%)</td>\n      <td align=\"center\">801\n(88.6%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">6</td>\n      <td align=\"left\">fedfunds_targetlower\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 0.1 (0.1)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0 &le; 0 &le; 0.8</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 0 (2.4)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">4 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAGMAAABJBAMAAADbIoX2AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wMWECoLEdhF2QAAAFtJREFUSMft09EJACAIBNBGqA3KNqj9d+sjBziNCuTu24cIZ0qxIniqkj7hkJC8Io4mFzzZT3SphezzBwnJNeKoJTL7hYg0K+mThOQucdQSnT8j0NeTkEQkUbIAj7MdrIhLHwEAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDMtMjJUMTY6NDI6MTErMDA6MDAmNW6BAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTAzLTIyVDE2OjQyOjExKzAwOjAwV2jWPQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">103\n(11.4%)</td>\n      <td align=\"center\">801\n(88.6%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">7</td>\n      <td align=\"left\">fedfunds_effectiverate\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 4.9 (3.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0.1 &le; 4.7 &le; 19.1</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 4.2 (0.7)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">466 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wMWECoLEdhF2QAAAHxJREFUWMPt18EJwCAMBVBHqJ2gjRvU/XdrFZIexEjioUX+P+Sij4CikBDWT+TsVBJH2RqXn1xwHzm5NaNLvBuudfVQHS5LgYODg4PzufIBnw5XiteR1lRxSWsKBwf3X9d79CPXawo34Uhic+/ijKsT8GFzMimwI2PYrZwbLS6QijvliaoAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDMtMjJUMTY6NDI6MTErMDA6MDAmNW6BAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTAzLTIyVDE2OjQyOjExKzAwOjAwV2jWPQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">752\n(83.2%)</td>\n      <td align=\"center\">152\n(16.8%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">8</td>\n      <td align=\"left\">realgdp_percentchange\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 3.1 (3.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">-10 &le; 3.1 &le; 16.5</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 3.5 (1.1)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">113 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wMWECoLEdhF2QAAAF5JREFUWMPt1rENwCAMBVGPEDaAZAT23w2hxI3FF6G17hoantxYCLP8ldD91cq6S7inv+FwOBwOh8Phcjj1L9w5NReHm/lenbp4H4dbObVffsZ3zZ26r+bGeX+rlr8BeFFbGGuHQ68AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDMtMjJUMTY6NDI6MTErMDA6MDAmNW6BAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTAzLTIyVDE2OjQyOjExKzAwOjAwV2jWPQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">250\n(27.7%)</td>\n      <td align=\"center\">654\n(72.3%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">9</td>\n      <td align=\"left\">unemployment_rate\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 6 (1.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">3.4 &le; 5.7 &le; 10.8</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2.1 (0.3)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">71 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wMWECoLEdhF2QAAAJ1JREFUWMPt1dsNgCAMBVBGkA0UR2D/3SRpqMijUDUkQO//SXmUotT80c8YYw5NZcu701pxqznXLK+cQ+JWc9AsfAdInLghXOkDrblS4X8cPj6mQzSWIz4m0hENELjwMDkuRAM5enCXHf2gxNnsqGhw2ZLivrj0KtpcSr2LhkSVeldF0UaZDksyHZbs52CpfAcluzq31P2+d1a8mzkX4o10HOx8OGQAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDMtMjJUMTY6NDI6MTErMDA6MDAmNW6BAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTAzLTIyVDE2OjQyOjExKzAwOjAwV2jWPQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">752\n(83.2%)</td>\n      <td align=\"center\">152\n(16.8%)</td>\n    </tr>\n    <tr>\n      <td align=\"center\">10</td>\n      <td align=\"left\">inflation_rate\n[numeric]</td>\n      <td align=\"left\" style=\"padding:8;vertical-align:middle\"><table style=\"border-collapse:collapse;border:none;margin:0\"><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">Mean (sd) : 3.7 (2.6)</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">min &le; med &le; max:</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">0.6 &le; 2.8 &le; 13.6</td></tr><tr style=\"background-color:transparent\"><td style=\"padding:0;margin:0;border:0\" align=\"left\">IQR (CV) : 2.7 (0.7)</td></tr></table></td>\n      <td align=\"left\" style=\"vertical-align:middle\">106 distinct values</td>\n      <td align=\"left\" style=\"vertical-align:middle;padding:0;background-color:transparent;\"><img style=\"border:none;background-color:transparent;padding:0;max-width:max-content;\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAG0AAABPBAMAAAATslZYAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAD1BMVEX////9/v2mpqbw8PD///+xh0SBAAAAAnRSTlMAAHaTzTgAAAABYktHRACIBR1IAAAAB3RJTUUH5wMWECoLEdhF2QAAAJFJREFUWMPt1cENgCAMBVBGECfQugHdfzdT4SCKtHChkv5Lg/EFkRKcmz/+ygoAu5dkyR0imvupo03vcojBnDlz5syNcILruuz4ac1pdSC6rt/uELWbOf2uduyrrjKtGse096djfusoF5fT7uJrahwto8fRKONtLhWZo2NBo1RkLrXb7WH8VM6VSnjse0s2N39O3CRVDOTy3YUAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDMtMjJUMTY6NDI6MTErMDA6MDAmNW6BAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTAzLTIyVDE2OjQyOjExKzAwOjAwV2jWPQAAAABJRU5ErkJggg==\"></td>\n      <td align=\"center\">710\n(78.5%)</td>\n      <td align=\"center\">194\n(21.5%)</td>\n    </tr>\n  </tbody>\n</table>\n<p>Generated by <a href='https://github.com/dcomtois/summarytools'>summarytools</a> 1.0.1 (<a href='https://www.r-project.org/'>R</a> version 4.2.2)<br/>2023-03-22</p>\n</div>\n```\n:::\n\n```{.r .cell-code}\n  # Confirm date distinct by row \n  fedfundrate_pretidy%>%\n      select(year,month,day)%>%\n             n_distinct()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 904\n```\n:::\n\n```{.r .cell-code}\n  # evaluate the count of records per year/month & distribution of day \n  fedfundrate_pretidy  %>%\n    group_by(year,month) %>%\n       summarise(   n = n()\n                  , min(day, na.rm=T)\n                  , max_day = max(day, na.rm=T))%>%\n          arrange(year, month)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 753 × 5\n# Groups:   year [64]\n    year month     n `min(day, na.rm = T)` max_day\n   <dbl> <dbl> <int>                 <dbl>   <dbl>\n 1  1954     7     1                     1       1\n 2  1954     8     1                     1       1\n 3  1954     9     1                     1       1\n 4  1954    10     1                     1       1\n 5  1954    11     1                     1       1\n 6  1954    12     1                     1       1\n 7  1955     1     1                     1       1\n 8  1955     2     1                     1       1\n 9  1955     3     1                     1       1\n10  1955     4     1                     1       1\n# … with 743 more rows\n```\n:::\n\n```{.r .cell-code}\n  # evaluate the missingness of measures by year;\n    fedfundrate_pretidy  %>%\n    group_by(year) %>%\n       summarise( n = n(),\n                  na_count_fedfunds_targetrate    = sum(is.na(fedfunds_targetrate )),\n                  na_count_fedfunds_targetupper   = sum(is.na(fedfunds_targetupper)),\n                  na_count_fedfunds_targetlower   = sum(is.na(fedfunds_targetlower)), \n                  na_count_fedfunds_effectiverate = sum(is.na(fedfunds_effectiverate )), \n                  na_count_realgdp_percentchange  = sum(is.na(realgdp_percentchange)), \n                  na_count_unemployment_rate      = sum(is.na(unemployment_rate )), \n                  na_count_inflation_rate         = sum(is.na(inflation_rate)) )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 64 × 9\n    year     n na_count_fedfun…¹ na_co…² na_co…³ na_co…⁴ na_co…⁵ na_co…⁶ na_co…⁷\n   <dbl> <int>             <int>   <int>   <int>   <int>   <int>   <int>   <int>\n 1  1954     6                 6       6       6       0       4       0       6\n 2  1955    12                12      12      12       0       8       0      12\n 3  1956    12                12      12      12       0       8       0      12\n 4  1957    12                12      12      12       0       8       0      12\n 5  1958    12                12      12      12       0       8       0       0\n 6  1959    12                12      12      12       0       8       0       0\n 7  1960    12                12      12      12       0       8       0       0\n 8  1961    12                12      12      12       0       8       0       0\n 9  1962    12                12      12      12       0       8       0       0\n10  1963    12                12      12      12       0       8       0       0\n# … with 54 more rows, and abbreviated variable names\n#   ¹​na_count_fedfunds_targetrate, ²​na_count_fedfunds_targetupper,\n#   ³​na_count_fedfunds_targetlower, ⁴​na_count_fedfunds_effectiverate,\n#   ⁵​na_count_realgdp_percentchange, ⁶​na_count_unemployment_rate,\n#   ⁷​na_count_inflation_rate\n```\n:::\n\n```{.r .cell-code}\n   #evaluate mean and median measures by year \n   fedfundrate_pretidy  %>%\n      group_by(year) %>%\n         summarise(avg_fedfunds_targetrate = mean(fedfunds_targetrate, na.rm=TRUE),\n                   med_fedfunds_targetrate = median(fedfunds_targetrate, na.rm=TRUE),\n                 \n                   avg_fedfunds_targetupper = mean(fedfunds_targetupper, na.rm=TRUE),\n                   med_fedfunds_targetupper = median(fedfunds_targetupper, na.rm=TRUE),\n                 \n                   avg_fedfunds_targetlower = mean(fedfunds_targetlower, na.rm=TRUE),\n                   med_fedfunds_targetlower = median(fedfunds_targetlower, na.rm=TRUE),\n                 \n                   avg_fedfunds_effectiverate = mean(fedfunds_effectiverate, na.rm=TRUE),\n                   med_fedfunds_effectiverate = median(fedfunds_effectiverate, na.rm=TRUE),\n                 \n                   avg_realgdp_percentchange= mean(realgdp_percentchange, na.rm=TRUE),\n                   med_realgdp_percentchange = median(realgdp_percentchange, na.rm=TRUE),\n                 \n                   avg_unemployment_rate = mean(unemployment_rate, na.rm=TRUE),\n                   med_unemployment_rate = median(unemployment_rate, na.rm=TRUE),\n                 \n                   avg_inflation_rate = mean(inflation_rate, na.rm=TRUE),\n                   med_inflation_rate = median(inflation_rate, na.rm=TRUE) )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 64 × 15\n    year avg_f…¹ med_f…² avg_f…³ med_f…⁴ avg_f…⁵ med_f…⁶ avg_f…⁷ med_f…⁸ avg_r…⁹\n   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1  1954     NaN      NA     NaN      NA     NaN      NA    1.01   0.955   6.3  \n 2  1955     NaN      NA     NaN      NA     NaN      NA    1.78   1.66    6.62 \n 3  1956     NaN      NA     NaN      NA     NaN      NA    2.73   2.74    2.08 \n 4  1957     NaN      NA     NaN      NA     NaN      NA    3.10   3       0.425\n 5  1958     NaN      NA     NaN      NA     NaN      NA    1.57   1.6     2.97 \n 6  1959     NaN      NA     NaN      NA     NaN      NA    3.30   3.43    4.65 \n 7  1960     NaN      NA     NaN      NA     NaN      NA    3.22   3.28    0.975\n 8  1961     NaN      NA     NaN      NA     NaN      NA    1.96   1.99    6.35 \n 9  1962     NaN      NA     NaN      NA     NaN      NA    2.71   2.82    4.32 \n10  1963     NaN      NA     NaN      NA     NaN      NA    3.18   3.01    5.18 \n# … with 54 more rows, 5 more variables: med_realgdp_percentchange <dbl>,\n#   avg_unemployment_rate <dbl>, med_unemployment_rate <dbl>,\n#   avg_inflation_rate <dbl>, med_inflation_rate <dbl>, and abbreviated\n#   variable names ¹​avg_fedfunds_targetrate, ²​med_fedfunds_targetrate,\n#   ³​avg_fedfunds_targetupper, ⁴​med_fedfunds_targetupper,\n#   ⁵​avg_fedfunds_targetlower, ⁶​med_fedfunds_targetlower,\n#   ⁷​avg_fedfunds_effectiverate, ⁸​med_fedfunds_effectiverate, …\n```\n:::\n:::\n\n## Tidy Data \n\nThe FedFundsRate dataset is a wide data set. To make it tidy, the data will need to be pivoted long and a new variable created to represent the type of measure per observation. \n\n## Steps\n1) Pivot data longer to create one observation per distinct date (month, day, year) and type of measurement. Evaluate pivot results in the to confirm results as expected, proper number of rows and columns \n2) Drop records with missing value for measure \n3) Evaluate distribution of day by measure, year and month. Drop if single measure per each category to simplify going forward \n4) Evaluate frequency of records by measure type, year, and month to identify measures populated for sample time period to graph for analysis\n\n## Next steps \n1) Create single date variable by concatenating month, day, and year into single variable\n2) Mutate measure_varname to facilitate easier filtering to create graphics \n3) Test out ggplot options for displaying data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pivot longer to convert each measure to a row in the dataset #\nfedfundrate_tidy <- \n  fedfundrate_pretidy %>%\n      pivot_longer( cols = c(\"fedfunds_targetrate\", \"fedfunds_targetupper\", \"fedfunds_targetlower\",\"fedfunds_effectiverate\", \"realgdp_percentchange\",\t\"unemployment_rate\", \t\"inflation_rate\"), \n                   names_to = \"measure_varname\",\n                   values_to = \"measure_value\",\n                   values_drop_na = FALSE    )\n\n   # View first and last obs of pivoted data\n   head(fedfundrate_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n   year month   day measure_varname        measure_value\n  <dbl> <dbl> <dbl> <chr>                          <dbl>\n1  1954     7     1 fedfunds_targetrate             NA  \n2  1954     7     1 fedfunds_targetupper            NA  \n3  1954     7     1 fedfunds_targetlower            NA  \n4  1954     7     1 fedfunds_effectiverate           0.8\n5  1954     7     1 realgdp_percentchange            4.6\n6  1954     7     1 unemployment_rate                5.8\n```\n:::\n\n```{.r .cell-code}\n   tail(fedfundrate_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n   year month   day measure_varname        measure_value\n  <dbl> <dbl> <dbl> <chr>                          <dbl>\n1  2017     3    16 fedfunds_targetupper            1   \n2  2017     3    16 fedfunds_targetlower            0.75\n3  2017     3    16 fedfunds_effectiverate         NA   \n4  2017     3    16 realgdp_percentchange          NA   \n5  2017     3    16 unemployment_rate              NA   \n6  2017     3    16 inflation_rate                 NA   \n```\n:::\n\n```{.r .cell-code}\n   # Evaluate pivot results to confirm valid \n      # row counts\n      nrow(fedfundrate_raw) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 904\n```\n:::\n\n```{.r .cell-code}\n      nrow(fedfundrate_pretidy) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 904\n```\n:::\n\n```{.r .cell-code}\n      nrow(fedfundrate_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6328\n```\n:::\n\n```{.r .cell-code}\n      # column counts\n      ncol(fedfundrate_raw) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\n      ncol(fedfundrate_pretidy) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\n      ncol(fedfundrate_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n      # calculation check\n      nrow(fedfundrate_pretidy) * 7\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6328\n```\n:::\n\n```{.r .cell-code}\n# Remove observations where measure value missing;\n  fedfundrate_tidy <- \n     fedfundrate_tidy %>%\n        filter(!is.na(measure_value))    \n\n   # Capture change in row number, evaluate observations to confirm look as expected;\n   nrow(fedfundrate_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3132\n```\n:::\n\n```{.r .cell-code}\n   head(fedfundrate_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n   year month   day measure_varname        measure_value\n  <dbl> <dbl> <dbl> <chr>                          <dbl>\n1  1954     7     1 fedfunds_effectiverate          0.8 \n2  1954     7     1 realgdp_percentchange           4.6 \n3  1954     7     1 unemployment_rate               5.8 \n4  1954     8     1 fedfunds_effectiverate          1.22\n5  1954     8     1 unemployment_rate               6   \n6  1954     9     1 fedfunds_effectiverate          1.06\n```\n:::\n\n```{.r .cell-code}\n# Create table with frequency of day value  by measure, month, and year\n   ggplot(fedfundrate_tidy,aes(x = year, y =measure_value, fill = measure_varname)) +\n          geom_bar(stat = \"identity\", position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](laurenzichittella_challenge4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Mutate variables\n\nRight now, type of measure is defined using one variable. I will mutate this single value to parse types in hopes of making graphics that are more focused. A single date variable will be created by concatenating what are now separatae columns for  month, day, and year into single field. This will make displaying changes over time simpler to code.  Finally, I will evaluate options for graphing results to inform best options for displaying relationship between measures or lack thereof.  \n\n### Steps\n\n1) Mutate measure_varname to create separate variable for measure type and measure calculation \n2) Create single date variable from month, day, and year \n3) Create histogram to evaluate values of percent change GDP and figure out how to display this measure alongside others\n4) Utilize  new variables to filter, plot data, figure out best choice to graph relationships across measures and types\n\n\nNext steps:\n\nCreate final graphs to show relationship between federal fund rates & other measures \n\n   a - Federal funds line graph: rate, lower target, upper target \n   b - Federal funds line graph: rate * (GDP, Inflation rate, Unemployment rate)\n\n### Conclusion\n\nThere is a lot of information in this dataset and it seems the best way to display is by plotting federal fund rate only, omiting target upper and lower because they are tightly correlated with the rate and their addition makes the visuals too dense. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create two new variables to represent measure type and calculation \n   fedfundrate_tidy <- \n      fedfundrate_tidy %>% \n         separate(measure_varname, c(\"measure_type\", \"measure_calculation\"), sep = \"_\") \n\n  # confirm variables created as intended. \n   head(fedfundrate_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n   year month   day measure_type measure_calculation measure_value\n  <dbl> <dbl> <dbl> <chr>        <chr>                       <dbl>\n1  1954     7     1 fedfunds     effectiverate                0.8 \n2  1954     7     1 realgdp      percentchange                4.6 \n3  1954     7     1 unemployment rate                         5.8 \n4  1954     8     1 fedfunds     effectiverate                1.22\n5  1954     8     1 unemployment rate                         6   \n6  1954     9     1 fedfunds     effectiverate                1.06\n```\n:::\n\n```{.r .cell-code}\n# Create single date field by combining variables month, day, and year \n   fedfundrate_tidy <- \n     fedfundrate_tidy %>% \n        mutate('measure_date' = make_date(year = year, month = month, day = day))\n   \n  # confirm variables created as intended.    \n   head(fedfundrate_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n   year month   day measure_type measure_calculation measure_value measure_date\n  <dbl> <dbl> <dbl> <chr>        <chr>                       <dbl> <date>      \n1  1954     7     1 fedfunds     effectiverate                0.8  1954-07-01  \n2  1954     7     1 realgdp      percentchange                4.6  1954-07-01  \n3  1954     7     1 unemployment rate                         5.8  1954-07-01  \n4  1954     8     1 fedfunds     effectiverate                1.22 1954-08-01  \n5  1954     8     1 unemployment rate                         6    1954-08-01  \n6  1954     9     1 fedfunds     effectiverate                1.06 1954-09-01  \n```\n:::\n\n```{.r .cell-code}\n# Remove columns for month, day, and year \n   fedfundrate_tidy <- \n     fedfundrate_tidy %>% \n          select(-year, -month, -day)\n   \n  # confirm variables removed as intended.   \n   head(fedfundrate_tidy)   \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  measure_type measure_calculation measure_value measure_date\n  <chr>        <chr>                       <dbl> <date>      \n1 fedfunds     effectiverate                0.8  1954-07-01  \n2 realgdp      percentchange                4.6  1954-07-01  \n3 unemployment rate                         5.8  1954-07-01  \n4 fedfunds     effectiverate                1.22 1954-08-01  \n5 unemployment rate                         6    1954-08-01  \n6 fedfunds     effectiverate                1.06 1954-09-01  \n```\n:::\n\n```{.r .cell-code}\n# evaluate distribution of records and year across values of measure_type\n   fedfundrate_tidy%>%\n      group_by(measure_type)%>%\n          summarise(num_records = n(),\n                    min_measure_date    = min(measure_date),\n                    max_measure_date    = max(measure_date))%>%\n              arrange(desc(num_records))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  measure_type num_records min_measure_date max_measure_date\n  <chr>              <int> <date>           <date>          \n1 fedfunds            1420 1954-07-01       2017-03-16      \n2 unemployment         752 1954-07-01       2017-02-01      \n3 inflation            710 1958-01-01       2017-02-01      \n4 realgdp              250 1954-07-01       2016-10-01      \n```\n:::\n\n```{.r .cell-code}\n  # Look at histogram by measure calculation to evaluate distributions of rates versus percent change \n  ggplot(fedfundrate_tidy,\n     aes(x = measure_value, color = measure_calculation)) +\n     geom_density()   \n```\n\n::: {.cell-output-display}\n![](laurenzichittella_challenge4_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# isolate federal fund fed funds effective rate plus non-fedfunds measure   \n   fedfunds_graph <- \n      fedfundrate_tidy%>%\n         filter(measure_type==\"fedfunds\" & measure_calculation == \"effectiverate\"| measure_type !=\"fedfunds\"& measure_type !=\"realgdp\")  \n   \n   head(fedfunds_graph)   \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  measure_type measure_calculation measure_value measure_date\n  <chr>        <chr>                       <dbl> <date>      \n1 fedfunds     effectiverate                0.8  1954-07-01  \n2 unemployment rate                         5.8  1954-07-01  \n3 fedfunds     effectiverate                1.22 1954-08-01  \n4 unemployment rate                         6    1954-08-01  \n5 fedfunds     effectiverate                1.06 1954-09-01  \n6 unemployment rate                         6.1  1954-09-01  \n```\n:::\n\n```{.r .cell-code}\n   # confirm correct records selected   \n   fedfunds_graph%>%\n      group_by (measure_type, measure_calculation )%>%\n          summarise(num_records = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n# Groups:   measure_type [3]\n  measure_type measure_calculation num_records\n  <chr>        <chr>                     <int>\n1 fedfunds     effectiverate               752\n2 inflation    rate                        710\n3 unemployment rate                        752\n```\n:::\n\n```{.r .cell-code}\n# Create graph to show relationship between fed fund rate and other rate measures excluding % change GDP\n   \n   # bar chart - not great a great result. Next!\n   ggplot(fedfunds_graph,aes(x = measure_date, y =measure_value, fill = measure_type)) +\n          geom_bar(stat = \"identity\", position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](laurenzichittella_challenge4_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\n   # line plot - this is better but hard to see trend. Next!\n  ggplot(fedfunds_graph, aes(x=measure_date, y=measure_value, group=measure_type, color=measure_type)) +\n    geom_line()\n```\n\n::: {.cell-output-display}\n![](laurenzichittella_challenge4_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n\n```{.r .cell-code}\n  # line plot with regression line. That's much better! \n  ggplot(fedfunds_graph, aes(x = measure_date, y = measure_value, color = measure_type)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", fill = NA)\n```\n\n::: {.cell-output-display}\n![](laurenzichittella_challenge4_files/figure-html/unnamed-chunk-4-4.png){width=672}\n:::\n:::\n\n\n## Data Description \n\nThe FedFundRates dataset provides measures of economic conditions in the US between July 1, 1954 and March 16, 2017. Each row of data represents a distinct date (month, day, year) and can include up to 6 measurements including: federal fund target rate, federal fund upper & lower target rates, federal fund lower target rate, federal funds effective rate, GDP percent change, unemployment rate, and inflation rate. However, variable are not populated consistently across observations\n\nGraphs displayed below show the correlation between federal fund rates and measures for GDP, unemployment, and inflation. In short, how rates decrease alongside negative trends in economic health. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# filter dataframe to retain federal fund effective, GDP, unemployment, and inflation rates\n   fedfunds_final_graph <- \n      fedfundrate_tidy%>%\n         filter(measure_type==\"fedfunds\" & measure_calculation == \"effectiverate\"| measure_type !=\"fedfunds\") \n   \n   # confirm correct records selected   \n      fedfunds_final_graph%>%\n         group_by (measure_type, measure_calculation )%>%\n            summarise(num_records = n())   \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n# Groups:   measure_type [4]\n  measure_type measure_calculation num_records\n  <chr>        <chr>                     <int>\n1 fedfunds     effectiverate               752\n2 inflation    rate                        710\n3 realgdp      percentchange               250\n4 unemployment rate                        752\n```\n:::\n\n```{.r .cell-code}\n      head(fedfunds_final_graph)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  measure_type measure_calculation measure_value measure_date\n  <chr>        <chr>                       <dbl> <date>      \n1 fedfunds     effectiverate                0.8  1954-07-01  \n2 realgdp      percentchange                4.6  1954-07-01  \n3 unemployment rate                         5.8  1954-07-01  \n4 fedfunds     effectiverate                1.22 1954-08-01  \n5 unemployment rate                         6    1954-08-01  \n6 fedfunds     effectiverate                1.06 1954-09-01  \n```\n:::\n\n```{.r .cell-code}\n  # line plot with regression line. That's much better! \n  ggplot(fedfunds_final_graph, aes(x = measure_date, y = measure_value, color = measure_type)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", fill = NA)  \n```\n\n::: {.cell-output-display}\n![](laurenzichittella_challenge4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::",
    "supporting": [
      "laurenzichittella_challenge4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}