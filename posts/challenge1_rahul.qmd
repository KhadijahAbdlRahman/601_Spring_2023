---
title: "Challenge 1"
author: "Rahul Somu"
description: "Reading in data and creating a post"
date: "02/22/2023"
format:
  html:
    toc: true
    code-fold: true
    code-copy: true
    code-tools: true
categories:
  - challenge_1
  - railroads
  - faostat
  - wildbirds
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to

1)  read in a dataset, and

2)  describe the dataset using both words and any supporting information (e.g., tables, etc)

## Read in the Data

Read in one (or more) of the following data sets, using the correct R package and command.

-   railroad_2012_clean_county.csv ⭐
-   birds.csv ⭐⭐
-   FAOstat\*.csv ⭐⭐
-   wild_bird_data.xlsx ⭐⭐⭐
-   StateCounty2012.xls ⭐⭐⭐⭐

Find the `_data` folder, located inside the `posts` folder. Then you can read in the data, using either one of the `readr` standard tidy read commands, or a specialized package such as `readxl`.

```{r}
df_birds <- read_csv("_data/birds.csv")
```

Add any comments or documentation as needed. More challenging data sets may require additional code chunks and documentation.

## Describe the data

Using a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).

```{r}
#| label: summary
#summary of data frame
summary(df_birds)

#get shape and head of data frame
dim(df_birds)
head(df_birds,10)

# get unique area fields and items
area_unique <- unique(df_birds[ , c("Area Code", "Area")])
area_unique

items_unique <- unique(df_birds[,c("Item")])

#get rows with empty flags
sum(is.na(select(df_birds, Flag)))

#get range of year column
year <- select(df_birds, Year)
range_year <- c(min(year),max(year))
range_year

#Get Unique flags with all variables
flags_unique <- unique(df_birds[ , c("Domain", "Area","Item","Year","Flag","Flag Description")])
flags_unique

```
