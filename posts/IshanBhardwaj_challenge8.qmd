---
title: "Challenge 8"
author: "Ishan Bhardwaj"
description: "Joining Data Tables"
date: "05/21/2023"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_8
  - Ishan Bhardwaj
  - snl
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)
2)  tidy data (as needed, including sanity checks)
3)  mutate variables as needed (including sanity checks)
4)  join two or more data sets and analyze some aspect of the joined data

(be sure to only include the category tags for the data you use!)

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

  - military marriages ⭐⭐
  - faostat ⭐⭐
  - railroads  ⭐⭐⭐
  - fed_rate ⭐⭐⭐
  - debt ⭐⭐⭐
  - us_hh ⭐⭐⭐⭐
  - snl ⭐⭐⭐⭐⭐

```{r}
actors <- read_csv("_data/snl_actors.csv")
actors
casts <- read_csv("_data/snl_casts.csv")
casts
seasons <- read_csv("_data/snl_seasons.csv")
seasons
```

### Briefly describe the data

```{r}
colnames(actors)
colnames(casts)
colnames(seasons)
```

The *actors* dataset provides general cast and gender information for the cast on SNL. The *casts* dataset tells us which SNL seasons each actor participated in (marked by "sid" variable) and details about each actor's participation in that season. The *seasons* dataset provides general information about different SNL seasons *only*, such as the year the season aired, the start and end date, and the number of episodes in that season.

## Tidy Data (as needed)

Is your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.

This data is already tidy because each relevant variable has its own column, each case its own row, and each value its own cell. One change we could possibly make is collapsing the first episode and last episode dates into one column for the *casts* and *seasons* datasets, but that would make us repeat actor names and season IDs which could look untidy.

Are there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?

Document your work here.

```{r}
casts <- casts %>%
  mutate(first_epid = ymd(first_epid), last_epid = ymd(last_epid))
casts

seasons <- seasons %>%
  mutate(first_epid = ymd(first_epid), last_epid = ymd(last_epid))
seasons
```

The first and last episode date columns in the *casts* and *seasons* datasets are not in the correct format. Hence, I mutated them into the lubridate ymd() format.

## Join Data

```{r}
merged <- actors %>%
  left_join(casts, by = "aid") %>%
  rename("actor_first_epid" = "first_epid", "actor_last_epid" = "last_epid", "n_actor_episodes" = "n_episodes") %>%
  left_join(seasons, by = "sid") %>%
  rename("season_first_epid" = "first_epid", "season_last_epid" = "last_epid") %>%
  select(1, 4, 3, 2, 5, 6, 12:14, 7:11) %>%
  arrange(season_first_epid)
merged
```

We want to merge all these datasets into one. First, we match all the actor IDs in *actors* to those in *casts* and merge them using left_join(). We then rename the date and episode count columns so we can heave a clear differentiation when we make the next merge. Now we have a dataset with general actor information **and** their cast participation information for different SNL seasons. Finally, we match all the season IDs in this merged table to those in *seasons* and merge them using left_join(). We rename the newly added date columns such that they correspond to entries from the *seasons* dataset. Now, we have a fully joined dataset - *merged* - that contains general actor information, cast information for each actor, and general information for each season that each actor participated in. I have rearranged this dataset to look more coherent using select() and arranged the entries in ascending order of season start date.

## Visualizations

```{r}
merged %>%
  ggplot(aes(sid, fill = gender)) +
  geom_histogram(bins = 20) + 
  theme_minimal() +
  labs(title = "Bar Plot", subtitle = "Cast composition for different SNL seasons", y = "No. of cast members", x = "Season ID", fill = "Gender")
```

This graphs tells us the number of cast members for different SNL seasons (denoted by their season IDs) and the gender composition of the casts for each season.
