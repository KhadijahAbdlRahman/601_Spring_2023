---
title: "Challenge 8"
author: "Aditya Salveru"
description: "Joining Data"
date: "05/22/2023"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_8
  - railroads
  - snl
  - faostat
  - debt
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)
2)  tidy data (as needed, including sanity checks)
3)  mutate variables as needed (including sanity checks)
4)  join two or more data sets and analyze some aspect of the joined data

(be sure to only include the category tags for the data you use!)

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

  - military marriages ⭐⭐
  - faostat ⭐⭐
  - railroads  ⭐⭐⭐
  - fed_rate ⭐⭐⭐
  - debt ⭐⭐⭐
  - us_hh ⭐⭐⭐⭐
  - snl ⭐⭐⭐⭐⭐

Read the SNL data sets:
```{r}

actors <- read.csv("_data/snl_actors.csv")
seasons <- read.csv("_data/snl_seasons.csv")
casts <- read.csv("_data/snl_casts.csv")

```

### Briefly describe the data

## Tidy Data (as needed)


```{r}
dim(actors)
head(actors,10)

dim(seasons)
head(seasons,10)

dim(casts)
head(casts,10)

```
These three datasets include details about the casts, actors, and seasons of the TV show "Saturday Night Live." These dataframes' dimensions allow us to see that Saturday Night Live ran for 46 seasons and featured 2306 actors in total. The "casts" dataset includes information about the cast members' appearances on the show, including specifics like their highlighted episodes, number of appearances, and other pertinent data. The "actors" dataset contains specific actor-related information. The "seasons" dataset contains details on each season of the show, including the premiere and finale episodes, the year that each season first aired, and the overall number of episodes that season had.


Check for NA values
```{r}
colSums(is.na(actors))

colSums(is.na(seasons))

colSums(is.na(casts))
```
There are not many missing values apart from the first and last epid in the casts table. We will clean it if necessary.


## Join Data

```{r}
actors_and_casts <- actors %>%
  inner_join(casts, by="aid")

actors_and_casts_and_seasons <- actors_and_casts %>%
  inner_join(seasons, by="sid")

colSums(is.na(actors_and_casts_and_seasons))


```
Ignore the columns with NA values

```{r}
exclude_columns <- c("last_epid.x", "first_epid.x")

actors_and_casts_and_seasons <- actors_and_casts_and_seasons %>% 
  select(-one_of(exclude_columns))
head(actors_and_casts_and_seasons)
```

From this joined data, we can plot the gender distribution over the years in the show

```{r}
data <- actors_and_casts_and_seasons %>% 
  select(year, gender) %>%
  filter(gender == "male" | gender == "female")
# Create the line plot

# Count the number of occurrences of each gender per year
gender_counts <- data %>% group_by(year, gender) %>% summarise(count = n())

# Create the line plot
ggplot(gender_counts, aes(x = year, y = count, group = gender, color = gender)) +
  geom_line() +
  geom_point(size = 3) +
  labs(x = "Year", y = "Count", color = "Gender") +
  ggtitle("Gender Distribution over Years")


```