---
title: "Challenge 7"
author: "Maanusri Balasubramanian"
description: "Visualizing Multiple Dimensions"
date: "05/08/2023"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_7
  - hotel_bookings
  - maanusri balasubramanian
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2)  tidy data (as needed, including sanity checks)
3)  mutate variables as needed (including sanity checks)
4)  Recreate at least two graphs from previous exercises, but introduce at least one additional dimension that you omitted before using ggplot functionality (color, shape, line, facet, etc) The goal is not to create unneeded [chart ink (Tufte)](https://www.edwardtufte.com/tufte/), but to concisely capture variation in additional dimensions that were collapsed in your earlier 2 or 3 dimensional graphs.
   - Explain why you choose the specific graph type
5) If you haven't tried in previous weeks, work this week to make your graphs "publication" ready with titles, captions, and pretty axis labels and other viewer-friendly features

[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code. And anyone not familiar with Edward Tufte should check out his [fantastic books](https://www.edwardtufte.com/tufte/books_vdqi) and [courses on data visualizaton.](https://www.edwardtufte.com/tufte/courses)

(be sure to only include the category tags for the data you use!)

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

  - eggs ⭐
  - abc_poll ⭐⭐
  - australian_marriage ⭐⭐
  - hotel_bookings ⭐⭐⭐
  - air_bnb  ⭐⭐⭐
  - us_hh ⭐⭐⭐⭐
  - faostat ⭐⭐⭐⭐⭐

```{r}

# reading dataset from CSV
bookings <- read.csv("_data/hotel_bookings.csv")

# peaking into the dataset
head(bookings)

# number of rows
nrow(bookings)

# number of columns
ncol(bookings)

# print column names
colnames(bookings)

```

### Briefly describe the data

The dataset contains information about hotel bookings made in Resort Hotel and City Hotel during the years 2015, 2016 and 2017. The dataset contains 119390 rows and 32 columns. Each entry in the dataset contains information about a particular booking like guest information, date of arrival, room information, payment information, show/no-show information, etc.

## Tidy Data (as needed)

Is your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.

The data is not tidy and work needs to be done:
1. The date information is split in multiple columns, combining these would make is easier for analysis. Creating a new column "arrival_date" by getting the date from "arrival_date_day_of_month", "arrival_date_month","arrival_date_year" columns and dropping these 3 columns.
2. previous_bookings_not_canceled - this information is redundant and can be calculated from the columns "stays_in_weekend_nights" and "stays_in_week_nights". So we can drop this column.
3. is_repeated_guest - again, this is redundant information. If atleast one of "stays_in_weekend_nights" and "stays_in_week_nights" is non-zero, then is_repeated_guest would be 1, else 0. So we can remove this column too.
4. Introducing column "children_count" - gives total of children plus babies. Removing columns "children" and "babies".

We'll be dropping 3 + 1 + 1 + 2 columns and adding 2 column. So we'll have 27 columns after tidying.

```{r}

# combining arrival date information into 1 column
tidy_bookings <- bookings %>%
  mutate(arrival_date = (str_c(arrival_date_day_of_month, arrival_date_month, arrival_date_year, sep = "/")), arrival_date = dmy(arrival_date), .after = lead_time)

# removing all the above mentioned redundant data
tidy_bookings <- tidy_bookings[,-c(5, 6, 8, 14, 16)]

# combining children and babies information into 1 column - child
tidy_bookings <- tidy_bookings %>%
                  mutate(childs = children + babies, .after = adults) %>%
                  dplyr::select(-c("children","babies"))
head(tidy_bookings)

```

Are there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?

Document your work here.

```{r}

# cumulative info based on customer type
customer_types <- tidy_bookings %>%
  group_by(hotel, arrival_date, customer_type) %>%
  count(arrival_date, hotel, customer_type, .drop = F)
customer_types

# cumulative info based on deposit type
deposit_types <- tidy_bookings %>%
  group_by(hotel, arrival_date, deposit_type) %>%
  count(arrival_date, hotel, deposit_type, .drop = F)
deposit_types

```

## Visualization with Multiple Dimensions

This visualization depicts the count of different customer types over the years in both city hotel and resort hotel.

```{r}

# Count of customer types in city hotel and resort hotel
ggplot(customer_types, aes(arrival_date, n, col = customer_type)) +
  geom_line() +
  facet_wrap(vars(hotel)) +
  scale_x_date() +
  theme(axis.text.x = element_text(size = 5))

```

This visualization depicts the count of different deposit types over the years in both city hotel and resort hotel.


```{r}

# Count of deposit types in city hotel and resort hotel
ggplot(deposit_types, aes(arrival_date, n, col = deposit_type)) +
  geom_line() +
  facet_wrap(vars(hotel)) +
  scale_x_date() +
  theme(axis.text.x = element_text(size = 5))

```
