---
title: "Challenge 7"
author: "Harsha Kanaka Eswar Gudipudi"
description: "Visualizing Multiple Dimensions"
date: "05/18/2023"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_7
  - Harsha Kanaka Eswar Gudidpudi
  - abc_poll_2021.csv
  
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(lubridate)
library(dplyr)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2)  tidy data (as needed, including sanity checks)
3)  mutate variables as needed (including sanity checks)
4)  Recreate at least two graphs from previous exercises, but introduce at least one additional dimension that you omitted before using ggplot functionality (color, shape, line, facet, etc) The goal is not to create unneeded [chart ink (Tufte)](https://www.edwardtufte.com/tufte/), but to concisely capture variation in additional dimensions that were collapsed in your earlier 2 or 3 dimensional graphs.
   - Explain why you choose the specific graph type
5) If you haven't tried in previous weeks, work this week to make your graphs "publication" ready with titles, captions, and pretty axis labels and other viewer-friendly features

[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code. And anyone not familiar with Edward Tufte should check out his [fantastic books](https://www.edwardtufte.com/tufte/books_vdqi) and [courses on data visualizaton.](https://www.edwardtufte.com/tufte/courses)

(be sure to only include the category tags for the data you use!)

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

  - eggs ⭐
  - abc_poll ⭐⭐
  - australian_marriage ⭐⭐
  - hotel_bookings ⭐⭐⭐
  - air_bnb  ⭐⭐⭐
  - us_hh ⭐⭐⭐⭐
  - faostat ⭐⭐⭐⭐⭐

```{r}
# Read in the data
df <- read.csv("_data/abc_poll_2021.csv")
head(df)
```


### Briefly describe the data

The dataset consists of 527 observations, each representing an individual. The variables in the dataset include demographic information such as age, gender, ethnicity, education level, household size, income range, marital status, and region of residence. The dataset also includes variables related to work status, employment, and political affiliation. Additionally, there are multiple-choice questions and responses, along with measures of concern, self-perceived quality of life, and optimism/pessimism about the future. The dataset also contains information about the individual's willingness to be interviewed and weights assigned to each observation. The dataset provides a comprehensive overview of various demographic and socio-political factors for a sample of individuals. It offers valuable insights into the characteristics and perspectives of the respondents, making it suitable for analyzing relationships and patterns among the variables and drawing conclusions about the population they represent.

```{r}
dim(df)
summary(df)
# Get unique values for the ppstaten column
unique_ppstaten <- unique(df$ppstaten)
cat(paste(unique_ppstaten, collapse = ", "))
str(df)
```


## Tidy Data (as needed)

Is your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\

Taking the selected columns Q1_a, Q1_b, Q1_c, Q1_d, Q1_e, and Q1_f and transforming them into two new columns: Question and Response. The Question column contains the names of the original columns, and the Response column contains the corresponding values. It becomes easier to perform operations such as grouping, filtering, and plotting.
```{r}
tidy_data <- df %>%
  select(ppgender, ppethm, ppmarit5, ppinc7, ppstaten, Q1_a, Q1_b, Q1_c, Q1_d, Q1_e, Q1_f, Q2, Q3, Q4, Q5) %>%
  pivot_longer(cols = c(Q1_a, Q1_b, Q1_c, Q1_d, Q1_e, Q1_f),
               names_to = "Question",
               values_to = "Response") %>%
  filter(!is.na(Response))
head(tidy_data %>% select(Question, Response))
```


Are there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?

Creating a new column called "ppage_category" the cut() function. This new column categorizes the values in the "ppage" column into different age groups based on specified intervals. The resulting "ppage_category" column provides a categorical representation of the age groups: "Young", "Middle-aged", "Senior", and "Unknown".

```{r}
selected_data <- df[, c("id", "ppage", "ppeducat", "ppgender", "ppethm", "pphhsize", "ppinc7")]

selected_data$ppage_category <- cut(selected_data$ppage,
                                    breaks = c(0, 30, 50, 70, Inf),
                                    labels = c("Young", "Middle-aged", "Senior", "Unknown"))

```


Document your work here.


## Visualization with Multiple Dimensions
creating two visualizations. The first is a bar chart showing the count of responses for each question. The second is a stacked bar chart displaying the count of responses for each question, grouped by gender and ethnicity.These visualizations allow us to explore the distribution of responses across different questions and examine how it varies by gender and ethnicity.


```{r}
# Create a bar chart of count by Question and Response
ggplot(tidy_data, aes(x = Question, fill = Response)) +
  geom_bar() +
  labs(title = "Count by Question and Response",
       x = "Question",
       y = "Count",
       fill = "Response") +
  theme_bw()

# Create a stacked bar chart of count by Question response Approve, grouped by Gender and Ethnicity
ggplot(tidy_data %>%filter(Response == "Approve"), aes(x = Question, fill = ppethm)) +
  geom_bar(position = "fill") +
  facet_wrap(~ppgender) +
  labs(title = "Count by Question, Gender, and Ethnicity",
       x = "Question",
       y = "Proportion",
       fill = "Ethnicity") +
  theme_bw()



```
