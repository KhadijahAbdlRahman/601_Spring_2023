---
title: "Challenge 6"
author: "Maanusri Balasubramanian"
description: "Visualizing Time and Relationships"
date: "05/06/2023"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_6
  - maanusri balasubramanian
  - usa_households
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2)  tidy data (as needed, including sanity checks)
3)  mutate variables as needed (including sanity checks)
4)  create at least one graph including time (evolution)
   - try to make them "publication" ready (optional)
   - Explain why you choose the specific graph type
5)  Create at least one graph depicting part-whole or flow relationships
   - try to make them "publication" ready (optional)
   - Explain why you choose the specific graph type

[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.

(be sure to only include the category tags for the data you use!)

## Read in data

Read in one (or more) of the following datasets, using the correct R package and command.

  - debt  ⭐
  - fed_rate ⭐⭐
  - abc_poll ⭐⭐⭐
  - usa_hh ⭐⭐⭐
  - hotel_bookings ⭐⭐⭐⭐
  - AB_NYC ⭐⭐⭐⭐⭐

  

```{r}
# reading dataset from CSV
ab <- read.csv("_data/AB_NYC_2019.csv")

# peaking into the dataset
head(ab)

# number of rows
nrow(ab)

# number of columns
ncol(ab)

# print column names
colnames(ab)
```

### Briefly describe the data

The dataset contains information about Airbnbs in all boroughs in New York City. The dataset has 48895 entries and 16 columns. Each row gives us information about the particular Airbnb like type information, location information, owner information, reviews, etc.

## Tidy Data (as needed)

Is your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.

The data is already tidy for the visualizations that I plan to do, so no work needs to be done.

```{r}

head(ab)

```

Are there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?

Document your work here.

```{r}

ab_year <- ab %>% drop_na(last_review)

ab_year <- mutate(ab_year, Date = ymd(last_review)) %>% 
  mutate(day = day(Date), month = month(Date, label = TRUE), year = year(Date)) %>%
  select(id, neighbourhood_group:year)

yearly_price <-ab_year  %>% 
    filter(availability_365>0)  %>% 
    filter(price > quantile(price)[2] - 1.5 * IQR(price) & price < quantile(price)[4] + 1.5 * IQR(price))  %>% 
    drop_na(year) %>%
    group_by(year)  %>%
    summarise(Mean = mean(price, na.rm = TRUE))
  
```


## Time Dependent Visualization

The visualization depicts the price trend based on the last year of review.

```{r}

ggplot(yearly_price, aes(x = as.integer(year), y = Mean)) +
  geom_line(color = "orange", linewidth = 0.4) +
  labs(title = "Price Trend by Last Review Year",
       x = "Year of Latest Review") +
  scale_x_continuous(
    breaks = seq(min(as.integer(yearly_price$year)), max(as.integer(yearly_price$year)), by = 1),
    labels = seq(min(as.integer(yearly_price$year)), max(as.integer(yearly_price$year)), by = 1),
    expand = c(0, 0)
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 18, face = "bold"),
    axis.title = element_text(size = 10),
    axis.text = element_text(size = 10),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    axis.line = element_line(color = "grey")
  )


```


## Visualizing Part-Whole Relationships

The stacked barchart helps us understand the distribution of room types in each borough. This gives us an overall understanding about the proportion of different room types in each borough.

```{r}

ggplot(ab, aes(neighbourhood_group, fill = room_type)) +
  geom_bar() +
  labs(
    title = "Distribution of Room Types in Each Borough",
    x = "Borough",
    y = "Count"
  ) +
  theme_minimal()

```

